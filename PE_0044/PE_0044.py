# -*- coding: utf-8 -*-
"""

PE_ 0044

Pentagonal  numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
 pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
 
Created on Sat Jul 02 09:48:49 2016

@author: Mike
"""
#stevem1191
from timeit import default_timer as timer
def pp():

    start = timer()
    
    pents = {}
    for n in range(1,2500+1):
      pents[(n*(3*n-1)/2)] = True
    
    candidates = [(j,k) for j in pents for k in pents if j+k in pents and abs(j-k) in pents]
    
    print "Minimum D =",candidates[0][1]-candidates[0][0]
    
    print "Elapsed time:", timer() - start,"s"


import time
from math import sqrt
from itertools import count,permutations
def pentpair():
    n=0
    top=2200
    ps=[]

    for n in range(1,2*top+1):
        ps.append(n*(3*n-1)/2) 

    for m,n in permutations(range(1,top),2):
        if m<n:
            if ps[m+n-1]<2*ps[n-1]:
                continue
            if 3*m*(n-m)+ps[n-m-1] in ps[n-m:6*n*(n-m)]:
                print 'diff',m,n,is_pentagonal(ps[n-1]-ps[m-1])
                if ps[m+n-1]-3*m*n in ps[:n+m]:
                    print 'sum',m,n,is_pentagonal(ps[m-1]+ps[n-1])
                    print m,n,ps[m-1],ps[n-1],is_pentagonal(ps[n-1]-ps[m-1])
                    break
        
    
def pentagonal (n):
    return n*(3*n-1)/2


def test(top):
    g,l=0,0
    for m,n in permutations(range(1,top),2):
        if m<n:
#            print m,n,pentagonal(m)+pentagonal(n),pentagonal(n)-pentagonal(m),
            if 6*n*(n-m)>top:
                g+=1
            else:
                l +=1
    print g,l



def is_pentagonal(num):
    n = (sqrt(24*num+1)+1)/6
    return n == int(n) 
    p
    
    
    
    
# from nupri for Problem 45 - this is brilliant
#it notices that the difference betwqeen p number increments by 3 each time,
#while that between h numbers increments by 4
#t0 = time()
#from itertools import count
#
#pentagonal_delta = count(1, 5-2)
#hexagonal_delta = count(1, 6-2)
#p = 0
#h = 0
#while not p == h > 40755:
#    if p <= h:
#        p += next(pentagonal_delta)
#    if h < p:
#        h += next(hexagonal_delta)
#
#print(p)
#print('Elapsed time:', time()-t0)