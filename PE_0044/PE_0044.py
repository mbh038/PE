# -*- coding: utf-8 -*-
"""

PE_ 0044

Pentagonal  numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
 pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
 
Created on Sat Jul 02 09:48:49 2016

@author: Mike
"""

#stevem1191
from timeit import default_timer as timer
def pentpair():
    from timeit import default_timer as timer
    start = timer()    
    ps={}
    for n in range(1,2500+1):
    ps[n*(3*n-1)/2] =True       
    candidates=[(m,n) for m in ps for n in ps if m+n in ps and abs(n-m) in ps]
    print candidates[0][1]-candidates[0][0]    
    print 'Elapsed time: ',timer()-start
    
    start = timer()    
    ps=set()
    for n in range(1,2500+1):
    ps.add(n*(3*n-1)/2)      
    candidates=[(m,n) for m in ps for n in ps if m+n in ps and abs(n-m) in ps]
    print candidates[0][1]-candidates[0][0]    
    print 'Elapsed time: ',timer()-start
    
    start = timer()    
    ps=[]
    for n in range(1,2500+1):
    ps.append(n*(3*n-1)/2)      
    candidates=[(m,n) for m in ps for n in ps if m+n in ps and abs(n-m) in ps]
    print candidates[0][1]-candidates[0][0]    
    print 'Elapsed time: ',timer()-start
       
    
def pentagonal (n):
    return n*(3*n-1)/2

#from timeit import default_timer as timer
import random
def test(myguess=5,size=1000,nloop=1000):
    print
    r_size=random.sample(xrange(size), size)
    
    mylist_ascending=range(1,size)
    mylist_descending=range(size,1,-1)
    mylist_randoms = r_size
    
    myset_ascending=set(range(size))
    myset_descending=set(range(size,1,-1))
    myset_randoms = set(r_size)
    
    mydict_ascending={}
    for i in range(size):
        mydict_ascending[i]=i
        
    mydict_descending={}
    for i in range(size):
        mydict_descending[i]=size-i
        
    mydict_random={}
    for i in range(size):
        mydict_random[i]=r_size[i]
        
    start=timer() 
    for i in range(nloop):
        myguess in mylist_ascending
    print 'mylist_ascending',timer()-start
    
    start=timer() 
    for i in range(nloop):
        myguess in mylist_descending
    print 'mylist_descending',timer()-start
 
    start=timer() 
    for i in range(nloop):
        myguess in mylist_randoms
    print 'mylist_randoms',timer()-start
    print
    start=timer() 
    for i in range(nloop):
        myguess in myset_ascending
    print 'myset_ascending',timer()-start
    
    start=timer() 
    for i in range(nloop):
        myguess in myset_descending
    print 'myset_descending',timer()-start
    
    start=timer() 
    for i in range(nloop):
        myguess in myset_randoms
    print 'myset_randoms',timer()-start
    print
    start=timer() 
    for i in range(nloop):
        myguess in mydict_ascending
    print 'mydict_ascending',timer()-start

    start=timer() 
    for i in range(nloop):
        myguess in mydict_descending
    print 'mydict_decending',timer()-start
    
    start=timer() 
    for i in range(nloop):
        myguess in mydict_random
    print 'mydict_random',timer()-start


def is_pentagonal(num):
    n = (sqrt(24*num+1)+1)/6
    return n == int(n) 
    p
    
    
    
    
# from nupri for Problem 45 - this is brilliant
#it notices that the difference betwqeen p number increments by 3 each time,
#while that between h numbers increments by 4
#t0 = time()
#from itertools import count
#
#pentagonal_delta = count(1, 5-2)
#hexagonal_delta = count(1, 6-2)
#p = 0
#h = 0
#while not p == h > 40755:
#    if p <= h:
#        p += next(pentagonal_delta)
#    if h < p:
#        h += next(hexagonal_delta)
#
#print(p)
#print('Elapsed time:', time()-t0)