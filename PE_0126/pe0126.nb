(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    272176,       5140]
NotebookOptionsPosition[    269990,       5063]
NotebookOutlinePosition[    270347,       5079]
CellTagsIndexPosition[    270304,       5076]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["22,46,78,118", "WolframAlphaLong",
 CellChangeTimes->{{3.692680773488*^9, 3.692680781327289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"2", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "*", "y"}], "+", 
       RowBox[{"x", "*", "z"}], "+", 
       RowBox[{"y", "*", "z"}]}], ")"}], "+", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.692681738406097*^9, 3.6926818903110533`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"11", ",", "1", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.692681822238825*^9, 3.692681835088023*^9}, {
  3.69268191433565*^9, 3.692681915453586*^9}}],

Cell[BoxData["46"], "Output",
 CellChangeTimes->{{3.692681836059577*^9, 3.692681869319365*^9}, {
  3.692681909444758*^9, 3.6926819178085833`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4", ",", "6", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.692681922243487*^9, 3.692681969680841*^9}, {
  3.6926820403756943`*^9, 3.6926820495030117`*^9}, {3.692684003012656*^9, 
  3.692684059022744*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "88", ",", "136", ",", "192", ",", "256", ",", "328", ",", "408", ",", 
   "496", ",", "592", ",", "696", ",", "808", ",", "928", ",", "1056", ",", 
   "1192", ",", "1336", ",", "1488", ",", "1648", ",", "1816", ",", "1992", 
   ",", "2176", ",", "2368"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6926819717329187`*^9, 3.692682052549831*^9, {3.692684007083043*^9, 
   3.692684063092435*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nvals", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "b", ",", "c", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "1", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "1", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.692684074352417*^9, 3.692684078686797*^9}, {
  3.6926843120508137`*^9, 3.6926843503462276`*^9}, {3.6926896570734987`*^9, 
  3.69268969602177*^9}, {3.692689882353035*^9, 3.6926899684240723`*^9}, {
  3.692690002869248*^9, 3.6926900086285048`*^9}, {3.6926900803822727`*^9, 
  3.692690085580551*^9}, {3.692690133162201*^9, 3.692690142401464*^9}, {
  3.692717373149714*^9, 3.692717386266115*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "6", ",", "10", ",", "10", ",", "10", ",", "14", ",", "14", ",", 
           "14", ",", "16", ",", "16", ",", "16", ",", "18", ",", "18", ",", 
           "18", ",", "18", ",", "22", ",", "22", ",", "22", ",", "22", ",", 
           "22", ",", "22", ",", "22", ",", "22", ",", "22", ",", "24", ",", 
           "26", ",", "26", ",", "26", ",", "26", ",", "26", ",", "26", ",", 
           "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", "28", ",", 
           "30", ",", "30", ",", "30", ",", "30", ",", "30", ",", "30", ",", 
           "32", ",", "32", ",", "32", ",", "34", ",", "34", ",", 
           TemplateBox[{"39906"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", "2944", ",", 
           "2944", ",", "2960", ",", "2960", ",", "2960", ",", "2962", ",", 
           "2962", ",", "2962", ",", "3024", ",", "3024", ",", "3024", ",", 
           "3030", ",", "3030", ",", "3030", ",", "3030", ",", "3030", ",", 
           "3030", ",", "3032", ",", "3032", ",", "3032", ",", "3034", ",", 
           "3034", ",", "3034", ",", "3052", ",", "3052", ",", "3052", ",", 
           "3120", ",", "3120", ",", "3120", ",", "3124", ",", "3124", ",", 
           "3124", ",", "3124", ",", "3124", ",", "3124", ",", "3126", ",", 
           "3144", ",", "3216", ",", "3216", ",", "3216", ",", "3218", ",", 
           "3218", ",", "3218", ",", "3312", ",", "3312", ",", "3312", ",", 
           "3408"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 23147336927893110934, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 23147336927893110934, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 23147336927893110934, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[118]]], "Output",
 CellChangeTimes->{{3.692689899588739*^9, 3.692689969546544*^9}, 
   3.6926900097845173`*^9, 3.692690087080021*^9, {3.692690135372081*^9, 
   3.692690143562199*^9}, 3.6927173969263687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Select", "[", 
   RowBox[{"nvals", ",", 
    RowBox[{
     RowBox[{"#", "==", "30"}], "&"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.692717389417588*^9, 3.692717393321415*^9}, {
  3.6927174387779627`*^9, 3.692717475475184*^9}, {3.692717585493113*^9, 
  3.6927176177876263`*^9}, {3.692717661386195*^9, 3.692717687104138*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.692717399536956*^9, {3.692717452968843*^9, 3.692717476655776*^9}, {
   3.692717615627593*^9, 3.692717689071829*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "*", "b"}], "+", 
       RowBox[{"a", "*", "c"}], "+", 
       RowBox[{"b", "*", "c"}]}], ")"}]}], "<", "154"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "Integers"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.692690874955537*^9, 3.692690938528968*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"Integers\\\"}]\\)) \
beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"2\\\", \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"a\\\", \\\" \\\", \
\\\"b\\\"}], \\\"+\\\", RowBox[{\\\"a\\\", \\\" \\\", \\\"c\\\"}], \\\"+\\\", \
RowBox[{\\\"b\\\", \\\" \\\", \\\"c\\\"}]}], \\\")\\\"}]}], \\\"<\\\", \
\\\"154\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\
\"b\\\", \\\",\\\", \\\"c\\\"}], \\\"}\\\"}], \\\",\\\", \\\"Integers\\\"}], \
\\\"]\\\"}]\\). An option must be a rule or a list of rules.\"",2,65,6,
   23147336927893110934,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.692690927689186*^9, 3.692690939515278*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "b"}], "+", 
       RowBox[{"a", " ", "c"}], "+", 
       RowBox[{"b", " ", "c"}]}], ")"}]}], "<", "154"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.692690948945694*^9, 3.692690949392393*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"b\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \
\\\",\\\", \\\"c\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",
   2,66,7,23147336927893110934,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.692690951394723*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "b"}], "+", 
       RowBox[{"a", " ", "c"}], "+", 
       RowBox[{"b", " ", "c"}]}], ")"}]}], "<", "154"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.692690951399411*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=."}], "\[IndentingNewLine]", 
 RowBox[{"b", "=."}], "\[IndentingNewLine]", 
 RowBox[{"c", "=."}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", "*", " ", "b"}], "+", 
      RowBox[{"a", "*", " ", "c"}], "+", 
      RowBox[{"b", "*", " ", "c"}]}], ")"}]}], "<", "154"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.692690959578046*^9, 3.692691044365909*^9}, 
   3.692691088625289*^9, {3.6926911400269423`*^9, 3.692691140265353*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot3D","argtu",
   "\"\\!\\(\\*RowBox[{\\\"Plot3D\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) or \\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments \
are expected.\"",2,86,11,23147336927893110934,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.692691024703575*^9, 3.6926910453871*^9}, 
   3.6926911417009907`*^9}],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", "b"}], "+", 
      RowBox[{"a", " ", "c"}], "+", 
      RowBox[{"b", " ", "c"}]}], ")"}]}], "<", "154"}], "]"}]], "Output",
 CellChangeTimes->{{3.692690996050529*^9, 3.6926910454035053`*^9}, 
   3.6926911417173557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "*", " ", "b"}], "+", 
        RowBox[{"a", "*", " ", "c"}], "+", 
        RowBox[{"b", "*", " ", "c"}]}], ")"}]}], "<", "1000000"}], " ", "&&", 
    
    RowBox[{"0", "<", "a", "\[LessEqual]", "b", "\[LessEqual]", "c"}]}], ",", 
   
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "2000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "4000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6926943767526827`*^9, 3.692694466449339*^9}, {
  3.6926946951344843`*^9, 3.692694695474682*^9}, {3.6926948273922377`*^9, 
  3.692694855101842*^9}, {3.692695380858388*^9, 3.6926953844490967`*^9}, {
  3.6926954177536*^9, 3.692695543160356*^9}, {3.692695707391508*^9, 
  3.6926957391568937`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
P2T4i69ry6U2BPPmOc38Hl+9Ozhx/R34NaZo9WntFYrmq24n5A8Hhnig5zjS
4sjI0zjMP6XlDzP/pHHg92ht/mgaMb4Dv1/AyItZHwLQ/FZxddC12n3+aJ4s
tynLY6yLH3o+lWNi53dhnB8vvgz/J/MTnv+9WMHiwN9xRed3uzf4ID+oF07d
PYiKC8PzuUjDatEBrt4Cz89lA+outQ7l5QNjZ9u3w88EnlmDnrvtnrOtyzhi
3gL8xzpNW7g7NRitF8rqT3fp+WYVb/+Hmd+q7Cz71SffC82H7/pejkrfze+/
jLz9xN4b0+dz4yM7H9a5qWev4I/w7geMXqSs4j+PZubJbd5sM4pc6ofm7aND
7EZ69A5C8/ZFEY4XIgdy8y7Ax1dYJT0aGoTa9Xb4p1Za//mg+fzO0n29fRUD
WXmws8G3/MmCu/5oPt9jypF/h63xQ/5xGrgyxNw9mNdPGX7NL7b6ZU2rWPxh
24jtizP/3FsI7y0y44XHnfamWj1VyfcCmnE75ShbZaOh7Lk7aecWGB5p5xaA
n3zuT74XScqTekl50EvLk/aQ8nAOkJYHXNo5CsZOaecooF3kOQqwk5Yn20XK
g520PNkuUh7spOXJdtHnOhg7pZ3rAP+T53bATlqe9D8pD3bS8qT/SXmwk5Yn
/c/ID9+l0cNvgiKbh+w4pXOhtPC0GovD/ESzxzVL79QebH6C/MY7eQq9Xmmy
OMjvOmUwWve8Kpu3IP+zfPbTWwrD2POigM+w7Tahxe+RrF5p546Y82zS8oTB
6bjAOTpaHnBpecWcr5OWV02K/kgezt3R8oBLy0PmHKC0PGRwkO+g27hiQcoP
tl0QRyfra2F5bf88r2dwiOMl7bkih+V92HODIO9xMFX3zcrRLA7y4V9zzaxb
qLHnCUG++Mn2dwkLRrLnCQHPNx6/Q/PZDFYvxEsvQunn9zJN9lwf9OtzY21t
z2j0ZXFo7xin+KxTuVoszu6ffKu/Ets4kPe+GyNvsknr48PaYew5asANOux2
OCrPvacP89K+n8VWOrHcvVgwLw0VBEYMXbSYfb8e1gXPlTv/qhrO3VsF8rHK
PmpnDYxZv0F7y2vWtfQn3ueCOpzYqfNGT/77XM14Ud4OHWvifS7AH1i06zKS
eJ8LcPpeKaifNA5+pnHwjzQexs/tlt8ZWrvcnsUhvrp6S5vmL7Pj8TN5sk8u
pTTlsL2ArlcdNLd10PexE9D1avgqlU+HenLvYYG8ZlAf5XyxnYCuVzq6vts/
nbcT0HUpwaOfqYDwM/i/7bOcg70IHOrMfe2FtXXEfaogr7JBvWUCgYP84fqD
1WnUfa2M/NOIbsOLiHssof4EZh0TBpfao/51qsms5Nkhe5S3zHfyfi1yvkTi
EMedKtpH+r50F9Dj1Gfj6UVbJrsL6HHqhlFm/+XvuPseATdIySo/MdJDQNYf
Ru/v62sFO4j7EgHfMm3uyBcEDvYoXv8dv5q4RxHk9089EFBI4CB/akqvCxnE
/Yrs/OdYb89Mgh/a1emo6CR5DyTgbxOs9lh31mD7KfSLqKz2+/pY67L9GnD6
HkKwk8bBHvp+QpCncZCnecBOaXoZ/9M8IC9NLyNP80BeSbOf6Rc0D8hLs5+R
p3kgz2kc+gXNA/I0DvI0D/QXGod9BpoH5Gkc5Gke2Oehcaj/NA/I0zjI/7vp
o9LY2hEsD9T/gRsORiUb66Jx5KDVnk0t/eaicaTn2ov5pkqTUD3PcXkwxOLi
VLb/gt/af7W/oO4+j5UHvNagsvNQ53/Y+gN+0JwevOajMndfGfitj9GBvU+q
dVkc5Mev3zzouPwCVi/IDzR0UG8K5u4VAfmz+eYHEy5MZvWC3/plhneO3sHd
bwZ+22j4SuOAuwGrF+RFv+0yB2rpo/F02uxhjk1nBqP6E7NE3Kg/7ac2XX8C
tLbW/HttOKo/NmVWLkPCWqD60xD1IyO5G3evF8ivb3dMOaR3G1SXWkd8/9JV
Mo+COgn464wTKbNMBrDvawC+6JN+iHYLPVRX5+WvyN4eNZfHz/S70fVa41pd
nc/ysPMrxTu5RyYYoXmF9/wbOocjxrHjCDsufJ7WsLtwBnff1F+8aKf3NJ9D
Bs3+ZN5TA3yt+a0+qkcnsTjUn7Ied5JXT5vF8kP9UXQPdPaoMEd1dVO3u+8b
sm1QHWa2N8l7SnnnTgkc7Dm2nH8fO8jTOLkvTfLwzrtSehn7aR6Ql6YXnsuQ
POQ+PG0/E0eaB+Sl2Q/79iQPeQ6KxKG/0zwgT+Mg/2v96HbfkixQ/dQwmjp+
mq4Fqp8D64tG6Wy2QfXZMOeaRaS5DarPJpP66o81NUf1c/0is/SjhUtRvc27
3CJMt681qs+auwsOhO4yQ3W1aaGOmbmKOap7SsaBVmbLrVGd3JiyzdWwrw1a
J7r27RC2xMkY1bG1cVZXHG9aoHrYKq315wO65qgejlVaVjkl2wbV23BFA/no
DGtUb6u+q7yw0V+M6t79xQ7x3bzMUJ3cY+3btsctS1RXG12ePE7fbyOg1329
Dd6ce3l0CaonGeEDHhzUXozqyd1janlTDZeh9d2NxIWHIgZZonVc+UqzUb4D
ufeyQf7DtKF6Ghtt0HrwckWlVu9P5mjdZ9XT7D/lraaonry+dWrfzPbL0PpO
XHHia3DBMlSXqpNnfbJsZ4vWd/Q9ulA3aBzqBo3/Px7Gnq1Cb4e8mdx9DtDe
gK7DeuvLOfDqfHOdSR++y9bHWUDvAwysbnST+9eVjQu7H3i/V/HFIc6s34B/
W3Kd6oWTdqhuJ68zMw/f5YTqfGavbZ2U7rqiceH93O9ZXSyd0Pqa4SXv7yX3
30icnbe/SrrS6wb3/i/7HLncePP8cV5oPG0xU8nwt7w3Gh9D8p2aFlwSovE0
f3yM1pNaNwG933KrvlWyZHXNmw8w+MPH/ZMdVLj3N8GeL0GXOz7Q495/BLyk
6ZVuy5Hce4Wg93+HAaFZ
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlmlQllUUx5/3fZ9Xk1WN1BIzWqxEI50yrURcKk3ENa2prNwREcywlMVd
cUPEAsydtKyETEqtGW2ZMQfUD824ollTQpspo6Az+sF+/zn3w5nzu/977nmf
997znPskTMgaNTPoeV4DFsK2hD1vAPCt73nzsElMZqO1gafDOXCB49lwPjzV
8YmA531HjmmMY9EPw5vI9Tycx9wsYl6A8+G34dbwlKBxHKwHeQ+uhruz7kO4
GR6B/g7+ANYXfTP6fri3433wE/Amp/dxPB9fwG/Ngb9G7+lyinvAG+ExWF/y
z/SNU+A65l6Ck+Es9LHYdfI8hTYQGwb3Q0uGI4kZDz8LR8Cv6xmdfpw8/eBo
+A30QXAaa1PgZ+BW6EeJyVROOEJ74Hg2PANO1f7ALbUH7OdPrPc1Dx+GH4CX
wUfha77Ft8LHYBPc2eXCk4O2/2X8Xhbxp/GvoN9mXR/0bLQ22HxsOONHiT9D
zAztJzwabQPjEs/2Zzt2L2t7Mx+PrSAmn5iV8GrHq+G18Hx4FbwGLoA7wqfJ
s5kca+ASpxfB77v4OnKfIKaYcSH6cnyeW7sMzoWL4TJ4EXye+LPElwctz3r8
QvQ/0aOxKH6rjHECvor5F7GlAcujZ1hH/AJ4KFwYsLVb4Ivoq+GtrLtJ/m6q
TSySmG1o5fA+nYHOSv83YPwfnIh+lpjzvtXGMdUfVu3ZWQ/HKogvIv5ueD/6
RubTiN0L5wQs/37GS4nZBv8Fr9E5wnvgJfAOuBleCzewpgV2nfF29EsuXvXc
X/WA1gmrdjmV50t4MVwKVzquJ0cYawpafL16A882grnuaOm+8URiBvlWM13Q
p8J3wu1CVhtx8P1uz8/6Vruv4k+R70nPzlhnfdKzc21k7ml8pm9nWudZ3axg
vNLVwC9O38D4qt499/5Oxx6DL+NbEzNENY3/B4vD7uI52mPx8CXsZeJu4g/i
S8M210fvqfaStce0lnFnxpO0l1gCPBm/GJsFX8cfIjYJO4idZM0P+InM/Qpf
gQ/Bv8GN8I/wVtY0uLqqd+elc9XZtcT+VV9QbuIvMj4CN8N/wBew3+Fv0G4H
rbZV46cVh56u94f8GeoX5L+lPs5cXsj68/ee9YUmnRk+Cv83eluZ69W5cIT2
A84mZh68yPFc+AzzNeSZofqGj8JZ8BX4cew59QnidsIjdCb4kcT0CNg72IX5
L9yeq052w+dcDej9L8J3wgo1xu7D1um8ia8ibhTxq+DjQXsfy+FHyLPHt5hu
8F7f+tV61p3Dr3J5lK9Y+8Lanb6x9vFj7RNxXzEfqRrGMtHfDdt/8Znb5Wqz
yNXGOvQg+ifoF/BDmRunXgQPhsfCnzMXreeAT7Gmp2f7W4PWhO+l3ggnos8N
WW+5HLSeMNi3+ytK/QSfqHuHmHPoLYipVS/HHmLtQnx/LImYy1gF3DVgezKa
+VRsKPaB+gu+RO+yZ3PSU4lthz+CL9WdpHcTv8C3c9Ydms+4B3pByM6rF7wE
34FxAn5XwM6llvgNvp23zl3P0ca9j1GqdSwGi2VdZ/VY11vUz9W/b+iZ1d+I
6Ri2/6P/NShk96P6o84oDX4QnuLe/SR4pL4HVCPk3IvP0LcB+ij1WKzS1c8A
OAb9Z3K+xbgtPMTdyTluH9Qfbrn7scrlVO4sxiMVx3x7eLf+p2/3fI67o/Wd
o2+eSNUOVuP2pKv6LjHjA/YNcAfj19BTdPegJavG4LDrkx18q0nVZjvf3jO9
g6V61zz7llqrd8nt2z3YAdVYyPr0cvdtoG+2dNcTtG8Pw9N8+0ZS7akG9Y7r
btIdNQ6+ofud2Aq4Ub0mbP28E/OVaB9h15weqzuctbWsmaDnZjwMvZzYOZ7V
ajzjRubHMP+pahgtRvmwq+g7GE/U/eTWZjLOCNi3R5TufPLUMP5M96lbq71q
6fYw2cW9Cf8PuPZNdw==
          "]], Polygon3DBox[CompressedData["
1:eJxN23kcflO1BvD3fc95S93KmKtSZpFQhlSmSJFGFFFmoiSVJEohQimVNCmE
MjTdZlIyNtyi6BoaDFFEGtBgCPf5/tbyufeP9Tlrz/vss/faaz1rneV222/r
N80mk8mDw2Qy5rnddDLZNrR0Mp8cem/4dZI/yfN/kj469TZK8vikHzmfTB4K
/4LQ80J/Ca2d/FSZnBjaPPU/kvQm4e8MXZr0S3uck0O3hr89z+eGnh26MfTh
1H9OnreEvpP670v6meHvCf016dOTfmH4wThp/6TkPTH0+NCS5pu8DVL+1NBb
wh8Z2jD8KqH9wx8T2jj800IHhv9VaLW0e3ro9ZnYful3mZT9JnRO8o7q9101
dED4T6Z8s/D3h36e8jclb4XwN4eekvYrJ++Y8EeHlg9/RM/nrtDKKX9W0suk
j2VD64d/ZPK+mrL/Cr01/PdC66Xs2aHvhz9Pm2nlKftu6Bnh/xo6Keu/asZY
JbRL0rtOqw99XRn+jSl/YcbwffWhr9OS3jbpV4VemfTnh+LlnRH+ztTbPvwO
obvD/yJ5B4f/se+Y/v6R55uS3jf09/CfD20Zfk3lqftUa2YtQjsn7ynJWyXP
VUMrhL8y9M5J9anvD3q38AvlOU/6UZnTt5P+ZdJ3h/9zni/Xn32Q8hcNC7bi
5BOhG8J/rtfTup6Y+e091hyMvWn4LZKf7MlGSf8g6cOTXt9eCi2b9MnJ3zz8
anmubi1CC1mL0L/CbxV6RPjTtBlqn7wj/H+GdvOdkl4vtHZoneafFVqr857b
58F6+hCb9/f4jrXJxF7c8zs36eXD7J704klvkvTPMr+X2yNJn5f0yil/tbNp
7UJvT0fPH2u/vj90beruGVrCmXReU7aPM5L0Nkn/Iek3JH140kuk7UvS38+d
2dAaoe+p5xvk+f3Uf1rKt0v6P5L+QdJrJL2H8dJ2hdDrxjp7h6X80EmdwRem
zstT9xWhLcIfbM1S9pPQUqn/pmmdl+NDz3fmUr6I9Qg9IeV79/sdMal1PDDp
lcKfFNop6V1Tf9Hwz0n+Jam/c9KPS/pboceMNaaxt7Ivw++U5+OtlTOf9q9J
/ceGvzD5a6V8t15vczb3HZN+zKTOpLPp3Z4YWsz5DL04dbae1npav2NaPv4y
9IX0f+xQ8m4x65X2i05LvpFpi4T/6LRk5ZJ5Lp66X89za/Iqz42SPq3ly/J5
bpz0F6xj0k/P8/n2Y8ZcM+M8I7R1+PXHOg/bhU4fas2s3XsntQdPSN4rw38j
lZ6Y+h/r9EtDHwn/odCm3tEZSl8ntXxdpc/unslbLv2sFNor/MahpXxP85lX
2bKhFbvO9mnz6JR/MfRQ+GtC+03qG/vWew11dpyhnw41R3O1J9cIv7K9Y53t
h/Afz3PF0HKhD4b+lrxXT0pGkVXOoP4uDp0wqzWyVquHXhD+i92ffldN+qTU
uaLPz6fDL6V9aEX7bFrzW9J+Dz2WLEp69/Dna5/3/VLSO/V5XCHpc3tv2CM/
I8dTvouzpL+Uf3dSdZRd5r3J9D5rB4V/+1jl6h0Y/oG0+3fontC908pTdl63
tce/1fLx7+G/nvF27fP61Iy3y1Dz0ae+rYm1uYTMDP+ZlF8a/lPhD0/9fYda
2+vsh57bd3uul/c8z2uerDg77X6X502hL4c/NHRl7/8jZyWTrK01fmf490xL
vmh7WMtld8O1oaNm9a6+pW/qnc3BXK4PfRSfvDWtv/ml/vHJu2FSusLHxqqj
rjxlZ+d9dvQOabcceZo2FyZ9UWjPWc3J3MzZ3N+Z+qvbi75h2m8wr7vO/bST
+2Gou/5fqXtcyu7K896k7wv9I/wQmoUeTJuHpvV8oL/dfaFDh9JtHuOupPjM
6i7wzt6dTkO30ae+15/WnaHedFbv6d1um5SudFrfV4+c1pxWSZ93+x5JH5P5
7TCWnLIH7IUNk7/BtOY4dJ+TXnfzPMK5T9aY5++Tf733mZZ+dbN0nuum/Gp7
e1Y6IIEzDf0q/BvdW5PaE/bGi6clH34Y2ivpvTOHJ4T/b99/rDbaGsNYdMY/
hx6clC756Wnpk/gbUn5Hnn+yVqEHmndXrd15s36nB3rtP0vmJP+b5OC8+r6j
2xrjspS/Lc9LU3fDecmYpfrskxF0Ht/HnU2XtT/OCb9V+tsv9T8xlP5DD3p2
0q9yxzpfSa+X9BnT0ocWznPRoXQOusfGoQvDfzx5C5NX1j3110reEuFvD30s
6T+NJU/J1TvC3xR6Tcpe6/uEvyjtX28/J/3MefWp7+eFLu773X2/R9J/GauN
tjuGbhlLJ6WbPnlSeR9N/ZdNSh997lh3gLvgT+bvLKT8jf1+685rH9vP7jR3
2yn0gzwXyfP4Xk+y+yWhx4dfYij5ao0fP9Sd4+55sv4y1qPoG+EfHXps+EtC
b+j1WXted6i79LbQwkk/I+nFp7Vm1m7Jvk/tmRXCf8K9FH45Y/bY6qzQMv7Y
lH2A7AidMKl71H26Z8peN61vvlbort4Lv6XzT0rffEvGe2bfveru5e5ou2PR
0GKh3cbKw+8a/gnumNDis9K5fCPfin53afgrQpuH3yL0y/AvaX1v06R/NFbf
9KpFeoyfpXz/lG9pbik/I/S48H8kO+dV99CUv2dSbejUdGtrbK1/nfrz5D8i
9JvwX0jeayalfy4zrzGN/fzQT8Yi/Gahn45FePrlZeHPd6dPSp9aM+03TL8f
sZ8mtT53ps76ydsgdFf47UL/TP465FL4bcfaX3Q4utyNSe8wrT1v718f2n5a
ecr2aP1WnjJrZu1eFLoq/Dkp32NS+upqmc/3kn5d0hckvTp9N3VeOK01t/av
aH1XnrIXZZ5b0GNnZb/SOY7tvUIXeUrrV3RUuvgJvZe880fJsvR3qr2Ssp0y
3t+TPivpXyS9a9KvpYOGtgu9OjRmzK9Nyl57fcr/nfpfTvqKpPdM+oGkz056
f/uT/UUnTPqtSe9G1077z1n75H/T2qXPz6b8M6FtZ2UD6tsY+1vLHveVoVfN
Sv/8WuhboW+Hrk3eNe700C/tn7T5Stq+LWVvSF9vMM9p2TlsnyPob6F3u+tD
58/KtmJjfTf8DzoPf56z0/oZnfbUPE8ca0xjfTr8Bd1G3e/NSo6T52xEtuK5
Sf92UneSu+mc1kfcQWx3OghdhE4Ou/hW96Hth6alU9Ot2ZRsy5e1Dcj2+0av
5SmhNYZa01fMyjahv66b/OWStywZG1p6qLX0LbfpNcVb9607j8z4RF2ZC3T1
F8zKVlum57t577W1WvawiTYN7TstW8l+9C190y3dxxnz0+E/FbpuqP4+HP64
0Ga9t3boOZjLe8e6e93Bzwt/cPIOCr0tdMCsdOBf9H5me+04qz3qvbbvb3t4
6JD+xsY09mWpu+28MAfYw9EpO8YdmfKVU/7m5G2X8juS/nzSP9d30n/o+Svf
YV4ygCx4uTmNNW/vCz+yhgc0HvD2ad2/v2fzJ3150tsnfWS/k3c5IvzSY2E3
1pdt/ObQJq2nvIDsDb9xr/GCtR5LJ6WLHj2WnCKvNup6m/T62l/6uDrpq6xZ
6IrQCWPpPXThj4f/Up5fDH0l9NXQ84aypdhUp/ed6m59UuhL7ofej2w+2NLp
aXNa6OTQKbOyKe1n+uqp4T8/qzrKPhc6o+uc2u3ePRReBjc71HrPSv47P0fm
eXjosGl9V2f3vtC99mTyPmC/jVVH2VHhtxxLR6QbnhT+72TCtPTFO8Of2XM4
bfZ/czeXk/od6Og3TkpnoAsv5H6jM7CzhxrT2Gd0X+wS9gmdn+5/cvdln57o
O44ld2At+4xlQ7vf3fN0jWeOtbbWeJG8/3Fj2Rpsjs3Cn9XjnN5raa7Wlk1w
Uq+ptf1M6LPNn9xjy9t9WjYnu+rjs1rLQ6d1Rqwpns1zWJ+b+3uNveex01rr
e2aFG3jvn4T/ceinoZ+FLg/9a1I6DF3GPqPn0nf1u9pY5b/Xfl4YpDbq2j+X
/b9+lD1+Xjbwl6wRfXFW+jC9+JLw5461R+3NV7Ank/e1WcnNb88KM4AdfNOe
ndeetrfV+8as+iOzyervz6pPfdPrfxj+rbOyfdnHr5xW+cXd5sI+I7+fFH7q
7JCty4Se2DL2/ZnTB5J/XOjYscrocfQ5dawl4UreH9NrYC3ofs6Wtu8Pfaj7
sObqfaH37bG97+0Je8OczZ1OCauRvrTnbO4rOQOTsreOnlcdGPel3daZcXbc
he8bq91Fs7rTvDO8eMXWJX4z1L6yt/fue/U/0+bHKfsR/XksrO1I53lSmNu9
yXtH6h0Uui/891vf2ZPOMxTt2frOMzK/w4bCz+Bo94x1t5NhZJc7fsuh8Hg2
M9tZHXWNYazbkndKy9vXzgsDX7X1kd3nhYmeRraF7gy/Qtujv0v5A2PN0VwP
Dt0ffqehdD06H9vi4tYf9w5dOhTh2TfrzAuThk2fk/SySW/b+BKdjm73sqHw
2V0mhb18OfTaSdn/K9r7rd/KU3ZuaLdJ4TlPh5/TR+2/pB8aS7+4aVI6Bd1i
h6HwwAU2V/iftH3C5mP7uVPcC+4Ad4E7293tDrCf6Qx0BxjYv8ilvr9ObV1x
66HwZhgTrIlPhG/Emlv737X94b599bx06mUnZcOwRfguDpwUngablqeMzrru
rPaUvQUXpLPJU0avfc6sdAq6BXz1xbPSSZaf1J1Ht3jVtM4tnJevZZOxfER8
Q7uPpXPwd7y/6y/d9dgt7CC+JH08qcvoO+52dzzdho9mga8mdV4zL0yfvuSd
vfuT5/Xt7QG+i7tbn6AD04X5cPhy6Kd7zWsPnt76xi5J39z6Cp2D7sEHxBdE
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
cDKQLHQm6d4f67PKR8EnQYehy/wvTi7Y6Q==
          "]], 
         Polygon3DBox[CompressedData["
1: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
/g/jeWuM
          "]], Polygon3DBox[CompressedData["
1:eJwt0ktsTUEcx/HB6W3aeiQWUiwEC4vqohvq0bDyfoRELIhI0QZ9ckv0cksJ
Fi6ViEexaMJSIkFiKULFY6mV1GNhIRLprr1Y8Zmcs/hlvvP9/2cyM+csbO7c
2TE1hLBIcjJYEUL9tBDqpoQwLg34WRLCfeOo+kcZ4y9aNJ8/r/8R/s5/4x/j
W3xetuMJY4/swJPGQfs81VuLe63t4vtxoSLdc0Tts30uyCb+oUzHG/kZxn96
BvTu4RP8msurVeKV/HFpxcPcJ7XDuKi3n7+Dx/gv/O24D3+Cb8Nv+aVSJ33O
mOeP8rPj+fGRbJ9ufNr69fgYbuELuEm28G+kJ56VX6PeyM+x3028Ai9QHzLf
m6RnHs76q/AqPfv4GtyEP+irxqvjO8lBPEv9Hv/Kmpn4FN/Jvzevlychfc8S
/5PP2f+H/MJDfCM/ab4LL8dlvBvvj+8c38G81h6bjWvV++RG9l3idx/AV/RW
xfvitvjmeCtux3ed7bneeVw5vhc/N3vnovUb8Enczp/N3vMQfmnNqHpB1iXp
fZv5F/wIdwD38i2yON6Xu6S2BG/Te01+48rsvmX8QG+RL2Xf/St/HZf46uzM
Heo1SfpPxn/znPllfcuy/zDe/ap6jn+H//J/pEHO6P8Pu/lmFw==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{898, 59, 698, 699, 700, 701, 235, 252, 720, 721, 722, 723, 
       1178, 724, 256, 760, 761, 762, 763, 1189, 268, 273, 272, 776, 775, 
       1193, 774, 773, 264, 741, 1182, 740, 260, 753, 1186, 752, 751, 248}], 
      Line3DBox[{900, 60, 899, 898}], Line3DBox[{902, 61, 901, 900}], 
      Line3DBox[{904, 62, 903, 902}], Line3DBox[CompressedData["
1:eJwl0L1KgnEYhvHHem1oSmsvGxvS1j6OIYiEQAoMIxD8ACEIgiAIgiAIPIVc
bLGlllpqKSIXD6TBwWrpJw4X1/W/n+l9c4eNnXoqIrbxLfZ4xD/4Hb+TiD9u
2s8xNxWRQRZlt3lewIXbKldteS5gDdf2Nm6x5V133+QN1PQ637hdYVkf2XK8
hIpe5Eu3FT7hj+mIGZ1GyT3hlv3TPqv3bafeX959nOkB13joO951Vb/xK471
Cz+jop/4EWX9wD0c6HvuoqQ7fIei3k0m/+0fKUgnNQ==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0D1LgmEYhuHbCgwCt77GqFzatNZqcA+CAkEKXugDBCUQAkEIgiAQBKFf
4FBLLrbUUkttgQ4N9S8a2io9wOHkvO7rft4Xnmcpqe5WUhGxg85kxD7f8h1K
8j13cSj3+AGJ/MhPOJKf+QWn8iu/oSzvTUX8+HlF/tA1ODMRMZD7qJsPnJnR
vZtr5rRc0k3zuXmNP+2u5GX52G6FV3EiZ/narsAtruo25S1s48u3bf0NmtjQ
lZ1Z5zxyuNQv8gISu3mewywu7M5Q1A/d5R9/+EVR/50av9sIUpQn7A==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0M9Hw3Ecx/H3d+sSS/f1g50q6lrtWNM/UDRGmkY2pk3EGBEjYkT0F3Rp
l7psl7q0S9GtqOi/KNp1Dzo8PV/v1+vjy5Y7aGwfJRGxg5t0RJFvuYc9+Y7v
UZb7PEBFfuBHHMpPPERNfuYX1OXdiYg/Hy/yiBu6T9sHTuXpVMS7/Ia2O+Mu
e7uPKflEN8mv9pa8LNdsK3zuXuCqe5GX8OXdhX5LvuQNbto3uYAr3bc319xF
Xle3r/MaVtHRz3NFP8ezmEEWZ7ZjlGxpdwoJAiX69Rt/kv//cQyUKCe4
       "]], 
      Line3DBox[CompressedData["
1:eJwl0DFLglEAheGbBTXU1iJI0J+psdD6Ay41KWY66SAG1RQNJZji0CCo0BTl
1BA0SENjIKHioFtttdXz0fDynnMuFy53M51NZhZCCClsx0K44SSnsId9FJdC
6NtfcaTncYwCTpwV+c1ZPbqPBpq4dPZhn2FDnnLP3sWV3uGJ7ZGHnLCdy2cR
8im/2y/k6+gOnvU1/YkP9ZJcxoH8YluXM3KFB3qVc3qcH/Td6O3yDq/yvW2F
l3EnB/5d9Ebxh7/Rlr/4E7fynGdoyWMeoSbn3N2K/f/jH7DgMNc=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0K1Lw2EYRuFnPy0rgkGDRfxvFCwzOK1rGhwIMj9gzeA0DIMuiG6wsOCc
aUyTQVgYBuNgDDYMbk2bJi8wHM65n7e9K7n8xl4qIjIYzERUeMRjVPWEp6jr
L/5GQ//wL+51ajYiwaPe5/UkIs1t+4Azdkcv6R7n7UW9gK69Yxf1Ls/zi1tO
z+lXfa3LusJ9+0yX9DlK+oIH7k885iZfuT9wCx9uy/YnD3Gpa+5V3OEW7+4n
fOrtmI9wiALevD2j4G3b3kIWm7hxX+PV5P///gCRIjDB
       "]], 
      Line3DBox[{989, 153, 995, 996, 161, 1003, 1004, 165, 1011, 1012, 169, 
       1019, 1020, 173, 1027, 1028, 177, 1139, 589, 1034, 179, 1154, 624, 
       1047, 200, 1151, 619, 1042, 193, 611, 1146, 612, 1039, 197, 665, 218, 
       653, 1163, 654, 655, 1164, 656, 212, 214, 688, 1175, 689, 690, 691, 
       1053, 229, 233, 223, 1171, 677, 676, 675, 674, 210, 640, 1158, 639, 
       638, 637, 636, 206, 187, 1144, 605, 604, 603, 602, 157, 586, 989}], 
      Line3DBox[{990, 154, 997, 998, 162, 1005, 1006, 166, 1013, 1014, 170, 
       1021, 1022, 174, 1029, 1030, 178, 590, 1035, 180, 1048, 201, 620, 1152,
        621, 1043, 194, 613, 1147, 614, 1040, 189, 190, 657, 1165, 658, 659, 
       1166, 660, 213, 646, 1051, 215, 692, 693, 694, 1176, 695, 230, 234, 
       224, 1172, 681, 680, 679, 678, 211, 645, 1159, 644, 643, 642, 641, 207,
        188, 1145, 609, 608, 607, 606, 158, 587, 990}], 
      Line3DBox[{702, 239, 1056, 1057, 242, 1062, 1063, 245, 711, 712, 713, 
       1177, 714, 249, 754, 1187, 755, 756, 261, 1183, 742, 743, 265, 777, 
       1194, 778, 779, 780, 269, 767, 1190, 766, 765, 764, 257, 729, 1179, 
       728, 727, 726, 725, 253, 236, 705, 704, 703, 702}], 
      Line3DBox[{706, 240, 1058, 1059, 243, 1064, 1065, 246, 715, 716, 717, 
       1068, 250, 757, 1188, 758, 262, 744, 1184, 745, 746, 266, 781, 1195, 
       782, 783, 270, 1191, 770, 769, 768, 258, 734, 1180, 733, 732, 731, 730,
        254, 237, 708, 707, 706}], 
      Line3DBox[{709, 241, 1060, 1061, 244, 1066, 1067, 247, 718, 719, 251, 
       759, 263, 747, 1185, 748, 749, 750, 1069, 267, 784, 785, 271, 1192, 
       772, 771, 259, 739, 1181, 738, 737, 736, 735, 255, 238, 710, 709}], 
      Line3DBox[{787, 278, 291, 794, 795, 796, 797, 1197, 798, 296, 832, 1209,
        833, 303, 836, 835, 300, 816, 1204, 815, 814, 1203, 813, 299, 831, 
       290, 793, 792, 289, 1079, 1078, 282, 1071, 1070, 274, 786, 787}], 
      Line3DBox[{788, 275, 1072, 1073, 283, 1196, 790, 1080, 286, 817, 1205, 
       818, 819, 820, 1206, 821, 301, 837, 304, 1210, 834, 297, 803, 802, 
       1198, 801, 800, 799, 292, 279, 788}], 
      Line3DBox[{789, 276, 1074, 1075, 284, 791, 1081, 287, 822, 823, 824, 
       1207, 825, 826, 302, 305, 298, 1200, 808, 807, 806, 1199, 805, 804, 
       293, 280, 789}], 
      Line3DBox[{281, 277, 1076, 1077, 285, 1082, 288, 827, 828, 1208, 829, 
       830, 295, 1202, 812, 811, 1201, 810, 809, 294, 281}], 
      Line3DBox[{904, 905, 63}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{496, 497, 499, 307, 583, 585, 586, 587, 1367, 368, 1370, 
       1371, 369, 1374, 1375, 370, 1378, 1379, 371, 1382, 1383, 372, 1386, 
       1387, 373, 590, 1390, 589, 1389, 374, 1391, 593, 1269, 592, 309, 503, 
       1336, 501, 500, 1334, 451, 1331, 1330, 449, 1327, 1326, 447, 1323, 
       1322, 445, 1319, 1318, 443, 1315, 1314, 441, 1311, 1310, 439, 1308, 
       496}], Line3DBox[{1211, 504, 508, 512, 314, 594, 598, 602, 606, 375, 
       1272, 698, 702, 479, 1276, 1277, 481, 1278, 1279, 483, 711, 1280, 1281,
        403, 1287, 1288, 409, 1292, 382, 1398, 620, 472, 1402, 624, 1401, 623,
        473, 1270, 625, 334, 1348, 458, 527, 526, 1346, 1345, 456, 1340, 522, 
       1244, 330, 1239, 1238, 326, 1231, 1230, 322, 1223, 1222, 318, 1215, 
       1214, 310, 1211}], 
      Line3DBox[{1212, 505, 509, 513, 315, 595, 599, 603, 607, 376, 1273, 699,
        703, 706, 480, 1415, 1416, 482, 1417, 1418, 484, 715, 712, 1282, 1283,
        404, 1289, 1290, 379, 470, 1399, 621, 619, 1396, 617, 471, 1400, 622, 
       333, 1347, 457, 524, 1342, 523, 1341, 453, 516, 1241, 1240, 327, 1233, 
       1232, 323, 1225, 1224, 319, 1217, 1216, 311, 1212}], 
      Line3DBox[{1213, 506, 510, 514, 316, 596, 600, 604, 608, 377, 1274, 700,
        704, 707, 709, 401, 786, 489, 1295, 1296, 491, 1297, 1298, 424, 792, 
       407, 718, 716, 713, 1284, 1285, 405, 1291, 380, 1393, 613, 611, 469, 
       1397, 618, 1395, 615, 331, 1344, 1343, 525, 454, 519, 1338, 517, 1242, 
       328, 1235, 1234, 324, 1227, 1226, 320, 1219, 1218, 312, 1213}], 
      Line3DBox[{313, 507, 1337, 511, 515, 317, 597, 601, 605, 609, 378, 1275,
        701, 705, 708, 710, 402, 787, 788, 789, 490, 1428, 1429, 492, 791, 
       1430, 790, 1299, 425, 793, 408, 719, 717, 1419, 714, 1286, 406, 381, 
       1394, 614, 612, 1392, 610, 468, 616, 332, 455, 521, 1339, 520, 518, 
       1243, 329, 1237, 1236, 325, 1229, 1228, 321, 1221, 1220, 313}], 
      Line3DBox[{528, 533, 538, 340, 626, 631, 636, 641, 383, 720, 725, 730, 
       735, 410, 794, 799, 804, 809, 427, 1301, 1302, 435, 1306, 431, 827, 
       822, 1435, 817, 493, 831, 419, 759, 1423, 757, 754, 751, 390, 1408, 
       657, 477, 665, 1410, 663, 661, 354, 556, 555, 1261, 554, 350, 1256, 
       1255, 345, 1246, 1245, 335, 1350, 1349, 528}], 
      Line3DBox[{529, 534, 539, 341, 627, 632, 637, 642, 384, 721, 726, 731, 
       736, 411, 795, 800, 805, 810, 428, 1303, 1304, 436, 1307, 432, 828, 
       823, 818, 1434, 813, 415, 747, 486, 758, 755, 1293, 752, 391, 658, 
       1406, 653, 476, 664, 1271, 662, 355, 1360, 557, 459, 547, 543, 1258, 
       1257, 346, 1248, 1247, 336, 1352, 1351, 529}], 
      Line3DBox[{530, 535, 540, 342, 628, 633, 638, 643, 385, 722, 727, 732, 
       737, 412, 796, 801, 1431, 806, 811, 429, 1305, 437, 433, 829, 1437, 
       824, 819, 814, 416, 748, 1421, 744, 485, 756, 753, 392, 1409, 659, 654,
        650, 1404, 647, 351, 551, 1358, 548, 544, 1259, 347, 1250, 1249, 337, 
       1354, 1353, 530}], 
      Line3DBox[{531, 536, 1357, 541, 343, 629, 634, 639, 644, 386, 723, 728, 
       733, 738, 413, 797, 1300, 802, 807, 812, 1433, 430, 438, 434, 830, 825,
        1436, 820, 815, 417, 749, 745, 742, 1420, 740, 388, 475, 660, 1407, 
       655, 651, 648, 352, 552, 549, 545, 1260, 348, 1252, 1251, 338, 1355, 
       531}], Line3DBox[{532, 537, 542, 344, 630, 635, 640, 645, 387, 724, 
       729, 734, 739, 414, 798, 803, 808, 1432, 426, 826, 821, 816, 418, 1422,
        750, 746, 743, 741, 389, 1403, 646, 474, 656, 652, 1405, 649, 353, 
       553, 1359, 550, 546, 349, 1254, 1253, 339, 1356, 532}], 
      Line3DBox[{1262, 558, 562, 566, 360, 666, 670, 674, 678, 393, 760, 764, 
       768, 771, 420, 832, 834, 1438, 495, 837, 835, 422, 784, 1427, 781, 777,
        773, 397, 692, 1412, 688, 478, 697, 696, 367, 581, 580, 460, 570, 
       1264, 1263, 356, 1262}], 
      Line3DBox[{357, 559, 1361, 563, 567, 361, 667, 671, 675, 679, 394, 761, 
       765, 769, 772, 1426, 421, 833, 494, 836, 423, 785, 782, 778, 1294, 774,
        398, 693, 689, 1411, 685, 682, 364, 577, 1365, 574, 571, 1265, 357}], 
      Line3DBox[{358, 560, 1362, 564, 568, 362, 668, 672, 676, 680, 395, 762, 
       766, 770, 1425, 488, 783, 779, 775, 399, 1414, 694, 690, 686, 683, 365,
        578, 575, 572, 1266, 358}], 
      Line3DBox[{359, 561, 565, 569, 1363, 363, 669, 673, 677, 681, 396, 763, 
       1424, 767, 487, 780, 776, 400, 695, 1413, 691, 687, 684, 366, 579, 576,
        1364, 573, 359}], 
      Line3DBox[{582, 584, 1366, 461, 1368, 1369, 462, 1372, 1373, 463, 1376, 
       1377, 464, 1380, 1381, 465, 1384, 1385, 466, 1388, 588, 1267, 467, 
       1268, 591, 308, 502, 1335, 452, 1333, 1332, 450, 1329, 1328, 448, 1325,
        1324, 446, 1321, 1320, 444, 1317, 1316, 442, 1313, 1312, 440, 1309, 
       498, 306, 582}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{931, 1108, 1308, 838, 1211, 1212, 1213, 1112, 1337, 1113, 
       1114, 864, 1142, 1143, 1144, 1145, 892, 1275, 1274, 1273, 1272, 897, 
       879, 1367, 990, 989, 1366, 988, 1137, 1083, 932, 1309, 931}], 
      Line3DBox[{933, 935, 1312, 937, 841, 991, 993, 1368, 995, 997, 1370, 
       880, 898, 1056, 1276, 1058, 1415, 1060, 908, 1070, 1295, 1072, 1074, 
       1428, 1076, 912, 915, 1301, 1303, 1105, 1201, 1199, 1431, 1198, 1300, 
       1197, 1101, 1181, 1180, 1179, 1178, 1097, 1159, 1158, 1157, 1156, 1089,
        1123, 1357, 1122, 1121, 1353, 1351, 1349, 865, 1220, 1218, 1216, 1214,
        839, 1310, 933}], 
      Line3DBox[{936, 934, 1311, 840, 1215, 1217, 1219, 1221, 866, 1350, 1352,
        1354, 1355, 1356, 874, 1262, 1130, 1361, 1362, 1131, 1132, 1363, 877, 
       1169, 1170, 1171, 1172, 896, 1189, 1424, 1190, 1191, 1425, 1192, 1426, 
       1104, 1209, 1210, 1438, 930, 1200, 1432, 1202, 1433, 1106, 1305, 1304, 
       1302, 916, 913, 1077, 1429, 1075, 1073, 1296, 1071, 909, 1061, 1416, 
       1059, 1277, 1057, 899, 881, 1371, 998, 996, 1369, 994, 992, 842, 938, 
       1313, 936}], Line3DBox[CompressedData["
1:eJwl0LFKQgEYhuFfylVwLUqSiAhcg7qFDKEcpcHG4ARdQwYtDUWRUNFaGi1h
XkFIdAVGREREiEhegPRIw8P7n8+jg3PV3Y0kFRFFGhMRd8ynI+51nW9+qNh6
2mfLvaf7LExGjFjk0L6kR/ZlzXpu6pmu6CrHPjtlyjbNpq3NpftRL7SlD5TG
v+W5oNe+c+JuuG/JuG+0yIH7XGs6o1fezeksifuVOl3K3knsQ34ZsGP/0k8+
eOeNbfuLPtPhiTVbPv3/X/0BjvksMw==
       "]], 
      Line3DBox[{942, 940, 1315, 844, 1223, 1225, 1227, 1229, 868, 1246, 1248,
        1250, 1252, 1254, 876, 1264, 1133, 1135, 1365, 1136, 1093, 1173, 1174,
        1411, 1175, 1412, 925, 1051, 1403, 1098, 1182, 1420, 1183, 1184, 1421,
        1185, 1102, 1203, 1434, 1205, 1435, 929, 1080, 1299, 1298, 1079, 911, 
       1067, 1418, 1065, 1279, 1063, 901, 883, 1375, 1006, 1004, 1373, 1002, 
       1000, 846, 944, 1317, 942}], 
      Line3DBox[{945, 947, 1320, 949, 849, 1007, 1009, 1376, 1011, 1013, 1378,
        884, 902, 1280, 1282, 1284, 1177, 1419, 1068, 927, 1423, 1188, 1187, 
       1293, 1186, 1099, 1409, 1166, 1407, 1164, 1162, 1405, 1052, 1091, 984, 
       1359, 1127, 1125, 1260, 1259, 1257, 1255, 869, 1236, 1234, 1232, 1230, 
       847, 1318, 945}], 
      Line3DBox[{948, 946, 1319, 848, 1231, 1233, 1235, 1237, 870, 1256, 1258,
        1124, 1126, 1358, 1128, 1090, 1160, 1404, 1161, 1163, 1406, 1165, 
       1408, 894, 893, 1286, 1285, 1283, 1281, 903, 885, 1379, 1014, 1012, 
       1377, 1010, 1008, 850, 950, 1321, 948}], 
      Line3DBox[{951, 953, 1324, 955, 853, 1015, 1017, 1380, 1019, 1021, 1382,
        886, 904, 1287, 1289, 1291, 1095, 1394, 1040, 1039, 924, 1410, 1168, 
       1271, 1167, 1092, 1360, 1129, 985, 1261, 920, 970, 1243, 1242, 1240, 
       1238, 851, 1322, 951}], 
      Line3DBox[{954, 952, 1323, 852, 1239, 1241, 1115, 1338, 1116, 1339, 971,
        871, 1037, 1038, 1392, 1146, 1147, 1393, 1094, 1290, 1288, 905, 887, 
       1383, 1022, 1020, 1381, 1018, 1016, 854, 956, 1325, 954}], 
      Line3DBox[{957, 959, 1328, 961, 857, 1023, 1025, 1384, 1027, 1029, 1386,
        888, 906, 1292, 1096, 1399, 1043, 1042, 1397, 1041, 1148, 1085, 1343, 
       1119, 973, 1341, 972, 1244, 855, 1326, 957}], 
      Line3DBox[{960, 958, 1327, 856, 1117, 1340, 1118, 1342, 1120, 1344, 
       1086, 1149, 1395, 1150, 1396, 1151, 1152, 1398, 895, 907, 889, 1387, 
       1030, 1028, 1385, 1026, 1024, 858, 962, 1329, 960}], 
      Line3DBox[{963, 965, 1332, 967, 861, 1031, 1138, 1388, 1139, 1390, 1035,
        890, 1048, 1402, 1047, 1045, 1400, 1044, 1087, 1347, 978, 976, 1345, 
       974, 859, 1330, 963}], 
      Line3DBox[{966, 964, 1331, 860, 975, 1346, 977, 979, 872, 1153, 1046, 
       1401, 1154, 922, 1034, 1389, 1033, 1267, 1032, 862, 968, 1333, 966}], 
      Line3DBox[{980, 981, 982, 1348, 1088, 1155, 1270, 1050, 891, 1391, 1141,
        1268, 1036, 863, 1110, 1335, 1109, 969, 1334, 918, 980}], 
      Line3DBox[{1269, 1140, 1084, 1111, 1336, 919, 983, 873, 1049, 923, 
       1269}]}}},
   VertexNormals->CompressedData["
1:eJysuXk01fEX7y000EBpUknIUJKklCG7EqIyRUREGpCKQgMNhmRKaDCrZEzm
IWXYyDxknqfjzM7gUFQUnnOf+9zffdZd967nuWvd889Za6/Pd6/PZ3/28H59
vxKXbplc4eXh4UlYysPDx/2fiWhWKknNx0tWTN6ZCxy890b2cvvNOmx86X86
isHCt5U/QpWrOzHDx9muYL4D9z/WZutZDqDxyxIbfZ0WNL74reeiGgttPq6u
e7xwCO884R9aXOQgz//zez6+3yc8nI3PV39qNb/X9x/7/+765Tn/8/XZYsMK
dXYTKC1pfNhjshMJSea2aYQPoE+NpzNfK8MdW0bW7H9Z/7w4Y2baHg5evpP5
I4iDfkoBsm/FqzHyZ5Zj8UwWWF9sc1PQTYNUrb0Sb6c56Hj1nCfbLxKCQtja
x2c5eECPeXPa8yoEl+09s744CZ436U8Xr/0GSzJlC5UtOHimNt5sk3klrOSV
lpGz5WCHUXBD174q6FHvn/G5xLVvFH++uJkMn7XdBqiBJGjwMnCVJIxAWfLh
VRJ6dByK/fqK3D0KYoEO/KspAxiiv8fI9mAd1s0X+8iE0mG1lI9NcBYJRfuD
nIWLOXjXYL+V+e5SONnwar1eXR4e3T8u9ZRrNwtbF2GRUA5tWt+zrWw+wf2k
VR/8Rlh4JSc+xKW/H7wvCxUevfoNZlrfjzaaV6DdXEgUHz8HPhnTUj9NNIJT
3/cMfvkPaJB/yNo6dgIOV8ud3uzfAa+X7q2q1YsF+9apF9RvHKjSnzZfolQO
w4kbQqwSv0FX6mvvSncOhBxr9OX4fQENg1MFcSnf0XOjbm7qFgaYktZ/3tpP
wObbofkfctn4o7p7Swp0gXKJoPMX1QZMqcv1GLs1iJ/qorMPhZNAXm75ZuWT
FOx4TRLLLGPiktrNhm3HhyBrvyWPUUwLnMu3lG7/4gnnzk3veikxAeNNc8SF
4G64kv9F5+HbXNit7W0aE8+CzIIRzlqDIZiQu0hQMhzFa2rrE0ZvM4Csw2ZJ
d7Tj/tP/Nc7l/F/+7zgf3fJf40y5Zb5UWS0HbJp//FB7xgRS0t7H1vsIoP4y
aMhZMQWbLbcmN+lz4MXF8B+aSo3gOPfQ7OFXJawxgcIn0hx4Y7r+X5h1C+4s
WE4XPTcOk/tdFIUUWrDMfMHVS5KIIlla6yqd6LDZsmTAJYaMXV/2KLB3ZGLY
8Hf5vJlx8PWuN/9RSPxPnv83u8//T7u+rWQc7c84dJ0p2n8vl4gtvUvF6SLW
cKMaxG6nce9vXjrpwWwl9pd9ESvbkgRso64ioR4OWMXJ7pIM/wDX9+9bEP35
GZ4vqYhJ9+PAgZyd9b8tq6Dk0qvtRz4Xw8gVcXGPiRbQeaN1W8KMBt3+N8tH
XpFx6MW1g76BNKgstLPweEuGoNSIWzvKG0HV7eubQp4JuGLvccmpsROYH/US
flyoBoEn16y3GjOh2a37YY/8MLy6Sd7xUKINrl2Sn3fJYkNAs7Yb26oXopNr
Qg6GFsB/O1+FKvXCNu65o5pnd1UVEdGj5XtW+aZy+BjOud2hQwOhH1MHHBMp
aCI31eilSod3qncj9wMRLgofH51z6oI1UOV5zJYGz1aHiWX6k0DUtmTtsXed
UHRsmdXW9zR4lEM2hZkx8Cgd1ZKf6AWbtW82UCrKIfYQPdX7KQNyhjVeT3qN
YX3IlFlY3SA3DwehdZQJDrGdPc3XWyDo9YLcmQcu8OJWV7+nLAfWQptukVoL
qn66o9J3lQUHt12XFIgfRL/Xx9a3farG//E8/7lfvvFlWWdZ8ELoo/ZQ3DCm
5RQY/3iZBlVXej8c+zQBRz6eN5+ca8fRnJrNVkFp8O/VwXAnbv5FvZujCFxs
wc+ZHy3VHm6A0DyNEd/9bVDLu+vlPT4iCDFdovwVxrG2qyPDezkN3Atep2Z6
DaPpuPmJnW8JWH41W/zRQRqcCGp6Kb6Uim8ycGlY/WtQNy9I7DrOAsO5/iDF
7kG80mIl9uZJLdyvOtvmIc6GlSXfrvGz2+AHQX7b6etd0HYg0mbZ3WoYtu16
s7aDASPUpaFCOQTMJHESFNRH4b61NoWxjwbFUdJV6pKjmL7/dd2SV1QwOFff
kLGSDHcFh1n7D3QDM269iH0DFaomP9oXXSTCKI/z5e7BfljTzrYeWtILF9j8
C9aObPAcVThe+aEaw/BSQuAgDXJq+KnrT1Pgx6ttxiuH3kM7v6lechgZ0jTK
umVmuqAzrvbm7t1UHHqn0BQ9RAebYRehJ7wEPLHWS23avQ+NGgK777oyIExK
M5qHl4j88sdn9y57A6Xbrdcfv8qB+8cTdg3ZVaL+uqPjo08rQWdrxvHOF2wQ
/qPdXjfwDUwutVPGrvZAyvo58oVQGoQG20/PqpPgVqRG9FFGJ3rdWrOel04D
XPJj6IgCBTYkrXh5eV0OJPtsUyFUs2EdzMddeNALDwM0luozFaBVwmDryiAO
bP5ySODnz3J8bVzpdf14OSqz/qYace+9Q13ycaVtC77d/duI8FgErrnaO/vJ
j+Nj1U0G7ofH8Jvd/ewVlzpxjdYlvmN7SWhdto4UxKAhT3dVcp95B4Zny4v2
RfVg4l26z1oyC4njb2I6HVrR9fH5hsyHDLTfvN5tU0wnego/svojMoJ7tIU9
rGaouNdVf8v97A7MfF8eoXaEjOdqz85p3CJifXCAQAJPO769xVvxopSOeX07
7aVPj+M3/9Ci1ijSf/JcN8JOuSOAiF82+CvMb2D8x96Z9NHF53YnNtY9nk3y
mviP/f+Un5SDfLH6bgz0DXP+SfkzhjkDK5ZqGrwHe3mFuYYUEppc1G1fqjmO
5/yutQUVRIP5M8mfojVdeM2vI6RfawLDX+tOUWWCIXrJ+4dj0SysvvVj43PP
Iby79q3e2J1PoOJ0f+vrGQo2O5w9u1yDhq4mhJ9CpimQ//lPaH9MLwbcOfcI
S9gowVb+JWMVDSrXY5KVzkxg4exprXqrLswJyb13/2sq5HhaMXnYNFS7FLjf
cT8Fk3b+ukb7mwqiR3mnptv68MH25f037rExcUtx4NfvH4C6uz5MoXsCd4UP
GFe51+OVBSvJor91kLxGt9n7Gx3ta1+5dcxx87l3i+TQzWa4MDN4omVjL0bV
hxw23MLGO/QbnobujbCuVjT7cQgTxfw6flcW9oH2KP/8C249jn3P2TObSMBL
Pt1auJoCCc5i/MdujQHmLZVji+bC8y+Ze7a30UFT9aILexMZikxC7X0CyWhd
1H5jbIwI2oO3g1TPj2LCJuT9somAb5YFrHG+SoHI7bo7J5+OYaDXm6oalR4M
//7+jMJZGjgn0TiyRCIuWW+UYcrVW6ygh7vHoBq00/uOaw4h1E2VWNBqGCi6
p2whwJsAzHWJW/pf1UHxXKTuo0UC3s/gvbuozIB023az7L4mKNoVSZQOpeP+
Uv67DxxIsKvQNPF+UiMEH+6uk5El4lT0x0suQuOwRjiGVnymDbS/CHvmSXYh
aqQGXJpnwS6b7/YsyQ7wlFqVeFBjAt+R5Z40XuoC/cMP3EQe5YNdA2GikUND
H9vEwfifZDDz2rfDuaEEvqyamX/q2o/fNprfbdjIhrifqyvz/iHsGFlanaPI
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
F367EDJU2eYNR9b0fO89zMQWR2kh+cl2fNSgrFIhFAkSKf/3dWrT/u/1tLmv
fC3FTDSU3D2t49mCjv19TNfMBGg4bmZP1mGheXpzdn55LRo6810po3yD6MVV
3d+P7cHm68If/9c6Bm+sZufHNMGYIKlPPyIOr/9WVS2w682Wtj1S30zhg90A
o/A7C2UkMo7mXizBIC2HU6fFUmHIQlLs7jgLF/9cM9IjJ6N40JG9XBcSQeKK
r9WnJHegbs4Lfc5e5zUr4B5Prguct78VrzUVCbam+/X+zbHQqeiNwm7tD6BK
3Ta99g8L1QQbIvrCAiGOL++jQFcycJnEj7YVslD0hmewMCsHuHJfhjiM50Oe
6nJAyq80eMMiJL1lf394xw/L1KkY2PH8+XuTmB9g3rv58c80Fpry8ZSM8uRB
iHaGmoZ/A7w+bOO114WJcadmFlLZPKg88/j12pBfOCmgUUvgZPMRR2qZ2OFR
vBUTto4/m45hDsPqF0gdEGDlPXue3oLDoqSFAw9YOMEl81Z2fzmk7PNY1un6
gfXPJ2Qla1h4yPT1um1SP4GbY8tcW00wdld0JtqVslB1hdCGC1rFQD5Qek1f
IAZu+/1V3Lqbhb0VywNFk79A6+5JS1G2nqZxWx9WKWHgjrulbQHcndBSdCdr
urUE3h+YkVfnS8ChWPc5STZfBiQS0oUPt8L1s6p2+uKF8C455ENmPAtWDGhv
LHX5AaTxRp7zbn0g61ARdp1rHFwv7jc3e90OTp1NB6cHxjHC+B9x52Q3uHo5
Pl0l14adE9SubakM/Jm0zsqjtQvuDs7Zfj0Si5+DNB6p3aejztWjW6+b9IH7
dOCnTVKVkFxCDbxs04AanB84DSspsGGVwbLMdhJ67zktdOFfFG57WM11pJ0F
+TaaL96uLABdeXrIPzavunZOfWvmJqGFv4YTv1Qejr1eleO5jQZmLfQq03oi
6sW7KfbYRiFpS9BljjYafCyroXiOEvBQ4N0e1UWn/89y8P6r/mDjluzn0zSI
uhdZ3Z5NwNXSu5uu8xwDYETXc8zS4JR+id+PTAK63eQrSiFcArl2C630wnGQ
O813pYI1hOsE+vilHnpC6L48YatRJtA+FkhyvWvGoUjnbKPdkZBEfbx3pJkF
mdo3C4TOJYP81VRDPeF8eCB2c6clsCDY91VVUkgVKOWb/6DEI+So77c1yGoF
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
Eg0dfUwyJJGjbtwEMvAokvsNNFLw/wEwpb/Q
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{368.3309140645845, 384.8899955246863},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{0, 1000}, {0, 2000}, {0, 4000}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.9766252254220626`, -0.33851527123690617`, 2.725501812394297},
  ViewVertical->{0.403236039215933, -0.8513233157322959, 
   0.33563269919365213`}]], "Output",
 CellChangeTimes->{
  3.692695385971397*^9, {3.692695421177864*^9, 3.6926955474157057`*^9}, {
   3.692695709843033*^9, 3.692695740056993*^9}}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJzFnX+sZVd135+J8xSISDsmOqIwqbme8TXGdwz38mSLRM28VO4DmxAhp0kj
KFKCnKhJbeMgCqqU1lOKUiByg+0AjVAkIlypRXFiO2ATSIWrAMJKiRKqGDM2
NCFWfzmOCkMnov7Vt+9737u/+7PW8kD/qf/w1f3Meuuss/baa6+9z973zN78
lmt/9jlbW1u//7ytre/a/7zvhofvveHhsyevue341bc9dPakvh987uF7/OTf
jd+3d3M94l3+6vZ5/EiQHzn1T4X+KchfvFZ0NMiPnPbMCntmQX5r/d/xID9y
2j8v7J8H+Rvb13svDfIj5/0uivtdBPlHmpobXh7kR07/LAv/LAt7VoU9q8Kf
O4U/d3ZHf0XerLj6q1U8K/62oWd7d63mNON2ezePT8kxDrd383iTHsbV4XVD
/Eg/42R7N48HXZftvr2bt6/sYTtKD9tLdtL/ka/te4R+3tv0Z/ZrfV//3bEj
QZ5+FqefR/2zwOnnUf88cPp5vO4icPp5tGdZ6FkVdu4E/6RxfjH9uYc8OKG9
pgM7TzNupyJupyJupyJup+BP8TxupyJupyJupyJupyJupyJuI1+rfYR+29uM
Exwv9H2dt249GuTpN3H6bdQ7D5x+G+1ZBE6/jfYsCz2rws6dcL/k66+30z97
m/GS46a+NzuvCP10VvTTWfCPeN5PZ0U/nRX9dFb001nRT2fBDxVvl3s8+GFv
Ux+wTtD3Jn7HM8eCPP0gTj+I0w/i9IM4/TDqWRX27wT7s3HhjeF+1U/nuK9e
D7X+dUHIJ/Min8yLfDIv8sm8yCfzIp/Mi3wSedP6QLivvU3dxvpN35uWU3Zf
4rwvcd6XOO9r1LMKPGuvjK/77X20f29TX7LO1PdPtH5wK/PVoshXiyJfLYp8
tSjyVeTrfhXs3NvUu6x79X0dv2anOO0Up53imT8zvo77G2nP3qbOHq/b6+/2
cV3IY8sijy2LPBZ5+3Z/uO7epo5nPa/vzW8vDu21Ktor8nb/bw/69zZ1f55/
dtZ2fvGZVwauz3yeUM0ftoO86q5cfgpc42OuZxa48mSufx64+mN+3UXgiqvc
nmWhZ1XYKf/3un+NT9ffyeXPXH4KfKw3qGcW+DjuUP888DG/8bqLwMd+SnuW
hZ5VYWfhT+P5PKv7cZxPdU49+Tyi+32cL3ROPXn93NtprJM7p57111BP9nYd
68bOqaeZHeuuHgdjfdV55udYt/S4GeuTzjM/x3qgx1mTPmXxlo+/B3EWx98e
l+M423nWXnEc7HE8jnedU08+TvW4H8ejzrN2j+NL7yfjONJ55p84XvT+M44L
neuz6lfkQz8L8lPgw3wu6JkFrnjL9c8DH+rKcN1F4N7O0Z5loWdV2Lmz8Qfz
T/U9z1NT4OP8lXpmgctvuf554GO9zOsuAh/rPtqzLPSsCjuj38iZn8c83fMz
OfUwP4szP5NTD/PzaFfPz+TUw/w83n/Pz+TUw/w8+qHnZ/LMz56fh/ay/Jxx
18P8PPqz52fyrL08P7t+z8/k1MP8PLZLz8/kWbt7fh7t7/mZPPOP5+cs7lt+
Jtdn1R/yOmYKfKjDg55Z4IqrXP888KEOD9ddBD7U4cGeZaFnVdi5s7nvvH6L
38nHuov5ZRa4/JPrnwc+1i287iLwsa6gPctCz6qwM/qHnHlSn3kdOxV17BTy
5Jh3Wcd2Tj3Mk6PdrGM7p568ju3tNNaxnVMP8+RQ74Q6dgp50tsl1rFTUcdO
RR07FXXsVNSxU1HHTkUdO4U8SZ61e6xjp6KOnYo6dirq2HFc73Vs5/qs4phc
8ZnXB7PAPe6i/nngat/8uovA5f/cnmWhZ1XYubO5P/bf6nteD80Clx/yvDAP
fFx/5XUXgY/riLRnWehZFXZGP5AzX/E5lvIVOfUwX/G5l/IVOfUwX/E5mfIV
OfUwX/G5mvJVxl0P8xWfwylfkVMP8xWf2ylfkVMP8xWf8ylfkWft7vmKzwWV
r8gz/3i+yuYPLV+RD59J/JEPcXc74/l44ENcGB/aOVx3EfjQDsGeZaFnVdi5
s7kP9q/qO7nul3ycv3Q+zkfYnxeBj/MF2rMs9KwKO+P9kjNvjHKcD3ZOPfl8
cBbyBjn1MG+4/jgfnBXzwVkxH+x+H+eDszH+TA/zhuuP88FZyBvi+Xywt6vy
Bjn1tG9xPjgLeYM880+cD47x0eeDneuzihtyxUNeT88DV3vl49kicPkzt2dZ
6FkVdu5s7GX8V9/Jx7jufIxTjseLwMc4Yj9cFnpWgVf3Rc7+q0/2X3LqYf91
/d5/M+562H/F2X/JqYf91/V7/yWnHvZfcfZf8sz/3n9H+3v/Jc/84/3X9Xv/
Jddn1d75fHUeuK97x3pxEfjg7zBOLAs9q8LOnY1d+Tw6ficf57+saxeBj/NT
jmfLQs+q6D/RfnL2o+H5Q5jvz0M/Es/n+/PQj8iph/3I9cf5/jz0o8EPYb4/
D/2InHratzjfn4d+RJ75J873x7qkz/eZ73bKdiL39ck4L1oE7uuTsR5aFnpW
Rf7dGZ9TWfxU3/N52iLw4XlWqM+WhZ5VMR7kdjpnPHOfluKZnHoYz9zXpXgm
px7GM/eBKZ7JqYfxzH1jimfyzD8ez1l93OI5H3d3Sv/m8/BF4L6fK9bfy0LP
qhjvdzbXyef78Tv5OE9n3b8s9KwCr+whZ1y5n+I6wyLElXi+zrAIcUVOPYyr
0S6uMyxCXLmdcZ1hnC/1dQbWYTulX8h9HTLOu5aFnlVR5+0M8ej+r77n87pl
0X6roo6M1yVn+3Jfo9qXnHrYvtwHqfYlz+z09s3msa198/p4p7yffN67LOJ7
VdTZO5u/o3+q73k/WQVe6Senn8f+xHn3MvjZ2yfOu8fr9Xk35w87pR15P18F
PvbrVZEH4vd8fhL1kOd5Y/RLzxuc5+yUf5/Pf3bCp/RX36vPg/opno9rXny2
fZjrr7af8Fz7drgvZa3/WZ4v87nqWuxZnr/wecT641nWRbl+2C73bOsk67xr
6wznmq9xHtS0Plu92r55fXiuOoHj9bnGBebtc+Uf5o32/2frX+wv54rbc8Vn
1V+qvFHl7Wq8Fq/qxmp+xPYe7YnritVziup5K/vDKF/tM6z2pVf72Kt98tW+
/ep8QXU+ojr3UZ1zqc77VOehqnNk1bm86vxjdf63Opd67nMBI4/7P2nHKB+f
s1fPs/I8xfVP6o/z+mp+VNW3VV1UjePnGrf877+d8erb/ft2v3c+55snv/T0
u69/HL8/0Li++79H+e2gR+2Xy0+B+3PCqGcWuNov1z8P3Ne74nUXgft6VLRn
WehZFXZ2P2f9qPEPPnLivL/6SuX/7d1XX3HPrSdOb++SU88l//b8R+7EPuXG
1R63nv3VK75x7Ejg1HPe5b/3xhX22fXrTrvP/MneHV84PQVOPW957k0PPB/7
UxpXe99w51NH/v2tRwOnnq88Or/yf+D8b7d/tnvjVadP/l2LkywfNn78z268
9mt47tS44un4PR8/+zuHz22cU88jr7vmua/Hunj3w3z3kQtvvfMHLA6zfN74
bZ+6+P7/gPXCxjfrUrdcf92vWNxm40Xj11x63jsuw7pu9+di95onXv3ib926
CJx6tvYD8dexrru+X+Wznz/2xZ+zfpGNd41/4vxPPLqNdd3eLsvdN/7jm6/6
BetH2Xja+JW/98DrPol13W7/avfKix6/cGb9LhuvG3/BTVde+otY1+3tu7N7
wZff8MSXDusB5/65e975h/nzu4Zxq/Gs3nd572dRzxS494OoZxa4x2nUPw/c
4yhedxG4t3O0Z1noWRV2dn9m43/j2TxJejhPck492fypX3ecPzmnnmxe1Xg2
r3JOPeuvmG91+8f5lnPqyeZhG/2YhznP/Mz5WffDOD9znvmZ87ZNO2LeRu56
svlc9+c4n3OetRfnedLPeZ5z6snmf71dxvmf86zdOS/s9o/zQueZfzhf7O07
1nfO9dmuful537e+3qeeef6mX4izf1Fe8U+ueM71zwJXvOX654H787J43UXg
/rws2rMs9KwKO3eCf8iZZ8SZZ8iph3lGnHmGnHrWXy3PjPb3PENOPcwzg37L
M+RZvHmeGf3Q8wx55mfPM67f80zGXQ/zzOjPnmfIs/byPOP6Pc+QUw/zzNgu
Pc+QZ+3ueWa0v+cZ8sw/nmfG9u15htz1vGfr+w/lXjDEc+NZv3B5j1vnHofO
Pa7ideeBe7vH6y4C93aJ9iwLPavCzp3gB/IsDzSe5QHn1JPlAdnDPOCcerI8
sNGPPOCcerI80P0w5gHn1JPlAelnHiB3PVke6P4c84DzrL2YB6SfecA59WR5
oLfLmAecZ+3OPNDtH/OA88w/zAO9fcc84Fyf7Tb+2dbf2m3u/dwzL9zEoTjj
mfKKN3LFD7nigdz3kUZ7FoH7PtJoz7LQsyrs3An3S85+Ks5+Sk497KeDfuun
5NTDfirOfkpOPeynrt/7acZdD/vp6M/eT8mph/3U9Xs/Jace9tOxXXo/Jc/a
3fvpaH/vp+SZf7yfju3b+ym5Pl+z/+9v3frbuzes694f2MSPOOOQ8ooTcrU7
udqRXO1CLj/ndi4LPavCzp1wX+TsR+LsR+TUw34kzn5ETj3sR67f+1HGXQ/7
kTj7ETn1sB+5fu9H5NTDfjS2S+9H5NTDfjTa3/sReeYf70dj+/Z+RK7Pdhev
PHUQTw/d3M87OPf4obzal1ztRS7/k8uf5PJPrmdV2L8T7CdnnIszzsmph3Hu
+j3OM+56GOfijHNy6mGcu36Pc3LqYZyLM87JM/97nI/29zgnz/zjcT62b49z
cn222zhxmM++aOdfxPVd/055rwec+/ju3Mdr5z7+OvfxNOpZFfbvBPvJP4F/
f2b/v0tOHeyH/083z8N9Mf4lX3HpkR/I5Qdy+YFcfsj1rALn/bKf0n7Ks/9K
PqsDT2zFc0CSz+pDyrs9Wd14YiueG5J8Vk+e2IrniSSf1ZkuT3uy+vPEVjx/
5P5nXSr7Pc+4/axXXZ72ZHVsk2deknxW357YiuebJJ/VvS5Pe7J6WP3K85vk
yUf/97w3+n+sn10+b69VsId50v3JevvEVtzv5PazDnd52kPe8tRFW5funr63
zStfOtRvjWd1oMt7nebc6y7nXkdFPavAaWdWfzae1Z+NZ/Wnc+rJ6k/pZ/3p
nHqy+rPxrP50Tj2Mz9H+sf50nvmH9af0s/50rs9b2+rBqcvW+fY/3nzZxj/i
9DPl5Qdy3VeufxU47WE7irMdxdmO5NTDdhRnO5JTD9txtL+3Izn1sB1dv7cj
uT5bv5q2Lt+9fj1vPbG5L3H6h/Kyn1z2kPO69LM4/SxOP5NTD/0sTj+TZ3a6
n12/+5lcn+2vvmf3Fev1utMnXzHcR+O8L8rruuTUTz+I0w/i9AM59dAPrt/9
QK7PVpd996kD+x66efyd6sZpD+WpJ9uH0zjtdD1uJ7k+298/5/6Dv//TT68C
px5ytyfbp9f+n+1Xaa1TPRfOnu+07pGtA1frUdW8u5qnVHV7NS5X+bnKA1U8
V+3+nbZL1e5V3Fb9usqr1bj5ndZp1by4WhdSu5MrTjKePVdt37J9Hf+v+9bI
eV3nz/Ych/zbWQfL1g3Iz1X3kp9r3CT/dvJelmcy+ba/vel718f7/jXt2xVv
36aPnR/kD/L8kULPFLjvd416ZoEf2Hm80D8P3PeLxusuAvf9nNGeZaFnVdi5
E/xGP7dv9z/9fPjt7Ia3euTap54f5OlPcfpz1D8LnP4c9c8Dpz/H6y4Cpz9H
e5aFnlVh507wD/3ZPp/6yAvgn7Mb3uzZ2/x7l6ffxOk3cfptvO48cPptvO4i
cPpttGdZ6FkVdu4EP9Bvzb4PveaF8MPZDb99nz766hcGefpHnP4Rp3/E6Z/R
nkXg9M9oz7LQsyrs3An3S/+0v3/V4/F9W03+sc+/BPzsRr7133f+5ejPJn/e
vvb37X9Sf+a3Jk8u+cyfj230zoN85ucmTy75zP9NnlzyWbs0efLRn8vCn8vC
nlVhz6rw507hz53QXlk8RPmDc2Q/+OJjaJezG96+ffVFx4I820Wc/henn8Xp
T3H6bdSzKuzfCfbzftd10w0Xw/6zG76uezb/3uV5X+K8L3Helzjva9SzCpz3
lfO9k60u+9KnL4GdZze8af+l/U/K035x2i9O+0c9q8Bpf873TrZ6cH7By4I9
H9///CfXxfdkSb7Nh/7wyMs2XPKtHn3RdYugn/cleXLJ834lTz7avyrsXwV5
+kHy9Fsuf7aQ3zv5vv2rfebey3FfZzf8on17fn7/k/K8L3HaL057cr63fq/f
e971Cug/u+EtLt64/0l5Xlec1835QT+6+06+z+vshrev//LOZZDP+l3kB3Xy
Qw/G93CJt28ffXAVuOSbWd+49+AchM9TyFVX5/JT4Kp/cj2zwJX/c/3zwJVn
8usuAvffEYn2LAs94/to4jyi89H/B/O8WCd3Tvm8Puyc8nlddCAf66Iun103
jssH7R/H384pn49fnVM+Hxc6p3yeb7d383zb5aknz1fbu3le6pzyed7oPPNP
7O+dUz7vv51Lfu3vre8LcejzYI9DcsozDskpzzh0eY9DymfX9Tj0fONxSE55
xiE55RmH5JRnHIozDilPPYxDccYhOeUZh+SZfzwOySnPOCSXfPv+sTteUOS3
qchvU5HfpiK/TUV+m4r8NhX5bSry21Tkt6nIb1OR36Yiv01FfpuK/DYV+W0q
8ttU5LepyG9Tkd+mIr9NRX6bivw2FfltKvLbFOKqtce1V78wxInqC8aJOOOE
8tTDOPH6xeOEnPKME3LKM07IKc84EWecUJ56GCfijBNyyjNOyDP/eJyQU55x
Qi75dTX8wEt2uY5EfiB/PHDVmeSqM8lVZ5KrzsztWRZ6Du7jfz0e41P3kY+D
s2IcnBXj4KwYB2fFODgrxsFZMQ7OinFwVoyDs2IcnBXj4KwYB2fFODgrxsFZ
MQ7OinFwVoyDsxCHLY7ef7h+xHUt577+49zXT5z7+oNzn187V7zlevrvfjNO
yHVf4owTcsozTsQZJ5SnHsaJOOOEnPKME3LKM07IKc84IZd8ey756L5/8/ph
XtQP86J+mBf1w7yoH+ZF/TAv6od5UT/Mi/phXtQP86J+mBf1w7yoH+ZF/TAP
fm7+eOX9lwS/qZ/Rb+L0G+Wph34Tp9/IKU+/kVOefiOnPP1GLvlm75/s3w/X
P8mVf8iVf3I9B/sV37nvx7w+WRR1yKKoQxZFHbIo6pBFUYcsijpkUdQhi+C3
p/evf+F9l+9y/ZNc/iGXf3w/td8Xua7r54D9vsgpz/sil3yj9+1fT9eV/eSy
X/+ej7PLYpxdFuPsMq33vnpn16Pr+r622F6rdH4R1yFjPen5J47vsb9U8VD5
s7ovt3P7S9H+Z18HrtaTq3Xsal39O31eUD1/qZ4rVc/RvtPnj9Xz6Oo5frUv
Iu4/qeJkXTfZ+ttBvB4J3OfPzn2+FPXMivW944X+eeDjuRVedxH4eI6D9iwL
Pauw/uPzeec+f3Pu9XRcRzpe6J8H7uNZvO4icM930Z5loWcV1iV8XcC57otc
90Xuzzuc+/OOeN1F4P68I9qzLPTEeajsJ5f95LKf3M95OPf9/s59X3m0Z1no
WX3HeZt1uOwnl/3ksp/czxc4l/25nlWoV3Vdcl2XXNcl13VzPbEek35yP//i
XPpzPav/b+Njnj/r9eq8n+4U8V/P46p5R1X3NjvWv/N5OL5c9PiFN1x1uC/U
OeV1X+/7/IOnbz58Lumc8rrf9rusbzrMo84pLz/ce/KiNz5xuG7vnPLyT/u9
1l//y6ODfOuPt99y/XUfOlxvc/nsuuy/+v3P1n9vuOr0yf/5omOBU17t8pon
Xv3iVx32b+eUV3u133f9V4fzbueUVzs+/Y+OffHBw3l344rz0xfeeufF1y2C
PPVkdVTj6hcfe/Dpd7/tcN7tnPLqL5/fu+KenzmcdzvP/NP60RX7AfeeO5eB
Z/HZ+tcdT33klrseXAXu/UW/r9ji9i8uuO4vLrDf52Q8iytu9ZydnPJ8vklO
eT6HIqc8ny+4vD9foHx2XY9nccXtOq+96FjglFfc+nqdc8pn63XOKZ+t1zWe
rde5PPVk63WNZ+t1zimfrdc5z/zD9TrnlM/W65xLvv29fm/Q442c8ow3csoz
3lze443y2XU93sQZb+SUZ7yRU57xRk55xps4443y1MN4E2e8kVOe8Uae+cfj
jZzyjDdyl9fv0TF+nFM+ix/JM35cPrsu40fn1xg/zimfxY9zymfx45zyWfw0
nsWPy1NPFj+NZ/HjnPJZ/DjP/MP4cU75LH6cS75dT78D5vEgznigPPUwHsQZ
D+SUZzyQU57xQE55xoM444Hy1MN4EGc8kFOe8UCe+cfjgZzyjAdyyfvvfbV2
nO2decme/V4Z29d/R8vbl5zybF9yyrN9ySnP9hVn+1Keeti+4mxfcsqzfckz
/3j7klOe7Usu+aZPvwfV2uV/rz73w5+13w1je4mzvcgpz/YipzzbS5ztRXnq
YXuJs73IKc/2Is/84+1FTnm2F7n3X/0OUvPzJ2+57QNXqR2S5+/i9H/73s7D
ZnnS5aWH8tSf5c8TyfN66aG8eJZvXT+vy/alfvIsP59I9gNIPsvbLk/9WT4/
kewfkHyW512e+rP8r3b3eJN8Ni64PPVn44V+V8rjU/LZOOLy1J+NL/o9Aebn
xrP87PLUk+XnxrP87JzyWX52TvksPzunfJafnUte59B1X4898affetJ+V4f3
K877Jac875ec8rxfcsrzfsklr/P1svOfXnff7D32OzC0X5z2k1Oe9pNTnvaT
S759b78DoOve96Yv/Ot32e+u0B5x2kNOedpDLvm2vtB+f0B6fvMj//xf/Ij9
Lgr1i1M/ueT1OwbiP/m7f3Tvk/a7KJk9eq7q5/L1Xe8/Hfn4fsD+3HJ8X2rn
e8N7zvpzvy4/8i4/Pk/r8iPv8uPzq1FP3x/a9Yzyo/4u3/Wo/qL8yLu8xn/K
j7zLazyn/Mi7vPIuufIQ9YzynY/yXY/6N+VH3uU3/QzyIx/9c/edy9Q/nY/x
+ZCdg/P4dN7aI54/G99fGeOzn+siz+NtezePt34eizyPk36+ijxv934uijxv
x37+iTxvl36eiZx+PqgvuH9hb3gfpPtTnP4Upz9d3v0pTn+K05/i9Kc4/SlO
f4rTn+L0p9vj/hSnP9v3uD+iv781j8OpiMOpiMOpiMOpiMOpiMOpiMOpiMOp
iMOpiMOpiMMp+K3dT9x/0d+HS//wvAg5/cPzH+T0D89tkNM/PJ9BTv/wvAU5
/bP+13BOor9HOO9Hs6IfzYp+NCv60azoR7OiH82KfjQr+tEs3G/7jPv0+/uU
eV/ivC9x3pc470uc9yXO+3J7/L7Es/wQ97n090fn/XRe9NN50U/nRT+dF/10
XvTTebCf+ykkz33Z5LST+6/JaSf3U5PTTu5zGfvXouini6KfLop+ugjX5T4a
yXO/MDn1c/+v9LcP348z9qNl0b+WaT7x/Tvjfa3S/Oz7etrfXf3V/v5j1Wnk
qivINT6SK/+TK/9n8o8dPkdzrrxBrn5HvtlvAq54JldckavdydVemT13H7YD
/dn9P76nttdpnY/1RufjeNr5OJ6O8n186XzMw52PeazzMT90PuaHzsd+2vnY
jzof43+0p8dz5/Rn+/tY924X+1u3i/2h28X5xYP2iOPXgf6Y/7fDPjXxPI9t
h/164nl+2A779fy+vF+v8yne47vZv4z3lG/2+Rof9skaH/afQn5zvtO4/EYu
v5HLb+SKN3L5k1z+JJc/M3vu1nkf4/Knz38ePtbnU+TjvuDOx/22o3w/z9q5
/EYuv5GP+1I7H/eTdj6eK+p8PE/TufyW2XO3/e6BOP3G/ijO/ijO/ijO/uj6
477gI8W+3SPF+aojxbmiI8V5nSOhP/p9hXHW3lM7jJvGh3HT+DBuQn4zbhof
xk28H3czbhofxk3jw7hpfBg3jQ/jpvFh3IQ9m3HT+Jjn+/tKx7zd+TgOjvI9
n3c+5nO8D9V+j0J8zOedj+Ng52Oe73zM852PeX60p+f5zumffFybinFtKsa1
qRjXpmJcm4pxbSrGtakY16ZiXJtCP1qHh72fVfdLrnjI5JsfyOUHcvmB3J8P
O1c8kMs/5PIPufyT2XP34XMQ5/KP1h30Xs/xPEfn4+8ldC4/kMsP5PID+Xhe
ofPx3Grn43nN8b2k/RzkaE8/p9g5/cD4F2f8+3pNPEdytDjncbQ4j3u0OId6
tDjfebQ4f3k0P4dh7ysd9pfdHn+vhVz3S677JR/2NRgfnjMbH567Gh+eT+J9
q5vnfrBn8/zN+FhX9Pdi6r7Ix3qg87Ee6Hyslzof64TOxzphfF9srxNGe3qd
0DnvK69zZkWdMyvqnFlR58yKOmdW1Dmzos6Zhfhsf+fv75T95LKfXPaTq13I
dV/kui9y3Vdmz92H+0CcD/1uC+/btt/3EB/3AXU+7svofNyn0Pn4PH98f3B/
Tj7a059Xd57ZH89XHS/OVx0vzpkdL86ZHS/OmR0vzpkdT+et4T3lh/NE5z5P
dO7zROc+T3Tu80S+d1nzRNqjeaLzsR4b3y/Y66XOx7qx87GO6nyso8b3QPc6
anyPe6+jOqedeV03L+q6eVHXzYu6bl7UdfN0fsT3F2o+4tznI859PuLc5yN8
D6LmI3yfveYjzj0+/X1vw7qE8WFdwviwLoH3LG7WJYx7vDmnPWwvcbaXONtL
nO3l56S9vfg+OT/P6tx/18S5/54H3wf5nsPf5XAue8jHeq+/X22su8b3R/a6
q/Ox7uqc+vO6blHUdYuirluk8xp/H5vPC/h+Ss0LnEs/ubcX31spPzt3Pzun
Ht6v/06b36+fm/f7zd5z2fSQSw/5WC/194SN9cn4/jCXz+uZZVpv+3vCfPzi
+8N6nIzvD3Oe9SO+P0z52d+T1bj2z/D9WVr3du7r3s59fcC5r59QXusGzlXX
kWu8JvfxxbmPg8593HHu445zH3doj8Yd+tP9/Jx/+Nb7PoN9So3fdOWlF2/h
+ULjb3nuTQ/8Bp4vND5/x2tP/RDWYdbnqS897x0/hHWY9XntP7vx2vdiHWZ9
3vyDj5z4MtZh1uedX3fNc1+K8Xp9fvlTF9//WYzXjV//1ts/9P0Yrxu/49dO
fepujNeNX7B/w1/GeN34qdf+1Qe20C/4vjadJ3Yu/5D7eTvnPp+lvOazzuU3
cq9vnXt969zrc+de9zr3ute51720R3nDOf3Z/p6/r6Dzs/x9Benh7ys0znUP
cc4rXT/nBY1n84LGs3lB49m8oPFsXiA7OS/QfbE+9PcA+vq5c18/d+7r55TX
+rlz+Ydc/iH3etW516vOvV517vWqc69XaY/qVef0G+NHnPEjzvgRZ/y4fo8f
ccaPOONHnPEjzvhxOz1+/L4YP/6+SL9f5x4nlJcfnLsfnLsfnLsfnHucOHf/
OHf/OHf/0B75x3nmH8ZD41k8NJ7Fg87PMh4az+Kh8SweGs/iofEsHmQn40H3
xXUqf0+o2p1c90uu+yXX/ZL7upZzX9dy7utazn1dy7mva9EerWs5z/zg7SvO
9hVn+4qzfcXZvuJsX3G2r9vp7SvO9uX7XmU/uewnl/3kai9yP4/lXPdFrvvK
7LnbzrGK877YLn6O1dtFnO0iznYRZ7u4Pd4u4mwXP9fs7dL+3t+3KzvJZSe5
/E8u+8llP7nsz+zReSPntJ9+FqefxelncfpZnH4Wp5/Fs/zm7y/2furc+6lz
z0vOvf869/7r3Psv7VH/dU77W5x/wfzs5yXb+5dlP7nsJ5f95LKfXPaTy35y
2p/lwxPJurp4lg9PJOvq4lk+PJGsq/P91J7HnHsecO55wLnnAeeeB5zTniz/
NJ7ln8az/NN4ln8apx/4Pm7pJ5d+cuknp37aL077xWm/OO3ne8Olh1x6yKmH
9ojTHnHa0z79feWSJ8/kXb849bf+7+89J8/ktV85/o7m2ZP8vUDfHxnlt4vf
ZTwS5MVz/VOhfyp+3/FokBfP7ZkVv4N4vLBnHrjW0zP5tv7zlUfnV34Z9q9/
B+/8Tzz6dlxXvy/H33dsnPo1X6O8eCav96RTvnHKqz6kvDjlVbeQa5wlV/6v
8nwlX3HmQ3HmE3H2X3H2L/FqXMjjZPzdZj9XKO7rn855/kuc579c3s9Diau+
JVc9QD4+x+y8ui+eKxHnuQ9x+Tmzx89fiI95aXyPuftNnH4Tp99c3v0mTr+J
02/i9Jt4dt6q8ey81fp3U+E3cfrN7eF5q8bpN/krO3ep35HmuUvJ89yl9h/z
3KXWxXiea/37rvCPeHaeq/HsPFfj2Xmuxukft4fnuRqnf+QX+sH38bsffL+1
+2FY9zE/iNMP4tl5scaz82KNZ+fF1r+LCz+4PTwvpn2f7gcfj3lf2kfO86Sb
8QP3u1nnwjnTJp/5ocmTSz47f9p45p+mJ/Nn49k5uKYn82eTz87Hafyjn7Xu
w3Nz8g/9L//w3Jn23TI+te/W+bBuiPOtjdOf4tn51saz862NZ+dbtZ7F83ey
h+fvtD/Y7fd5qdspTjvFaac47fR5u9spTjvFaafsoz3itEec9nh94/b4eq7b
I057ZAf1yw5yr+f8uj5/du71otvj68vOfd+22+n7tp37/Nyv6+vUrt/3c7ge
/T3lxbN403xJ+xn4Hg2N//zdDY17fO+zxgG+r1l5lPLKo3zvs/apOlc8kisu
yH1e49z3rzr3/avO5b/MHu33cC5/rr2Mc0f6vcbw/GP/vsh1X+S6L3LdF7nu
i1z3ldnT7ovc4yc8pznMt849jzn3vOHc84Zz7798fqD+QnsU/85l/yv33v7y
t9p+UH1yvuS/78X1tXbd7DlTuy65rputxzU92XOppodcelr35fMqrd869zjk
+kjjP/qGH3nwb/z1mWF+0T4f+uZFlzz85JnhPQXt820//Y3VHz59ZtgP1D7f
dMlrf/kPnjkz1Ift86V//7Hf+Kmt/h4BfX74yct/8s/f9tkNV3xd/7zv+ebf
+/qZzfiuz49edesTdz1xZjNu6vPUZ2759I/t28N2/O1f+eEP3Lxvj6/nts//
9sB7Hz2x1X/nX593veGPfvyiF9y34Wq3//w7H3zzk//lzCZv6/Prl37jrq9/
68wmD+vzsj/4m/f89lNnNvlWn5ddeP7zLn/mzHCuu32+7qafeP+Tz5zZ7B/S
54d/80f3/vi/ng3t8v6/fskff+Er43vtNR/iuWXNA/i+IdXFfE+Q6jjKK0/w
fUPqf869vnA+rmN0Pj4X6Hxcx+58XMfu3P1Ne/o6dufy85u/9ouvf8nF4+8Z
aT7E9xZpfsD3Dak+pbzyJc+pKg9x/4TqLOde7zj3+sK55xvnnj+ce56gPcoT
zuW3zz/1rg9/1M7L+bjP9xZp3Of7kjQe8ryu+nfYN3A47jv3cd+5j/vOfdx3
7uO+cx/3aY/Gfefyz6feu/OGn7htXG9tnx/YetXv3/Pn43uXmh8e/ua/Wdx7
e//u+6y4Lqx9VmG98nCflXPfZ+Xc11ed+/4r577/iuue2n9Fe7T/yrn88+9u
effX7sU5q/bJ9/XIfnLZTy77yf25CfcZ6LkJ95fouYlz2X/t//mxqz748Pi8
sH1y3dZ/b9W57CSXndn6b7Mz2+/S7CSXnT932RPv/O+2n16fP/h3/sH7znxv
/y573n/bz/7yL3yy77P352i+nuvP0bg+rudoXGfXczTnsvOnfuvM556xfer6
/KWfftfLvvvGlw/5vX3e9frHf/WO4+O+nPb549/7M4vX3zY+T2qf/xfAZI2n

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt011oj2EYx/H7v7E/O5Bj5S1S5oAiDqY0cqJMrKWxzV7spb0aihJHygEO
vESrnSwnygHWiiHvIjITTbOxhdXEbDPMiebz9DwH3//1u3/3dV33dT/P819c
0byjKSOEkI9MXLeI1h1+5iONLKzFUizBsewQNs0MYe6sELpmh1CTFUItr8xe
JYpRgCLkY5+9ZfK/pkP4o6ZRfgNvhLdxRgir+eP8Uv5e/kmU2lvDy0nOjs7d
gvXIxTscMWef+B7H6QHxA07Rg+KEHtv1z03Hc5Uks03p2+ysRucUYJo+6h4N
qRBOoAydOIsz+KffAnEsei7yX+l7Q/5PfSrVVmfHdeVJbV4yazTnpJwqOTVy
WnFYbSHvN+r59bxReie9h27GeTNXmblQrxXIwbpUvI70aT3avKw+NaPW0/iC
O2r/2uvX77J4T86onEFxwP7HzPge4yG+y0K0J+/9itr7atrV3nS3EnUVUT/r
FropO36f25J3Oif5PqJvIzp/OJkhJfeg+Ten496ppP8vfWrt1ekz5ZxiOXly
3qpvsd8r3hU/4SqGrM9Fa/EJVtFPxS71Q+of6TdPHOEd0PcS/4L1fv4EynlV
vB90EV1G38I3Od28i/QhusNdu/XYpX+P+Awb6OfibTmTcnrlf7Zu5Q+LI8nz
jJ7rC+ut/JcZ8ezXkvk71fao7VTbL6503+Xu+1petf034kMsoh9nxP+36H/3
wM93NYVmLtVjjN5Nl9NtyXcZfZP/AWm3hl4=
          "]], 
         Polygon3DBox[CompressedData["
1:eJw13Qm8fXP1PvB97vfeewYlhZJ5jqiQeUimzHPImAyZyzxkLDMhkSn6SQlJ
kZlKSpEpmkTJXIakzBH+z/uuz//1st299mefffbZ+zOs9TzPWt95dvjiJl8Y
67ru/H7Xjefv9dO67she1305243ZPzXbmtlfO9vXsv/BQbbs7539lYddd1P+
fiX2Mdl+kv0Ds22f/c9lOyD76+X8HbN/cPZXy/lfnsh+7FNi3zPZdeumfYfY
B8VeNe0bxN459pdirxH7ezn/qnbt53L+rGk/NTd8VG72k2nfJPauaT887WvH
3ij252Mf6r5jnxR7/5z/v1xnk1HXrR97p7QfkvbV0z5j7H7s7WIvF/u+/P1e
7Euz/S77X0z7Odk/I59fK5//QOwZY++etpVy/qX5u3fsfbN9P/s7+p3ZX8Uz
yP45+dz/tbaHc/975PPf8CxzfPVc7/QcXyf2er4j+7ul/Yzsn5r2VdN+4UTd
y9Vpeyqf321avQvvZBffnfPPzf6ZOW/tnL9X7LNinx77U7Evzzn7eRfZrsj+
NdkOy/4R2a7L/kU57/K2/49c/wv5/Nmxv57ja+bzV+X4IZ5nu4d90r5vnueb
aV8n7dvn2CfT9on2DGdO+7uzv1P2V8jzOSvnnR/7kth/yfUvyN+9Yn+xHdvf
e/H8sn/rZPUr/Wu2duy7af9h64vPpH2eXH/+2K+mrw6z/6Fse+V+9sz2nuwf
lu36Xj1jz/rOfO7C7F+U7e7sX5Xr3dn2/5Pr3Rj797H/GPu/sX+oD/eqj16Z
/fMm6rOe3SNpnynXHLV3u3x+3+yx54o9R9qOzPP4U47/oFf3/Ofsz5H2ubM/
Z9qPSvvcseeL/Uruf5D9q3P9e2L/Nue+lHPmyrF5Y7+c9n7258w2T+yXYk9m
/0c5//bYv8n5L+T862Pf1/rqa+3zzp8r+1/J9/08xy/oVR/0mbnb9edO+9Fp
ny/2ArFfy/Wny/6xE/WujfX7J2s8Lxt7eXNC9n+f7bJe9RnPbON8ZpfsH5b9
tfI8No29m/6lX8c+2TiL/ak25udpv3+eXPuYfP/5+b6L27N+LMfmbe933uwf
m/ZtjbPYK2Tbelr1Cf1lozYHzd/uf76cf/yo7AVjv57f8y59NdffUH/Lubfk
nD2n1Vhbp43hE6bVWDVmT8r+oRPVN4/J/u2e4bT67pXaMddxvfWz7ZX9BfMd
C2X/jXzf9NmfJdv7W9sn8vuPnVZjwxg5PvsL6LPZ/2/Of3f2P51t7/Td3TOf
rZvzj5yosepe7sr3Hz5Rc4vP/ib2QbH3bO/il7F/kM+P5/PPesfZP3Na3Zt7
PMtcnmM39mpMG9tHZbupV3OauU37Ddn/Zc7dPd9/RLPNIeaSL7fzf5X2PYdl
39yrOcfc86Vs1/Zqztqtjb/rsn9rzt9lWN/n+2+LvUfsw9v4/EXsXWN/JfZ+
YzWnmFv0KePx/l71Nf1a/763V3Pztjnnqzn3iDyvnfP5/QY1vo3zL8TealDz
m3luh9i9nPdS7P9ke2tajQHj56e9GhvmAfPBHe0a++fz38n+Pd71sMal8XlX
O3bgoPq/e9sn7Ye2339L7M+33+P5/No8F/uAQa0n7n3vYa1j1rMf9WrtPHVQ
v3Us93l82q+LPXN+3/Kxvxn74EGd+6B5fFjzoLnFHGOt3mZQ669r7ZT2v+Tv
g7EfaJ/5W7aftd/7iLk855+c6x+e6++f848eVLvzDoh9Yuxfxn7SWNB/Y/88
9mOxD4p9QuxfxH4i9pdibz0of8G97Bj7mNi3xH7Us2rr722xn7LuDGtO/FPs
P/RqrvzqoJ7tq9k/Nu1nxH7YfJO+/d2M5zNj/834j31x7LNiPxJ7xdiXxD47
9qPGZ+xLY58T+7HYn4h9WexzYz8ee+XY3x/VOmfuuqz1kVeyPe/3ZnvObxzU
s3Vv++Z+3szff8f+lzky+6cMqi/+L/vHmd8G1XeejX34sNY0693pvVrrNh+U
f8BP2M77tx7k+Y+yXZX9y7ONZX/V3N+Pcn9XtPG8euyrRrXuWH/0cWu586el
/ZnY33KtvMfpY09m+2D2v9+u97Tvz/5pg3rWg7SdkO/fclDruXX9c7G/Nqi+
Mn3aT4zdz99XrT/ZpmX/3dn+67dnG47XfOP7V8v9XTmq7+vFXsXa2e7/oNgH
Zrsw+7ubk/LZ0zJvrZb298eeoVe+y4r620T5muaqP+Yan59Wa4U1gw9x9rSa
683552b/5InyNe0/kPMfj996febSeXJ8hVz/0ly/y3d/0twYe8bc8//Mz9ne
k/3PDGp9t85vn+9/LJ+/Lh+ZO59fPuc/Gvva2HPFXo5/lvNPyvUOzWdPyvmX
td/7j1zj/OxfNKi5ZZ60n572m/kDaR9muzL7P7UeZ3+6bD8elA/Fn/teewf8
QmvzBa2PfHdQz/pDud4Zud6C+TtTPvu+bPNnf+FsHxirOcI5N/ERsj/I9iNz
0aDOXSZt5/GfY58Y+0uxvxH74kE9iw/HPjP2ovk7a9pnGatjx0+Ub8gX/X2e
4dI59uG0zZdtsez/TP/J/sHZrraW59h7+V5j9Qys49bz77RnfEl7H3+PfZ65
dVB9y2/5er5/i0H5p/r2Z9vz83vWyHdfO6rx4nl+KvZ1sZfL5z4Se5H2G3dJ
+6n5/NJp/3bad9XnYy8T+6JRPX/jbU2+0qju3/tYK/YNsd9nvPXKt1jW/eTv
Mp5PtnWnlX9pfV8w5580Kp+J77RB2j6m/8ZeIPamsZcals/F91o/9keH5fPx
/daLvaj1c1TH7H/E+pH9WdM+P1/R/MqHib1J7CWH5dPwbTaO/fHY34p9QbbP
GMvD2v942i+cVseOG5XftHj2lxjWPl9qo2l1jM/F99ow9mKx/y/2kp5d7K1i
HxZ7ttgLxJ5zWD4t33ad2IvEPiX2V7OtMqx47czsf2Sy/D/x1xl+22TFX/zB
02IvPFnxn3jr1NgLTVa8Jx48PPbssReMPZd4IfbHJst/5A9902+J/S1z6bDe
gXfx6dhLxz4/9hKx/y/2FsO6tw9NVuzpHs+LvVjs82NvFvsbsT86WfEi//TC
2EvpK7G3HtYaYi35V+yvDGuNsdY8H/vLsXcblq/ER+Ir2fg0u7Y2fVBf/I61
eVg+AV+IT8RX0Cf1ze/yZYblI/GF+ER8Jz4YX4nPxDc7blBrsLX34GH5FHuO
l8/E1+BT8c34aHwta6612pptLfaZx2Pf2qtrWbOt7dZ4a/khw1rLrenHD2rN
t1Zbs/kCh+R+D9ZHc3y2Ya2p1tYXcs7Rw1pTra3/jn3MsNZsa/czsY8w/4xq
3T7SWBjWvrX8n9Pq2Lf5F5lzxjLv3hb719kG2f9ljl03rDncXD5LfvPJbf66
M23vzzl3Dms++XXs6WPfMaz5847Y74v9mzb/3R171th3DcsH2Wu8MAG+yddy
/Q9PFh4Ab+Dj8t34cHzd09O+yGThEZ9K2xWjuif38lXfJ+bJ9dbL9X7HF429
T+xDY9/Jd3EPsZfMNHhw7uFbsVePvWza70j7xbH3jX147N8Pak4yN308x841
PrOtkf3l0v6bQV3joGwPD+var2b7edo3yvW/3q812do8e46dlrbX9L/sb5z2
M9L+qD4ee+nYX4r9uv4Xe5PYZ8Y+PdvXsr2c468Ma840dy6Rc84Z1pxsbv5Y
7LNi/9U7yf7H8/kD87m/eCaxl4h9QOwHzFHWkNh7x/6DMR17odh7xb7XmI89
X+xd+uXz8H3myLGvpe2hbDMY//n9+6X9z+bAtC2S8/fp15pgbVg8x85O24Oe
WfYXTfu+ab809n6xj8znH8zz+2KOfSHbH3P8T9nuMSekfd6c//l+/eZbYm/Y
1bN4w3iPvWnss2K/FHv6fN83c71TY5+U7cRs/8rxF9p2fc7/VFdtz8a+Ovaq
sY+N/Y/Y7zEf5fNfjv107B+nfZW0Hx377/pY7BViHxX7EXNQ7KViHxL7udjX
xF4t9nH98rn4XrPm2Clpez7bddlfI+0n9Mun5FvOlmOnDusejsn2zLDu7Z/e
adpWz/nH5/hjxnjsZWIfGvsJY1x/jX14v7bDsj0+rLYu178z7b/J9o53m7a7
s7+dOWFQ7ffG3qZhjJ7hN7L9d1jP9n/mr7RvlvZzcvzt2O/OZ8/L8zkv9lvG
Y9o3T/u5sd80P8b+dOyzYz8Z+3LjI/YRsZ8yZ8RePvaRsf8d+4bYa8Y+OfZ/
Yt8Ye63YX439YuybYq8d+5TYXx/VmDfW4YdbTSvsAwbymRYjiW3EOGInMSFf
h88jVlw+c82fcq33ZP/E/I4VYz8Y+31818nCHOCHM/cKi3g9v3PxtH8i2xvZ
Xyjn39r2D5qsuF/8L4aAJcAMYAcLNH8BZgO7mW9azc+zu7eurrHwtMJAYCH8
i9nNPbG36tWc5nfCLGAXC7b1HoYGS9t1vNbjNXI/Xc5fNO1n5DNvp22DHNoy
W8dXGhR+AkfZwLsTx3nW7RksCq9q5x6az4/Egfo6fMYaDn9r+8emfalB4S1w
l/VyvTf58mlfL9tbfNScf1vbPyTn/z3v7Ca/L8dX5hvk789iv5b2A9L+j7Tf
7Hnl+CfT/gw/NfbH2jlPpf1Gzy/tn0j707F3z/E3Yq8yKowR1jhv7ueDuZ8P
Wyu7ugfPZLWc91Z71qdP1ppr7f1+jq+Xz79XvND6zjLDWmOtxdZka+/eE4VH
6Qs/nSzcCH40S6+wpidzPzf4/py30qjWcJ+/PPYGo7qetfsHcK5R4VHwJT4p
3/ToFo9flvZ1R7WmW9t/GHvjUfkAfIErYm80KnwKfsYH5YvqTy/k+/+dbTZr
YNq37pWPx9ebJv5J2xz69bAwSljlXH5H7E/kun+NPbPYebIwT9jnPLFnSftq
sbfs1RpsLZ7BedayNmZmzHamuaFdY+2cv12vfES+4lqxt+2VT8e3g5nCTufO
uR/I9cdjvxh7ztgzGdOxt+mVz8p3/WTu75G0z5L203Ls/fl7XuwL2rGlB4Xf
GXvr801an9QHnu0XDgePw3nASvvGq7UVPu3z2e7N/n3Zls3+xvm+98AzxH3i
hNjD2EvF/mbsxfL3jpx7Z7Yl+PzZ7sr+PV2ds27On+xV27k5f6Hc36K9ii/4
5xum/V29+q4LxNMThT3C6a+OvVz+3t/VmHMPi+bzH+tVPCCe+XDsj/QqfhGf
LBL7o72Kd8QzMH58ybBdc+W0b94rn5vvvRnfC/5iXsyxLSeqL68e+5LYK+fv
A13Niavw2SdqLrR/cdpXzd+HuuozPrNWe99L+s3ZXzHH/tDVHOs71mzv/+PZ
Fh9UzCZ2W6RXMYv+8sW8LyTXx/XdieIW1kzbZfm+NfL34a76gGNrtP69uD42
qP6uvyyRbbHsfzLbFr16Rp7VJ9rv9w68C7wAfsA7wAVtN1HxpLjy8nzfmrGn
uXbsb0zW/b7d1RzrnFVyjc/06pl79qu28eEdeVfmEfOJa1ibPpLtV13Nsa45
hVH3imMxhy4xUX1nUvwyWddzfTGZ2Gw8x3fhm7VzFpuovjeNf55zevm7deyd
27HV2vqxmGcwqGfq2e42XvGYd+Rdic/Ew3AeeI8+gbuC6eCHjAFYz04Tha3D
+a/K9+06UVi8Z3dt7C9MFN/lszdbPycKH/LZ6yfreXkfYkqxpThePD/ZrqlP
6Bvic/G0e3bv4mHxr3fsXYuvxcvesXct/hZvbz9R679nfUW+Y8mJGsvG9tHG
V84/pVcxpFhy+8wJs6T9pzC6tF0/KGxlpTyf83O9t/mEXc3p5vb/8cW6wrBg
WV3O/2dXa5q17R0+X1drlLUKhgWre994YVv2p7DeXh17nQ+Uc2fK/eyX+3mD
T2nuFBOPCsOCZR02XvHQa3yotM+Y9n1HhRHCCmF94iexFDwQLiim6uX+nu9q
TbW2/s/95vfNoZ/n82Ni0rFaQ62lz/Wrf+qn8wxrzjR3WkfnHhaGCkuFzd8+
rD6sb+vjPvMmnznnvz/3d+Co7m0KOzbG+Jz5vn+NFV4Hv9sy58/o+cGcWuwH
//OsxIDWbGPt7XYPb/s9OXfOhvfBeGHRb0wr7BcGCpufHK9n8M9+zc/m6Xlz
v5+N/YHYP2nvG4bqnXhP4tPZBsUPWiOtlfBrePUTbf1fO5/nYl2dz/8tbf1h
+YR8uGf6NccZO8aQuW/N/hSc1l2V/z08KLwcPi7mF/t/fVD4OR+Vr/pSv+Y3
89zCsV+OfZrYQ0wm9hkUns4fgRWYA82POFifga/D02EGsAPztPmaD2suXz/X
EwZcm2s+yt8XA40VngqPtU4Zi8bkYu3ZTnEpvXrGYnn4MpxZTK/fecfvatjz
q2IQvkDe/z653qTfMFb+3CoN74fvwyxgF//p1/ri3j40rDXE+sOnsra82K/1
xf5CaV83tmF3Ta75yKD4ggPGCiOAFeBMcCc4o6ez/4uJ4gP0jX6/+u4UN5WN
gOI7Ofa57P7Z2Mz9veJ9jJVP84u0fTfbDtl/KO0zwPL6FRuJkcZifyv2tvyF
2OOx35Ntuvz2d03W+WKorbqKubr2eec/BocdVUwjthFTia3EUGInMdTbzRZb
uaZr/yf3d/9YrQEX9ysGWrudL/b6Qew9zT1w55x/eew9zF3eF7w99m7mLvMR
PoD/HPuJ2DOPKga8d6zWELEhDAIW8du099J+31itLdqdB5MQ64p5YRVibLG2
mND9i6nF1mJy8eMVsfcyV8aeJdf7/VitZX6P3wUrgU3AKGAmYkCxoBhSLOke
3Mt97flvkfb3mm/FBuK7sYp1xDx3uY+c8+B4vT/vF2dnfjBPwJ9gUfhGvCNM
aqzNlzBOWKf53XwO84X9vtPWgw/CmEZ1rSnus1dzjvXh6bR/AGaa9m1jz2z+
Nb8Oaj62XsBsYbfiEPEIn53v/lZbX2aZLBzPPKvP6qvu8ZXc7+Z+Y/ZXNja8
T/Fftp36hdF8KKefN17YDYwIVnS/3zyqeB428ntz5KiOaftd67/TZXtgvMbD
u7J/Uc7fnv/WbP19u9Z/3jeqGF9/9Yw96/9r7a7XH9V3+K4/mCey/+20f7Yr
ezQqTAA28Edr2KgwBdiCe3Avjmn7UzsfpgKbg9HBWnCAuMCneoVhwibxg3hC
GKWYgK9oThUr4DzwP945LuT3E8WH2J+nXzwHvsMaist5I+/r2bTPlvOWyvf/
N/bTsWeNvaR7myi+x7nz5fM7Zpst3/WzHHsu594V+2uwX89rWJwfbtKchAu8
1VrYTYXb3Y+z/9uJ4ge1zdEvDgdX4x5xOz/sV7wibnnXsPwF6y0O7NHWH67o
as41966dz3wUF5Rt3ew/Zx7Gp8Cocu4fc49HxH4nx7cxVnLsB/n8Szk2IXbS
/7M/e9qXTvsfYm8U+8XYW8deL9dZnK8OZ9Bv8vnL8/kXY4/Dt+im2ncvk7YX
6JTaucv5/myX5fx/51gv5z8Q+/ux/xN72rA4I/yYZ4xL8vxwp/2xwphfa/7T
1d5xv3AJsZKYCXZxq/jaWm3c5H5/AVOP/VbsLWL/BMblWWW8LTqqOd/cL659
z7A4NvwbnwT3JsYVCz3Qznlgovg9PN8C/cJEYZMwSljpr/sVD4uLZxgWxiIW
EhPBXh6cKD7PtT+Uc38unucr5PhmuZ9bYi8Q+6+xPz0qP5Y/e2/rAzg93N4X
xwt/xVniLuGx8GScJm4TnghvfKWtz1dl+0v2H50ovlDfWqRf6zf/8sfZ/tov
zhv3DZ+GR4rpxXoPtd8Eg507+2eMFzaL08Rtwjfh7df1Cz/yLt4d+zf9iteN
xffG/mm/8CfPYvrYm8Z+N/8613gi1/qtNbirPqgv3hP7oq7GoLG4YezpYl8X
+7FBcey4dnwHPginjlvHD+GDcNy47i+MF/9Bg0OLgw/Bj4ixxTpinuWaP2s+
xznjnuFYsCQ+8Zutj+vr8zU8a4+cs0DazjGnpu1zsT/YVXzxLCyw+ffXZHuk
X5w0bhpfhW/BueJe8S34GGPQWJy/4WE0F3wyfi/+BcYgthfjwx7Mh7QNL0+r
ORCuILYV48I2jClja96Gn32lX3id3wIreb5f+IVrzRd7MzFM7BvS/mTu7d/9
6rt82wWHNWaNXXz+irneC/0ae57dAmn7V7/6qu+ef1j3NqXd6dU9bpHntMZY
zQnWtLvyHSvxzXO9z+R6+/cLb+Vj87Xv4JOYG3Auo8IE4Yc/6gor5BPxJcTJ
08Grxot7/kib836X9u91FUOIJTbJsVXHao7a3HqQ9ku6ilHEKvfG/k5Xa4C1
4PVsR4/XnG5uvy/bxV3FVGKrl3Lfm7ZrreRZZbu0Kx+bry2uFF8a8yuPl4/F
lxK3j4YVs4vn72jHTuuXLwPHHQ5robi9qxjNsd2sWdk/m0+U9j1jLxj7XL8l
9t0wD30v97XlqHDqW7uKVzzTv0/U3O1eFu8XpgB/uKs9wycnau1YMe0f65fO
iZbhA+3YPbn+YZ5lztsq1398op71FO+f83ftF1eEM/rtsDiHe8bLf+YP48Bw
YY5pu8Rnmn/Mv8Cx4epwdrg3nN26sTceLy6PnoB+gIaRllF8T19AY0xr7D14
HxuM1bu+L8eO42dm/5J8fofYJ/dKw0zLTB9K/wmDhEXulO2rvdIo0yrv3PAD
GkpaSn2WP/bpserLvx1Uf7b/vXa/7t878C4+m+2EXmmoaakfyHZs2g7M+ZcN
izPEHVqzrF33t99rTBgbOEhcpDXCWvE5MWyvOHfcOw4Tl2mNs9bhsHHZND20
PZ4n7tI78+5wbLg2PgBf4M/worFa4//Qrn9SrzTYtNjb5z63T9s22bYdr887
f5vx4u62b/dDQ05Lfnu2ZcZqDbOW/XSisA+6t7dyzz/L+z7G/GP9y/3/PPbx
+n7OW2RU/Zk/e2mLL/Zo/fuS5v/dGvsEw0K/y/nP5zt+NVZzhrnD+n5U9l+z
Pqf95thHxn419vyxr4l9oPEee87Yu7f5m3+Jr7029kHGb+y52v35vunyfR8z
3w0qzjBGjdUDW/yCI8QV3jZW3MU81gzr+FhxLda8h7L/L+90rOZgc7Hf8w2+
F2yZPzZW3Is19IGx4khxpThH3CPOdrHYF40Xl4tjxbXi1HBrOFhcLA4Tl3lL
7OPS/k7aFx6Vv2J8frd9HueL+8XR4ep2bfOLeAx3jI9duCuOEZ8o3lioKw4S
F4mvXLUrTvaVNr70H5oP2o+d23iiYaFlMSeYu3yH79om20xdxUv/MD/z6Zo/
8Hjsz8R+X1d4kXjv07Gnb+sTf2Hz2DN0FQ9ar1YyXrN/ZL7j0/muZQelVaNz
3jD2Bv2paWjKf4CHzDJRXMJTsffJPd41XvGkuHLb2DNNFLfxOJ+LTqg/FSJO
4SnwiHXMoV3hE/Ahujf6N5pP2ji6Ofo5Gkza3xUGpf+1v0nu5zvj1V/0my3w
kYPS0/nspuK58YoXxA2bTZbumP6YJgunJwYUC35+vOKPq8aLq7zd+jpZMUaD
1KYwqZ+NF1d3Z/a3Tvta/corgW/Bq3aIPWtX8Qz/ZbvY7+8KPxPP7tjmT5om
2iY+Dd8GPrfsqHxyvvkcLX4QB1hrrblik9sGFZ/Y//aw5i/zHw0FbcavBhVf
iDMuGpZebJ+x0mDTYv+mzYc0GrQXv459fOyDY39nWOua9c01rL3bt/mXxojW
6AZ22g5J2wXDikv4Imu077yjzV+rjpcWhA8hflphrHyLv6b9y9k/KttD2b95
orBOutk3YTYTxY09kva98DmDygWRp7PRsHR79Hs00HJL+OR889lafMkH54vP
3uJPmny5Dge2PvzseOEncJQdc/3lB6WVd62NYbXjNX+YR3ZJ+6Pjhd/AcT4X
ezhR85F5aY/YL40XF/an2DtPVl6B/IJD2j3f0ubnUT730dzPj2Pvz//J52Yf
lcZhta40LrQutAPwB5oVGgLx//Zd4VEzt/gfHgEfgu+43gGxX4k976jwuR26
wovgWfAMeBSNzOvNX4BnPSc2TPvVbT43v8/X8Av4HjwM/gXPOze/bTRZ+NOL
eV5/GKuYWmx9RvNH3D8tzmX9wsf8vtlGpbFYuq1H5jv4GXzt+fb7+TMbtvnv
1YZ3ncN3m6z140ex9+Grtvul4Vi9/R7fRwOyRnterzc8Db5H8/BSw/f2auuR
9eqlQa0L1gexFrxvz7aezTEqbdD64o/x0ghd1d7Xy7HnGZU2ZJk2f9OImAfM
B9Yj65J5znwnhn10rPDGtbrSZNBi0MCsHPvKtt4d394/zQutysuDWuesd2I9
eB48kOaG1uPy1kf1zRvb7/c8aFxoY05sz4NGhmaHxmb5tr5Z/74/rDna3HxD
9m9M+xF84xxbML/ve7E/b/yNF956Yb/wJ3jnTA2/gjfBX+GnNCnLtvXN+ndN
W/9fa/4Cf+Ds/J7BZPkTNCvLtfXSeksjtEJbn6235l3zL3+EX7KQxWai/Bvr
L23PKs1foPG5qfknznEuTAI20Z8s/+bm5s+MidsbfrxmV5oZWhnHtE1r/tNx
bT2maaJFgq/B2+Cp8GbPyLN6p/lfm7Z4T/wgfpWTIJ/hquazbdSv+Fx8e/+w
4qPvdrUGWgvvafGSNdBaeFu2U9t8wV/6bYuXPAZr7939iuetOdaeX2U7M89p
nIZtVP4Mf4QmjZbsC83foEmjCftl7K/6/jYfie8u6con4Bvs3fyV88dL23Z/
v+I/PgXf4tDW/69r/e3w9v71zxdaf1iuPd9/t/63QhuP+v+RrT/e2J6/908r
RnNmvF7d5rPn23g0r5pfzTfmndcnyp/mV6/Wr/d/RJv/zF/8ySWaf8b/ut49
x34x9twND12qjbfnWv8/vI1v8+eX2nx1bRuP9IhLtv5AT/ZaXtwTY4XJwGbg
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
9NZkazP8cYobnay+ipOC2VtDraV8Lr6XMWgs8nn4PsawseyeaGf5Y+5Vzqhc
XDGf2G+s2du2+EDNCrVitmz9W80HtSw+08bDJ9vYUYtErUI1ZdQ62qrNz64n
V0QMKBYUv4p/4UXwIfGw+BWeAz9yDM4hxnUuvEK8nUNTeIp4WzwOD4GXiMfF
3/mZU3iOnF65vs+19VrNGbVqtm3r2xptLVKLSe0pc5i5DGeKOzWHmctwprhT
NXfUrtmmrYee1+9afMHfVwNHbZzt2vrommr1WD9914ptfOMT6Q+MaWMbp4hb
9MzU0jC/eJY4R+f6jLnh5FHVetm8zV/mYHMxzhv3bY411+LscfdynOUm/7P5
A3KU5UI/3/wbHDCOBgYIC6S/wfHj9ulP6Gvkdcorwp/S48BUYCn0NjhCXKEa
n2qF0q/gUHGn+F/8K44ON4fPpD/B4eHu8Mfqp96Y7ce5ztXZLh9VvUFFFtQu
xSniFtUgVZsUp4JbUQNWLVicDm5HzV21cB1Tg1aNQOeqt4FzwbXQO+AUcYtq
kKpNCrdX8+L2rjgn/ATORMwidsE34Nz48Hx5nKfaiGok4kLh9483fxvfgI/G
sYgRxAo4SFykmq1qn/LB+eJ8dr67GEmsRGuPT8Sv40Rxofhd/AzOUMwidsGv
40Rxofhj+e84LNwVfl39C5wTrgmfDv+E78EfaVVwXrgvNYTVMsYZ4Y7UDFY7
mEaBVkHdUrVMrVnWLhoLfIj6peqZ0j/QO+DccG/0D/QRNCI4Oj473/2IUdUv
navx8eqHbjhZ/2YAPYYaV2plTdXMGpRGAUfIh+fLq6Gl3uhUDdhBaTqsYdYu
scNUzfnJVjNrUPesXutUTfpBcWa4MzWd1U6GgcPC6S3oVWg86C7UhMU/qr+C
08Pl0Rvg63HkuHF8HH4eJ44Lx7/hC/WHOfvFPerD6jOqoatvuyZuk77Ed+Hz
cbK4WHwiPh9HjhvHJ+I4cZ30JvQo9Bmu7Tv0PRw0LvqkFi/rM7ho8aO+hIPG
RZ/c4nV4IPwQXg8fh2/C1+Hv8HT4vdySORoeiW/B18hhlWuLX8G/yLmVi4vP
UTf0m4PKdcXp4Qpxhrg+NVhxiLjDDdpG+0QDpU3+sfzludp8Ib/4h20O8Lzk
P8t3nqeNF/nO8o/nbONfPrT85bnb+PVZueNzjNU1zDHmGu/Iu6K5oI2gUaBV
oMHCneHQaLNwaLReNF+4NTX39xxUTdkj2r5/y0J9WMfU8FebX/1Z9WFpTvBk
xryxTzPo3zpRI3av9qzwW3KAPTP/JobcPTl86s36NwD82wDqzaofS3NGe0iD
SIsmx09tfzXu5f7hRHGpOFVcqX8DwL8loP6seqlq+Pu3AdRPVZ+WRgaPhuej
naERoTWh8aD1MEebq80p5hY+H99PH9VX8eX4c+/Mu8NH48+9A+9C/rV86/E2
f+Cj8dXeoXcpH1v+9rQ2/vDjarf+sL17/Dy+3Dv2rvE55zU8SjzlXHUBvGOf
+VLzr2jEaMVgEPJmf9WVf8YPU2sDB4YLs2ZZu6xB1iJ9WF8ea/MfPhF/6B7d
Kw0OLRMNCi0KjZCcej4x35jGSa0BGhNaE3OwudgcYa6wpk3lzPZrLjeGjKVe
W5/UEFFLBAeHi7u7je/7JkprhR/Fb3qmnq01wFpgjjBXyCdXG+OdXq2PxuA3
25p3WdvX16yfjsGArE3WKFiVGkNqGavrr/aQmj1qC6kxpJYPzh4vZI231tPo
qiWhRi7trhzSDXPtLccqt1TOqVxYObFyUeWcyjWVQyqXVI6sXFc5r3JnaXZp
f2mAaXnltMqNlSMmVwxGACuAd8JDaYDlYK/UfBPH4JwwB+fCmGBNP2h4KswB
9nB5w0s5gri1yxoeKud2xdjrjFUuLo0WrSzNLO2WORHXiPcxV+Jf8D/4SXwn
fhL/iA/FX+Ib8Z/4HHwpfhL/iD/Fl/KR+Ep8KL4U/fi2ad9xrHLNaJ6RR2rk
0kLT7NIK0wzT8tIwyynA29FW0BDLzVbjmLaYj8ZX43PxvWh61QThY/G11IxS
60rNK7WkYHSwuisafgyTg82pOQP/5jPwHfDmtHnWQGshXp0Wjw/Fl6ILoCWV
Azx/Prv0WOUGq3nl37L4a69qYclpliss507uHR+Fr0InQBtIT/By9q+ZKP2L
mk9qSakppRaUmlpqaamppdYWvYC6MMaAsaAvq72lBpc+raaXWlpqaqn1BeOH
9V/a8HQ52HKt5RjKNYTJw+bxt/ja/UdVtw1OB/uzr5YbzM4xNdzUcoM5wh7V
xFIbC4YHy1MjTa00MbfYG4eCS8EH45PVeFPrDaYH28OB4DVwKPgSnApu5eKu
+GScCe7kksa/0IDvOqq8Edpwn8G1fK+ra9F47zCqPDHabxg0LBpmDDumHaRd
ovej+6MRoxU7peHP9GQ073QYalPQJ032y9+lh9q8rR+eoWe56ajqjT/c3rfx
RPtojBlr6zT83JpkbVqr4TvWPGsfzcsFbX7iS8N4YD3WXWvxmg0fsuZae9du
+KU1b++2HtIK+TdU1Frdso1nc87dbb6RK2DOMnfRV9HI8pH5yvRUNK9iBLEC
Dex9zZ/je9F70VDzCU9o48/4NOeZ++jD5ATwwfniYgLPyjM7rs2f5jtzorlx
i7a+mPPMfZs1/8QYMVb4K7SixpSxtV5b79WQVdt2/eZvqXGrLj0NrbFjDNHW
7tv661MNH96/9Vf4N3wfxg5rpwmgDdin9ccnG95MA0ILgmPDte3d+vcTDR+H
qcPWcca4Yxg6LB1njbuGccO6YaywVuszroBmgHYAhg/Lp6mgrcCh4dJwDrgH
+lX4Pn5SfiE9uzbnqK2xcfPX1Mw9sc2fU7kjYzW3btL8JzV21ZffsPmfavaq
1csf9Qw9O7V8N2r+oBq+avHqe/BEPp8+iOPB9eBkcDP+jaWvp+2aXv3bSzgM
XAaOFleLU3XvfgOuAoeBy8A5X9fGJz5b/bidRqWBo6sSc4o9YQ9qEavxB4Pg
49DPwzCmfJ9h+TZ8HL4EPT1fiE8Ee8KHwW/FQGIh+nt6fhgALAC+Cx8UM4md
8H3+7SuY21Q932HhpTAOWAf8FP4LM4GdwIPxgzAOWAe8EX4phhPLwdvh9zAP
2Ae+Dh8nZhQ7yjdQ2xqGBkszZ07VLp6svgh7U0Pt1q4wONibmpG3dYXBTfWd
aa0+8ETlK8hfgGnANvRtNY3kuOrj5tip2sOTNTbMyXwvPpi52hxurjZnm9vN
+eZ2Y8bY0dfViJKjpc/Tfak5rCapPBmYpmP2YZ2wUjVg1VSFmcIu1elV0weG
CYtUF1VNRpgk/BceLMYV68KC1F5V4wcmBC9W21XMLHaWd6P2qppG8kLwIfB7
GBwsDkbkHG2wI9iV2q1qWMKwYEXqWqvJCDOCFfk33dSchBmJ9dXBJToS88sD
UntVTVA6RxijY/Zhj7BWOe9qaMNcYYtqIvj3z2CMsGI11NVAhhnjH/ARMEHY
IOxWTroaszBcOjo58WrMyjOCLauJoCYtjBnejv+BkcHKaFbp+mAksBJ8Bn4D
RgmrhDG7pmvBnvlhagKoISAusJ7i+9Ur2X1UHCeuE6eP28dv4jNxgrhBNSDV
gpRzTs+iBuFDTd9C/0JfI9dVTSP6LnovtY3keMn1wk/gL8R0Yjv6AHoLnB/u
T86ue3FPtAj0FvQDOL+HW7vc3uO6yv2i11C7DoeJyzyg+R//aHzngS3eeLrx
vQe1+OiZxofTKzze9C70LXw8vh7tJH0t/cwTTc9C72JONr/RkMgFX7jdD00c
bRyfke/onXg3fES+ojnOXEfjSev5t+bPzdCeH00PbY9/w4sGVUwttqZPeazp
b+Qm0pnQn+BYca30LfRM9HRy6/DP+EccKC4UZg47Nx9bW9yvXO3ju9KHwGDh
qzB2WDt9CL0KjhxXjsPAX8DXcQeLtM8D1GhD6F3ck3vBpcvplqtNw0LLskiz
T+hKn6Jd7reaMPQu9DH0MjhqXLWajH9ueir6KZwIbgT+CzuGMYrncCa4E/oZ
tWXkWNNz4VtxsThp3DQ+Fv+Ks8Zd08vQ29B/0QPRFOPi8DO4G5+lR6TBcA38
PX4fx4xrxpngG3AUuAocBa7CGm2tpmekr6G5oL2gx6HPoT/6Zft9aj/SbNFu
Td9+L80W7RaNMK0w/118SjNF10RzRXtFX/V800fRa+EDaWOtydZm5/yz6bl8
Fj+ID4S5wF7ouZ5reim5oPRb/2p6qqubz8Z341Pxrei1Xmh6Knorere/N70W
/RZ9m9oTakLQb43a79u+K/0an4sOQBxhPeFT861hMrAZOSZyTdRAwb/LQZGL
go+nD6Hhp+WnF6H/oEmhTaFZoV0RM7lX98xXh/HAemhQaFH2bvEVH5uvTXNN
e63GrviKhpqW+vEW/9NY01o/2uInmpYLmn8pVqMvUytBjUX6LPq2l5teSjxC
v0afRi9FH+sdissubu/W81ErlOaP9o+ejV7tqK70VfR/TzY9Hf0czR7dltqj
6o2KGcWONC20LYN2PXrBC9t5+Bgaxon2Gcfs0y7SJz7V9Hf0euY0Wj46MXOd
3yC2oqvz2+gD6fHofenB6PXU/lAzgr6O5pz2/LEWX/8/d7BjbA==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtlEtIlFEUx6/X+fzGWdiiXdFDiqBaNBDkwihUIigq0oaw1HzkaPmYrKQo
CEqhRQWpUQnjIoUKWihlmJX2sDCsTCks01CMYKSmh2UJEfY7nFn8mXt/3/+c
+zjnTnJhKLPSGmMykIOWu8b4PcYsAS5FI8BOnzGr4enwFFivV7WG8Qo0HvOM
wGqZV+PbgP8+LACriDOmKd6Y4QRjGmG30E3UkWjMALHtjA/xbZLYVvbQhuY5
umYGuVLha1EENki+TYzT0Gfmd30aL/teJesmaH5ZW/ZwGHYS76hXvamw7bDN
VnPdg6XBcmC7YO9g7WiO1XuQvJK/As1lvUb29pFvf7x6HjlXHeerR+f4vgdf
M3F+fE/xRfG1wKJ4H+C9je8YLA/WgG8xvsf4vsRYAN8j5lKTjaxdDx8lJkLs
LN+yfLrGTsZPrMYH8R3E14TvYbyu1RI7v9SiBt8pFAcvgO/mt4/5emJr8OTD
2jw6fwb/Sq5+lM4406N3JnfXCVsAS0KvHK1hOUpi3EDsOPw3niBskrgq2BvY
FKwENgU7DnsL+wmbJu8E8260jBwHfLq/LnxbYM/xfcNXBvPy/SzsA2watheW
xznu0EOFjIvQfvSX2Fp87/H9wlcMG4MFYYOwH7HYPqk3rB/23at3JnfXxR12
o+uO9kUuvhw8uVJzR+9C7mQr822Sz9GzFRM/ZPXMrXh6yLnSav9KH8v7WAcL
kDsF5RF3BnYZXZL3wDmOOvo+pD/a8YTRRUdr+YIcV8i9CF0gZ0jWhCUbfTfy
foTNJ3Yhcf/kTRN7Qu4JdhpWjo44ut412CzzqPQM7IZP15aeDnMP/gTdWyj2
NiOs0Wx0H/IWQrAJq3XvhVXCqmCfrL6RPlfrkgt7abWe512tRwFswOr9h13t
lyLYa6t1ugorhZXAhq32TIer9S2FdSbq931oiHPssFonqZe8Z3nD2bAs6TNH
mfR4NrG9Vt9mtav/CUXM89GMo/8Z0s8V+Mas9luPq/1XBhu12lvdsfNaWB2s
hrVnyPUfqI7ALg==
          "]], 
         Polygon3DBox[{{2429, 1002, 1003, 1001, 1594, 2643}, {2209, 494, 1049,
           1048, 1600, 2731}, {2100, 312, 886, 885, 1575, 2699}, {2025, 191, 
          796, 795, 1554, 2672}, {2064, 254, 843, 842, 1565, 2686}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{612, 607, 606}, {174, 30, 28}, {1774, 967, 1593}, {
          1754, 933, 1592}, {742, 158, 1156}, {400, 363, 362}, {1862, 1123, 
          1613}, {444, 411, 410}, {297, 252, 251}, {998, 483, 999}, {517, 492,
           491}, {546, 525, 524}, {603, 594, 593}, {1652, 757, 1553}, {613, 
          686, 688}, {589, 576, 575}, {570, 553, 552}, {1844, 1094, 1610}, {
          1858, 1118, 1612}, {351, 310, 309}, {1852, 1108, 1611}, {238, 189, 
          188}, {1834, 1076, 1609}, {704, 669, 703}}], 
         Polygon3DBox[CompressedData["
1:eJxFmXtwldUVxS/J/e5Fgo8UlCJULdNWKBhEAZGH8rCRR7EogoHSoY0gRTGU
QhUyYhFQMaXyGCxUKBBFHhFKJlVGEBAbjERRagYoA5jCYIFpGQq0MqFS6Pqx
14x/nLlnfft7nrP32mvv++3iiQ+V5KRSqdpGqVRavz2SVGqffnvlplKrMqnU
rcLbhE9r9NW8ncYOzdvKvlD2Yo063aBEx07oBu1lr9a8veyLZCsQrhEuEF4s
3EV4j/BdwsuFuwnXCXcXLhfuJFwr3En4VeGWwsuEWwjPF75X+JBwP+G1wv31
e0T4qMYLev6dsu/WvLOOL5N9gHCOvm2E8EbhPsL1shcKVwjfJ3xRuJ3O+Ynm
P9RINB8le5XsDwg3Fh4t/JbwcOF84Z8LbxUeIpwnXCy8SXio8DXCY4U3C9+S
TaXa6L3O6dgHst2gsVjPay77y7L3Ej4g3Ft4tfB7WsvWwjdp7NB8oa4dp98N
GmM0r0xirz7W+Wd0/kiNWtkG6vx3Za/i+2X/VPZzsn1fz++i49fpnDrZNrH+
sn8m+3nZ28peIPsa2T+R7ZvC+Zyv0ULzEzqvhnfXOM43876aH9T8oq7fgr8I
/1X4v8LvsJ/Ce4UbhM/q95/CpzT+rfnbfr8Gza/S/Q8It9Sz2+t538vG/bg+
LdwsG8/j/k38PnP1e0n4fxrXa77d78P7tpL9OxptNW/QsVrZbtK8qe5/tcbN
mu9nD3LiHM59x+txSe9zbTb2aKfGzdnYO9aMtWMPwXuFmwl/V7hNNt6Zd/+K
PZGtUOOy9mK47rde3/8N4QXC+cJzhcdo7NP1U3XsjK4r0PU90vFOvNtPZd+j
+aOyH07HHrPX5br/72X/h/C7wrOEy4RPC+8iloQXC59kD4RnCM8Rnq0xS+OY
jn+h0Vz3PCjbIY3fpOMZhzRGZ+LZxzXe1vXTZX8hiWuqhEsbxb3wGXxnjfAK
4VPC2+EKvfNcYkt4vfAU2Z9lL4UXCg8Snii8V/gV4QeEJwnvF14i/KDwZHxD
eK7wD4THCx8R3ij8tPAM4b8IzxPuL/wkey+8VPh1Pf9XwoeF1wlPkv0Z4YPC
q4VLhEuTiAliY5Xw0iTuMQEfyMS99/j5PG9W8vWxWV7LrVqrXtqbC+xhJtbu
EeHdObGG+ONqzT/XPS4J/1H222Sv1rGiTHAke8sew534EL70pZ73YRI+AZfC
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
hNwOhx9w/wVu3+V6drfrXeqjp11PUF+Q82e4nkALUPOXWl/TC6h3fQsHwo3k
oDLX1+QmYp6+3wRzARwEF8AJcBOaAG2AJkYb49O9nG/wTeKTGpDaj/2F0+F2
YpLYJOa6O58SO8QHPcfNfvZs59uZ5kPeDx4mx87x+8PT5BH2f4bz90Tz+Uzn
32nmyznOh3wj99ri7yEmeTY5g9wBJwzx98K9xAixQgwRS3AMXEMMFJrfiU1i
qp/zdS9rALQAvWDWJkmiB0JeedyDtaangQ2NPyU3Yo7YI+eR+4jZIufry85P
7D01PbUnNeg2xxCxBCey9nAIXELMErvEeG/rBXxpivVAgfm8zHpigfkZPXaV
NVdTD/QaGg3bY86Pz6WiV3Od9SKaDG1GDBKL5HRy+yjnV3pM9GrS1msN1tvU
J9QjG1xvo9HQatTg1Pop1zO11q9oNrQbNRe1PzFMLMN5Y62f4Mpl1itXevi5
EcPEMjmGXEPMt7SeQm8ttv4qsd6hJ0UviZzS2foQ7odT4BZ6OPSuyDF3We/d
aY2GruG/AvINnAw3V1tf4bNwFzGIL6NR0Cr0IE/5mk7WT9wLToKbVuRE74j6
mV4hPoPvwIlwIz0vemWsIWtJT4ReBhodrZ7onE+T0MhoZWp0anX8h1ilL1Pq
uIWH4WOO7bJ/wdnP2F/xL3IW78J/EuRmcnSxv5v1Jsfx3wU5mzx4pUeURI+E
eqm960HWfLH7f6x9K9cT+e6t7LY/wfEzfD29/ha2bzK/4G9oQWoOag96AvQG
Nju+0YhwGj0yeu/04OmdEd+jHD/4z1uO93vtv9vNB2gytOlH9jdyCLmH/eKb
+Va0BjUNtQ09BXoLaBTWqDj5Oj6JbzTuZPsX+52YX+gZ0b+gx0UvaZH9hxxf
6HjuZf6Cn+AYuGaoubTc/AqfcYyeyA2ud6mXV5sPmptf+A+Cnjq99Lmumbu5
37HX3zTA+1zpMcrvO9D7O8L7zfvd7v5SS/dj0BBoCTReH/NnP/PbSNsLzVfw
HxoUbXq/+x3LHH+NnT/QvB3dD0ELE1/UVdRXaCFqfHoV9CzmuadCb2Wt+znL
Ha955nu+kd5PF387PSt6V200/pbENS3db+BecPwh//8Fd9ATofdKD5ZeCT2i
Zu4/0F/4P9p/tMI=
          "]], Polygon3DBox[CompressedData["
1:eJwt0D0vQ2EYxvGnpcwGa8XUMleiIiGNVLx00KhFtIm3kUUkLHwJkTAZGPkC
FQxeJgmjRexCvCYmfnKe4X/Oc13nvq6T++meX62upEMInchg12M/FUIT1y0h
vLSFMIm6ocY/rSGU2kPo4DXNn+Kbv0bPydZkZvDLH6HXsUVvo6izQT+hR2YA
ZX0FfQfeWZljfMW+e3N3eETB915zt85Z5y686rugS8jpz+NcPkf3y++lkl2O
+A90Bcu6T7AkX9Y3wZuiq6jxBnlF3qXcFW7iHXxmkplZ1OMdPPOG6QqmY/Yn
k9zTIhbiP8blh9LJ7Gjcd4yXTyf30Bd3O5N9878PvCPwNnkb2MFh3OMPW2c1
Gg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0UdSQlEUBNAHAuawAQduyLwCBypBQARERETMOWfLhZrPq3LQdbqB/++A
iYXSbDERQqjKYiqE5WQIWVnSP9Ih5PS8TGZ857OCviJTdtYu6iWZtnN2WV+V
GTtvf3pHxV6Tgv1lV+M79Bpn/a6o1/V1mbNLdkPfkHm7bH97rmlvxvfbP3ZL
35KK/Wu39e14yw6e6+g7UrUTdlfflZq9xzr3410esMHDeJdHbPKYLW7KSbzH
U7Z5Fu/xnB1exHu8ZJdX8R6vmXT/hj28ZYp3TPOevczIg97HR/bziQN85hAH
5UUf5itH+MZRvnOM4///5R+txTYa
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0b0rhHEAB/CflzPdYkBJigUDE4WUGJTjCpHhQnkbDCyXbDLaLAwueT3v
nT/A5SbZ/APIoBiUGJSy+Dxl+Pb5foe73/P8nrrppZHFohBCWgrFIezIXmkI
zXaOXbxmgncc5wMfZUZ/4yI/ucIfrrE0FkJM1vU4N1jOLVYwwyruOu8tOlOq
S0LYZz8PmOYhMzziDbN84jErnVUlJ3oLT9nDMw7xnClecJqXnOMV5yVZ5h3s
WX1SBu1JO6UPy4A9aif1bknYfXan3hg9p91qP3uPejsutfZ99O76u4v98qwF
+0V/1W/Z4Xd3el7flnY7a29G92QvyKq9bE/pbTJmT9hN+q+7a7B77Q89H92t
//h2Zk6v+f+Wf5HXOvg=
       "]], 
      Line3DBox[{742, 159, 793, 224, 840, 284, 883, 339, 922, 389, 957, 434, 
       988, 474, 1044, 1045, 509, 1069, 539, 1088, 564, 1103, 584, 1114, 599, 
       1121, 609, 1124, 685, 615, 1170, 610, 1169, 600, 1168, 585, 1167, 565, 
       1166, 540, 1165, 510, 1164, 1163, 475, 1162, 435, 1161, 390, 1160, 340,
        1159, 285, 1158, 225, 1157, 160, 1156, 158, 742}], 
      Line3DBox[{613, 688, 686, 613}]}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{703, 704, 1622, 707, 1624, 710, 1626, 713, 1628, 716, 1631, 
       1632, 719, 1634, 722, 1636, 725, 1638, 728, 1641, 1642, 731, 1644, 734,
        1646, 737, 1648, 740, 1650, 743}], Line3DBox[{742, 1156}], 
      Line3DBox[{757, 1652, 758, 1654, 761, 1656, 764, 1658, 767, 1661, 1662, 
       770, 1664, 773, 1666, 776, 1668, 779, 1671, 1672, 782, 1674, 785, 1676,
        788, 1678, 791, 1680, 794}], Line3DBox[{793, 1157}], 
      Line3DBox[{840, 1158}], 
      Line3DBox[{841, 1706, 838, 1704, 835, 1702, 832, 1700, 829, 1698, 1697, 
       826, 1694, 823, 1692, 820, 1690, 817, 1688, 1687, 814, 1684, 811, 1682,
        808, 807}], Line3DBox[{883, 1159}], 
      Line3DBox[{884, 1730, 881, 1728, 878, 1726, 875, 1724, 872, 1722, 1721, 
       869, 1718, 866, 1716, 863, 1714, 860, 1712, 1711, 857, 1708, 854, 
       853}], Line3DBox[{922, 1160}], 
      Line3DBox[{923, 1752, 920, 1750, 917, 1748, 914, 1746, 911, 1744, 1743, 
       908, 1740, 905, 1738, 902, 1736, 899, 1734, 1733, 896, 895}], 
      Line3DBox[{957, 1161}], 
      Line3DBox[{958, 1772, 955, 1770, 952, 1768, 949, 1766, 946, 1764, 1763, 
       943, 1760, 940, 1758, 937, 1756, 934, 1754, 933}], 
      Line3DBox[{967, 1774, 968, 1776, 971, 1778, 974, 1781, 1782, 977, 1784, 
       980, 1786, 983, 1788, 986, 1790, 989}], Line3DBox[{988, 1162}], 
      Line3DBox[{998, 999, 1792, 1010, 1795, 1016, 1801, 1802, 1022, 1807, 
       1028, 1811, 1034, 1815, 1040, 1819, 1046}], Line3DBox[{1045, 1164}], 
      Line3DBox[{1047, 1820, 1041, 1816, 1035, 1812, 1029, 1808, 1023, 1804, 
       1803, 1017, 1796, 1011, 1009}], Line3DBox[{1069, 1165}], 
      Line3DBox[{1070, 1832, 1067, 1830, 1064, 1828, 1061, 1826, 1058, 1824, 
       1823, 1055, 1054}], Line3DBox[{1088, 1166}], 
      Line3DBox[{1089, 1842, 1086, 1840, 1083, 1838, 1080, 1836, 1077, 1834, 
       1076}], Line3DBox[{1094, 1844, 1095, 1846, 1098, 1848, 1101, 1850, 
       1104}], Line3DBox[{1103, 1167}], 
      Line3DBox[{1108, 1852, 1109, 1854, 1112, 1856, 1115}], 
      Line3DBox[{1114, 1168}], Line3DBox[{1118, 1858, 1119, 1860, 1122}], 
      Line3DBox[{1121, 1169}], Line3DBox[{1123, 1862, 1125}], 
      Line3DBox[{1124, 1170}], Line3DBox[CompressedData["
1:eJwV0Gsrg3Ech/EfLc3L8JaUSYsyOZRYXoNX5LwDioiIiIiMzZxmzHF46HM/
uLq+1+/BXfe/J5fvne6IiAzGUhHNdMR6Z8Qzr3GDV/mJy/zIDyjZ91zkOy5w
nVf4lmtYtqu8xDe8yNe8wBWe43lsoK8r4sVt095Cv37V2/YOBnRL79p7yOo3
vW8fYFAXuiOG+N390O0Iw/pDH9snGNGf+tQ+w6j+0uf2BcZ10Xcm+Nv90u0K
k7qtK8m/YEr/6Gryv8jrX11P3gUz+k/PetN/QKdEFQ==
       "]], 
      Line3DBox[{1128, 2335, 806, 2334, 805, 2333, 804, 2332, 803, 2331, 2330,
        802, 2329, 801, 2328, 800, 2327, 799, 2326, 2325, 798, 2324, 797, 
       2323, 795, 796, 809, 1681, 2336, 810, 812, 1683, 2337, 813, 815, 1685, 
       2492, 1686, 2338, 816, 818, 1689, 2339, 819, 821, 1691, 2340, 822, 824,
        1693, 2341, 825, 827, 1695, 2493, 1696, 2342, 828, 830, 1699, 2343, 
       831, 833, 1701, 2344, 834, 836, 1703, 2345, 837, 839, 1705, 2346, 
       1153}], Line3DBox[{1129, 2358, 852, 2357, 851, 2356, 850, 2355, 849, 
       2354, 2353, 848, 2352, 847, 2351, 846, 2350, 845, 2349, 2348, 844, 
       2347, 842, 843, 855, 1707, 2359, 856, 858, 1709, 2494, 1710, 2360, 859,
        861, 1713, 2361, 862, 864, 1715, 2362, 865, 867, 1717, 2363, 868, 870,
        1719, 2495, 1720, 2364, 871, 873, 1723, 2365, 874, 876, 1725, 2366, 
       877, 879, 1727, 2367, 880, 882, 1729, 2368, 1152}], 
      Line3DBox[{1130, 2379, 894, 2378, 893, 2377, 892, 2376, 891, 2375, 2374,
        890, 2373, 889, 2372, 888, 2371, 887, 2370, 2369, 885, 886, 897, 1731,
        2496, 1732, 2380, 898, 900, 1735, 2381, 901, 903, 1737, 2382, 904, 
       906, 1739, 2383, 907, 909, 1741, 2497, 1742, 2384, 910, 912, 1745, 
       2385, 913, 915, 1747, 2386, 916, 918, 1749, 2387, 919, 921, 1751, 2388,
        1151}], 
      Line3DBox[{1133, 2428, 997, 2427, 996, 2426, 995, 2425, 994, 2424, 2423,
        993, 2422, 992, 2421, 990, 991, 1000, 1791, 2429, 1002, 1012, 1793, 
       2437, 1014, 1018, 1797, 2501, 1798, 2438, 1020, 1024, 1805, 2439, 1026,
        1030, 1809, 2440, 1032, 1036, 1813, 2441, 1038, 1042, 1817, 2442, 
       1147}], Line3DBox[{1134, 2436, 1008, 2435, 1007, 2434, 1006, 2433, 
       1005, 2432, 2431, 1004, 2430, 1001, 1003, 1013, 1794, 2500, 1015, 1019,
        1799, 2502, 1800, 2503, 1021, 1025, 1806, 2504, 1027, 1031, 1810, 
       2505, 1033, 1037, 1814, 2506, 1039, 1043, 1818, 2507, 1148}], 
      Line3DBox[{1135, 2448, 1053, 2447, 1052, 2446, 1051, 2445, 1050, 2444, 
       2443, 1048, 1049, 1056, 1821, 2508, 1822, 2449, 1057, 1059, 1825, 2450,
        1060, 1062, 1827, 2451, 1063, 1065, 1829, 2452, 1066, 1068, 1831, 
       2453, 1146}], Line3DBox[{1141, 1861, 1140}], 
      Line3DBox[{1142, 2473, 1859, 1120, 1117, 1857, 1116, 2472, 1139}], 
      Line3DBox[{1143, 2471, 1855, 1113, 1111, 2470, 1853, 1110, 1106, 1851, 
       1105, 2468, 1107, 2469, 1138}], 
      Line3DBox[{1144, 2467, 1849, 1102, 1100, 2466, 1847, 1099, 1097, 2465, 
       1845, 1096, 1091, 1843, 1090, 2462, 1092, 2463, 1093, 2464, 1137}], 
      Line3DBox[{1145, 2461, 1841, 1087, 1085, 2460, 1839, 1084, 1082, 2459, 
       1837, 1081, 1079, 2458, 1835, 1078, 1072, 1833, 1071, 2454, 1073, 2455,
        1074, 2456, 1075, 2457, 1136}], 
      Line3DBox[{1149, 2420, 1789, 987, 985, 2419, 1787, 984, 982, 2418, 1785,
        981, 979, 2417, 1783, 978, 976, 2416, 1780, 2499, 1779, 975, 973, 
       2415, 1777, 972, 970, 2414, 1775, 969, 960, 1773, 959, 2406, 961, 2407,
        962, 2408, 2409, 963, 2410, 964, 2411, 965, 2412, 966, 2413, 1132}], 
      Line3DBox[{1150, 2405, 1771, 956, 954, 2404, 1769, 953, 951, 2403, 1767,
        950, 948, 2402, 1765, 947, 945, 2401, 1762, 2498, 1761, 944, 942, 
       2400, 1759, 941, 939, 2399, 1757, 938, 936, 2398, 1755, 935, 925, 1753,
        924, 2389, 926, 2390, 927, 2391, 928, 2392, 2393, 929, 2394, 930, 
       2395, 931, 2396, 932, 2397, 1131}], Line3DBox[CompressedData["
1:eJwV0M9KAlEcR/HfONOoZVlG4dZHykdo464WEREFoWIQEb2PvZD9MS2DSlP7
zOLLOecO9y6mdXzaPkki4sh6WUSjGvGYRzTTiEPb0w/6gO/brr7XjcKtru90
nW/bjr7VTzjAmrPN4pvu6yovW013dc4z29I3OuVJcUdf6yFeYThbldzXl3rJ
F1bRF3rOf6ysz/U3f7YzPsLfSsQLzvG1uItv+IdLG/MVvuMaJxjemmKCJfvg
KX5ihjPcwC/MseP//QPQQCfs
       "]], Line3DBox[{1044, 1163}]}, 
     {GrayLevel[0.2], Line3DBox[{1184, 1622, 1185, 1652, 1553}], 
      Line3DBox[{1198, 1624, 1199, 1654, 1319, 1346}], 
      Line3DBox[{1211, 1626, 1212, 1656, 1321, 1682, 1348, 1373}], 
      Line3DBox[{1223, 1628, 1224, 1658, 1323, 1684, 1350, 1708, 1375, 1398}],
       Line3DBox[{1244, 1632, 1246, 1662, 1327, 1688, 1354, 1712, 1379, 1734, 
       1402, 1754, 1592}], 
      Line3DBox[{1255, 1634, 1256, 1664, 1329, 1690, 1356, 1714, 1381, 1736, 
       1404, 1756, 1431, 1774, 1593}], 
      Line3DBox[{1264, 1636, 1265, 1666, 1331, 1692, 1358, 1716, 1383, 1738, 
       1406, 1758, 1433, 1776, 1456, 1792, 1471}], 
      Line3DBox[{1272, 1638, 1273, 1668, 1333, 1694, 1360, 1718, 1385, 1740, 
       1408, 1760, 1435, 1778, 1458, 1795, 1796, 1473, 1486}], 
      Line3DBox[{1285, 1642, 1287, 1672, 1337, 1698, 1364, 1722, 1389, 1744, 
       1412, 1764, 1439, 1782, 1462, 1802, 1804, 1477, 1824, 1490, 1834, 
       1609}], 
      Line3DBox[{1292, 1644, 1293, 1674, 1339, 1700, 1366, 1724, 1391, 1746, 
       1414, 1766, 1441, 1784, 1464, 1807, 1808, 1479, 1826, 1492, 1836, 1505,
        1844, 1610}], 
      Line3DBox[{1297, 1646, 1298, 1676, 1341, 1702, 1368, 1726, 1393, 1748, 
       1416, 1768, 1443, 1786, 1466, 1811, 1812, 1481, 1828, 1494, 1838, 1507,
        1846, 1516, 1852, 1611}], 
      Line3DBox[{1301, 1648, 1302, 1678, 1343, 1704, 1370, 1728, 1395, 1750, 
       1418, 1770, 1445, 1788, 1468, 1815, 1816, 1483, 1830, 1496, 1840, 1509,
        1848, 1518, 1854, 1524, 1858, 1612}], 
      Line3DBox[{1303, 1650, 1305, 1680, 1345, 1706, 1372, 1730, 1397, 1752, 
       1420, 1772, 1447, 1790, 1470, 1819, 1820, 1485, 1832, 1498, 1842, 1511,
        1850, 1520, 1856, 1526, 1860, 1529, 1862, 1613}], 
      Line3DBox[{1429, 1401, 1733, 1378, 1711, 1353, 1687, 1326, 1661, 1245, 
       1631, 1243}], 
      Line3DBox[{1503, 1489, 1823, 1476, 1803, 1801, 1461, 1781, 1438, 1763, 
       1411, 1743, 1388, 1721, 1363, 1697, 1336, 1671, 1286, 1641, 1284}], 
      Line3DBox[{1530, 2625, 1317, 2624, 1316, 2623, 1315, 2622, 1314, 2621, 
       2620, 1313, 2619, 1312, 2618, 1311, 2617, 1310, 2616, 2615, 1309, 2614,
        1308, 2613, 1307, 2612, 1306, 1651, 2671, 1172, 1621, 2654, 1171, 
       2509, 1173, 2510, 1174, 2511, 1175, 2512, 2513, 1176, 2514, 1177, 2515,
        1178, 2516, 1179, 2517, 2518, 1180, 2519, 1181, 2520, 1182, 2521, 
       1183, 2522, 1552}], 
      Line3DBox[{1531, 2634, 1428, 2633, 1427, 2632, 1426, 2631, 1425, 2630, 
       2629, 1424, 2628, 1423, 2627, 1422, 2626, 1421, 1753, 2713, 1400, 1732,
        1377, 1710, 1352, 1686, 1325, 1660, 1228, 1630, 2660, 1226, 2560, 
       1230, 2562, 1232, 2564, 1234, 2567, 2568, 1236, 2570, 1238, 2572, 1240,
        2574, 1242, 2576, 1548}], 
      Line3DBox[{1532, 2642, 1454, 2641, 1453, 2640, 1452, 2639, 1451, 2638, 
       2637, 1450, 2636, 1449, 2635, 1448, 1773, 2723, 1430, 1755, 1403, 1735,
        1380, 1713, 1355, 1689, 1328, 1663, 1248, 1633, 2661, 1247, 2577, 
       1249, 2578, 1250, 2579, 2580, 1251, 2581, 1252, 2582, 1253, 2583, 1254,
        2584, 1546}], 
      Line3DBox[{1533, 2647, 1502, 2646, 1501, 2645, 1500, 2644, 1499, 1833, 
       2740, 1488, 1822, 1475, 1800, 1798, 1460, 1780, 1437, 1762, 1410, 1742,
        1387, 1720, 1362, 1696, 1335, 1670, 1277, 1640, 2666, 1275, 2599, 
       1279, 2601, 1281, 2603, 1283, 2605, 1543}], 
      Line3DBox[{1534, 2650, 1514, 2649, 1513, 2648, 1512, 1843, 2745, 1504, 
       1835, 1491, 1825, 1478, 1806, 1805, 1463, 1783, 1440, 1765, 1413, 1745,
        1390, 1723, 1365, 1699, 1338, 1673, 1289, 1643, 2667, 1288, 2606, 
       1290, 2607, 1291, 2608, 1541}], 
      Line3DBox[{1535, 2652, 1522, 2651, 1521, 1851, 2746, 1515, 1845, 1506, 
       1837, 1493, 1827, 1480, 1810, 1809, 1465, 1785, 1442, 1767, 1415, 1747,
        1392, 1725, 1367, 1701, 1340, 1675, 1295, 1645, 2668, 1294, 2609, 
       1296, 2610, 1540}], 
      Line3DBox[{1536, 2653, 1527, 1857, 2747, 1523, 1853, 1517, 1847, 1508, 
       1839, 1495, 1829, 1482, 1814, 1813, 1467, 1787, 1444, 1769, 1417, 1749,
        1394, 1727, 1369, 1703, 1342, 1677, 1300, 1647, 2669, 1299, 2611, 
       1539}], Line3DBox[{1537, 1861, 2748, 1528, 1859, 1525, 1855, 1519, 
       1849, 1510, 1841, 1497, 1831, 1484, 1818, 1817, 1469, 1789, 1446, 1771,
        1419, 1751, 1396, 1729, 1371, 1705, 1344, 1679, 1304, 1649, 2670, 
       1538}], Line3DBox[{1542, 2604, 1282, 2602, 1280, 2600, 1278, 2598, 
       1274, 2665, 2664, 1639, 1276, 1669, 1334, 1695, 1361, 1719, 1386, 1741,
        1409, 1761, 1436, 1779, 1459, 1797, 1799, 1474, 1821, 1487, 2738, 
       2739, 1605, 2741, 1606, 2742, 1607, 2743, 1608, 2744, 1620}], 
      Line3DBox[{1544, 2597, 1271, 2596, 1270, 2595, 1269, 2594, 1268, 2593, 
       2592, 1266, 2663, 1637, 1267, 1667, 1332, 1693, 1359, 1717, 1384, 1739,
        1407, 1759, 1434, 1777, 1457, 1793, 1794, 1472, 2731, 1600, 2732, 
       2733, 1601, 2734, 1602, 2735, 1603, 2736, 1604, 2737, 1619}], 
      Line3DBox[{1545, 2591, 1263, 2590, 1262, 2589, 1261, 2588, 1260, 2587, 
       2586, 1259, 2585, 1257, 2662, 1635, 1258, 1665, 1330, 1691, 1357, 1715,
        1382, 1737, 1405, 1757, 1432, 1775, 1455, 1791, 2643, 1594, 2724, 
       1595, 2725, 2726, 1596, 2727, 1597, 2728, 1598, 2729, 1599, 2730, 
       1618}], Line3DBox[{1547, 2575, 1241, 2573, 1239, 2571, 1237, 2569, 
       1235, 2566, 2565, 1233, 2563, 1231, 2561, 1229, 2559, 1225, 2659, 2658,
        1629, 1227, 1659, 1324, 1685, 1351, 1709, 1376, 1731, 1399, 2711, 
       2712, 1584, 2714, 1585, 2715, 1586, 2716, 1587, 2717, 2718, 1588, 2719,
        1589, 2720, 1590, 2721, 1591, 2722, 1617}], 
      Line3DBox[{1549, 2558, 1222, 2557, 1221, 2556, 1220, 2555, 1219, 2554, 
       2553, 1218, 2552, 1217, 2551, 1216, 2550, 1215, 2549, 2548, 1213, 2657,
        1627, 1214, 1657, 1322, 1683, 1349, 1707, 1374, 2699, 1575, 2700, 
       2701, 1576, 2702, 1577, 2703, 1578, 2704, 1579, 2705, 2706, 1580, 2707,
        1581, 2708, 1582, 2709, 1583, 2710, 1616}], 
      Line3DBox[{1550, 2547, 1210, 2546, 1209, 2545, 1208, 2544, 1207, 2543, 
       2542, 1206, 2541, 1205, 2540, 1204, 2539, 1203, 2538, 2537, 1202, 2536,
        1200, 2656, 1625, 1201, 1655, 1320, 1681, 1347, 2686, 1565, 2687, 
       1566, 2688, 2689, 1567, 2690, 1568, 2691, 1569, 2692, 1570, 2693, 2694,
        1571, 2695, 1572, 2696, 1573, 2697, 1574, 2698, 1615}], 
      Line3DBox[{1551, 2535, 1197, 2534, 1196, 2533, 1195, 2532, 1194, 2531, 
       2530, 1193, 2529, 1192, 2528, 1191, 2527, 1190, 2526, 2525, 1189, 2524,
        1188, 2523, 1186, 2655, 1623, 1187, 1653, 1318, 2672, 1554, 2673, 
       1555, 2674, 1556, 2675, 2676, 1557, 2677, 1558, 2678, 1559, 2679, 1560,
        2680, 2681, 1561, 2682, 1562, 2683, 1563, 2684, 1564, 2685, 1614}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1864, 2269, 1863, 2654, 2284, 1893, 2671, 1996, 1864}], 
      Line3DBox[{1866, 2270, 1865, 2509, 1894, 2655, 2285, 1908, 2311, 2025, 
       2672, 2037, 2011, 2612, 2297, 1997, 1866}], 
      Line3DBox[{1868, 2271, 1867, 2510, 1895, 2523, 1909, 2656, 2286, 1922, 
       2312, 2026, 2336, 2064, 2686, 2075, 2051, 2323, 2673, 2038, 2012, 2613,
        2298, 1998, 1868}], 
      Line3DBox[{1870, 2272, 1869, 2511, 1896, 2524, 1910, 2536, 1923, 2657, 
       2287, 1935, 2313, 2027, 2337, 2065, 2359, 2100, 2699, 2110, 2088, 2347,
        2687, 2076, 2052, 2324, 2674, 2039, 2013, 2614, 2299, 1999, 1870}], 
      Line3DBox[{1873, 2273, 1871, 2512, 1897, 2525, 1911, 2537, 1924, 2548, 
       1936, 2658, 2488, 2474, 2490, 2476, 2492, 2478, 2494, 2480, 2496, 2482,
        2711, 2142, 2122, 2369, 2700, 2111, 2089, 2348, 2688, 2077, 2053, 
       2325, 2675, 2040, 2014, 2615, 2300, 2000, 1873}], 
      Line3DBox[{1874, 2274, 1872, 2513, 1898, 2526, 1912, 2538, 1925, 2549, 
       1937, 2659, 2660, 2288, 1947, 2314, 2028, 2338, 2066, 2360, 2101, 2380,
        2133, 2713, 2712, 2143, 2123, 2370, 2701, 2112, 2090, 2349, 2689, 
       2078, 2054, 2326, 2676, 2041, 2015, 2616, 2301, 2001, 1874}], 
      Line3DBox[{1876, 2275, 1875, 2514, 1899, 2527, 1913, 2539, 1926, 2550, 
       1938, 2559, 2560, 1948, 2661, 2289, 1957, 2315, 2029, 2339, 2067, 2361,
        2102, 2381, 2134, 2398, 2162, 2723, 2170, 2153, 2626, 2389, 2714, 
       2144, 2124, 2371, 2702, 2113, 2091, 2350, 2690, 2079, 2055, 2327, 2677,
        2042, 2016, 2617, 2302, 2002, 1876}], 
      Line3DBox[{1878, 2276, 1877, 2515, 1900, 2528, 1914, 2540, 1927, 2551, 
       1939, 2561, 2562, 1949, 2577, 1958, 2662, 2290, 1966, 2316, 2030, 2340,
        2068, 2362, 2103, 2382, 2135, 2399, 2163, 2414, 2187, 2429, 2643, 
       2194, 2421, 2179, 2635, 2406, 2171, 2154, 2627, 2390, 2715, 2145, 2125,
        2372, 2703, 2114, 2092, 2351, 2691, 2080, 2056, 2328, 2678, 2043, 
       2017, 2618, 2303, 2003, 1878}], 
      Line3DBox[{1880, 2277, 1879, 2516, 1901, 2529, 1915, 2541, 1928, 2552, 
       1940, 2563, 2564, 1950, 2578, 1959, 2585, 1967, 2663, 2291, 1974, 2317,
        2031, 2341, 2069, 2363, 2104, 2383, 2136, 2400, 2164, 2415, 2188, 
       2437, 2500, 2209, 2731, 2215, 2202, 2430, 2724, 2195, 2422, 2180, 2636,
        2407, 2172, 2155, 2628, 2391, 2716, 2146, 2126, 2373, 2704, 2115, 
       2093, 2352, 2692, 2081, 2057, 2329, 2679, 2044, 2018, 2619, 2304, 2004,
        1880}], Line3DBox[CompressedData["
1:eJwl0D1LQgEcRvG/g9xybXOyPkDg7lhtEjQVbbk4iI46GE0N0RTUFOEUBL2X
JSIiFTm1+gUSGt0bgn4Xh8N5zuW+L+81tuqZiChjN4n4WYjY4cliRJ2/uc0z
PuJfPuNsLiJBx17iK87zAxe4x1XuO/8aA9xiiHuM8Ig3POMdXXzgBZ8Y4xVf
6OEpvZ/3u8Oxvkmfa5/jQF/qU7tpH3JZV+19u4Z1va0vuKI3saFP9Jq9imJ6
rV6xc8jrlv7zPVOU7Ixjk2T+v/4BCSAt8w==
       "]], Line3DBox[CompressedData["
1:eJwl0CFLQ2EYBeBXw+50YBLL0hCswtpAo9pU1iaWiWWCm0XQoJgWxhYmzCQy
DIJBRFwQwbx/sD+gsDiDySB7LobDc84H936XWzholOszEbEj+0nEOBuxx9Fc
RIOfvOCELf7yhpn5iKz09UU+Ms8XFvjGGo/kxzs/7AXPfnOFS87WWOIuK6zy
lCfssMmh3OtdDjjwvld515+l7fwpvV+/lSv7we7pZ3qT23ZNv9SPZdOu2Hc8
TO+XLfva3tBXpZg+ay/rOcnb5/af7/+SdX3W2Sj5/29TCZ4qlw==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0LErhHEcBvCvDOcuZZLlFpJbr2xXjNhESl2d4cpC3bFcMZDpBjFQlJJk
UAZJGS516gz8B/cPuDKewWTg88vw9Hme9+799b7veLW+XBuIiFVZy0R8DkVU
2M1GbPGDe+zzkD88ZzYXkZNrfZR3zPORE2xxigVp65v8dnZHH3HGFwscc22G
JS6xzCob3OYxm3yXG/2ET7zgK1vOfeOLrOhn6Xc+2w9yZN+n59Mv5cC+Tf/T
d/QmF+0NfV+vybxdtq+4np5LFuxTe04vynS6157UhyVv79q/3qsns/qga93M
/3f9A0ufL7E=
       "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcBvC3UufHKZMsN0iKRSmbYsSmK6VuIOoWl4tFMZDpBjFQlLqQ
QRkkZbgURXIpZbt/gDIymAxenwxPr+f59P111zNfzi81RcSszGUiPlt0Nloj
lvnODX5xm788ZHtbRFZO9S5eMMdr9rLGfg7InT7IB5b44x1Peqdnfafr2O1s
lCPMs8AFrnKFu6ywLmf6Hm94xEee8JU1z3/ji8zoVefP+r1M2wfpPt7aV7Jj
X6bv16uyZZ+n6/Q1vcIpe1Hf1MsyYRfsYxbT98qkvW+P60MynO61+/QOydnr
dugffvOY3uyskfn/3/8Ajdo0Ug==
       "]], Line3DBox[CompressedData["
1:eJwl0b8rhGEAB/DnBh3KlUmWKyWFQZRNMWLjSsktLnWLX7EoBjLdIAaKUpef
pQySMlyKIp2UkuT+AcrIYFI+T4Zvn+/36e59e9+3KTczPJ0IIeQllwzhszqE
cVZqQpjjO5f5xTX+cod1tSGk5EBv4CnTvGAzS2xju1zrHbxlJ+85xR/3Kuv1
rvnNVjY662UPM8xygguc5wYLfJAjfZOX3OUd9/nEY76y5D5vfJEx/dD5s/4o
o3bRLus3MmJvx+vxyj6XdfssPp9elFX7JP5OX9QLHLIn9RV9VgbsrL3HfHwO
GbS37H69S7rjf+0WPSVpe8lO6B/eRZ9e5ayS/P8uf8EdOiY=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0T8ohGEABvCXwWE5mWS5DFKi5MqmGLFdSskt/pSFSyyKgUw3iIGi1OU/
ZZCU4VIU6S6lJDl2yshgkt+X4en3PG9339t31zCcSU2WhRAyMhoL4bMyhBGW
qkKY5jsX+MVl/nKT8eoQamRXr+MJEzxnI/NsYatc6W28YTvvmGSBk/xxZ1Gv
9exvNrPeWRc72c80xzjLGa4yy6Ls62u84BZvucMHHvCZR3xl3n1vLElaP3T+
oj/JkL1nP+r3Mmjn7IJ+LQP2RnQPL+0zWbFPo/fXc7JkH0ef0+f0LFP2hL6o
T0mvnba3OR69n/TZ63aPnpSO6Lt2kx6XhD1vl+sffqNuvcJZKfb/v/0ByJdA
Hg==
       "]]}}},
   VertexNormals->CompressedData["
1:eJztXXVAlFvTFwwwKVuRUlGxKbEGWxA7UcTEBLsQC8UOxARRBBNFxAYFPdIp
0giiwC4bIGE3+nH3mX3Vx3vcZ0VvvN/rP+P93Z+z55kzZ07P0Zm+cJSdYpUq
VUJqValStUL2PDVbvNcxE7rm1XdNn/iELDsVYrtqbSZxbLt/6YPGESTDZfg8
YZUIUrbZ4tQKozIS7tvm9i2zbLgjiHx0awPcfnGAP/tk5xLikH62YefVD8D/
zIfoTm4lpAr+8VSru/7wBAEx6eUxsOZoAVnYja/uNDKdys8dMH6f8gkhmVhU
paXRceF/8P/x/17+YuRf4MhfIKf+P//zFKT8SVz5TdusMb6ZDO7Hgwf4duHB
TCd3XxIrJoPjtewaVcsjVmbdu/IO8aGBsUSS7WPstjlYBENsM7uCj0p8sFa6
N/j0+kLS6ZW628u4UtJSobqesXcMtGIk/v5TSjn+W/HveEDDcz8V7dQ8fp10
aNUo78lOIdjrSiQZhPbf34uxf2Jnxv45yD/QluFXa8HwpfbXRfvr/L+w/3c8
qp0L0G770W7V0W4D0c4DGPuCVm/GzveQ79qM4dds/62d9dDOuv9Vdv6OR7Vn
DMs+tdr/2G+fIH8awwPTZt/a898dN77jUe3GQztMRzuYoB0GoN02GzB2y+3L
2C0C+W2bMPwFHf/cbtr/aLt9x6PaJwm/Vx+/dxF+r7Q/qs70Q2DD9EtEGj/3
6jF85Zbf2kcf7aP1j7DP999Lwx/jd+3D76qB32WFdnBGP3mEflIutYMG2sHo
Wzto/S39Avfvrf6ZKf9uLH9to2/bhbTep2C9J8mod4wjoPdbvpf7dwWz6lEJ
y9mP1d7zsB5DkR/B9E+Q1uZ3xEnu5Q/H8oRjedLbfNseq2K9TMZ6KUS+G+t7
2eXn1m9yL+cLij/0x3KeHs6U806Lb8dRn80YvnvdPy+nwTfl5F6eeNT/CfV7
1v22PKewPHexPAnIL0f+UeTL+7uZlN9l8X66HdQb2ZAMsiyEmiseh4x4EE92
X33sajiGR5qvGDltbNNCONi4XPluKo9oSf47liT0WD/Ly1sIiYz8jx4pfo+F
36PgND3xv0j/r8Jp5aTYFWYw9oOHSyX2hDGMfUmA9eBLTrXFkKt39pXXnXyy
Iqv2Chd+BlFE/e49v9UvL66AuAdHnKanKuKHOeI0PdG9GDzV7Fs8BvEUM272
pOFjGPuBQFdiT1g4UWJf0ovxU3BrIvFbsFku8WOZ7Q7LD4qseq5jyuC7zX9U
3i96aHy9vgy+0pibnpbIX8Hid+vO4NN6cdNjhHw7Fv9VbwY/3Y2bng/IP87i
63XCcg7mpkcL+atZ/Neo/yTH8rxDvg+LP2wAgw/pyk2PFfKHdq1ced4g/wSL
T8NpeqS/e6rbn5eHjctbHuTJ7BfiRjD9gvEqpl+4jv3CFKY9wR6mfRHAfqEa
xoFDcsYNNk7TI8UPVhKXFa/YcYkWx2j2D77FxP+8DUz8bzaEif8Gk5j4f1iL
if9r85j4Xw/jxS5WvMDfg2hWu02h4HUpemi4CuI7KfgOc26/i/UEVXtww2l2
o+EjxEycP6rDxPmk8UycR7+DvRjnJ3OM84cpcZ4W/2l6sD+FKiy+GcbbqRzj
szHyZ7L48rb395T43P0ny1PZ/kJaHu9ulbOPKfJnsPhv5LTPW0o8zDdk8Jv9
uOnJo/DljfO08iBPZnweNIaJz9McmPhcEsDE59OLmfi8ogUTn59gfE7G9hvD
siMNp41j5I0zNJz2u4cpcYOG0+wcfYaJw1OYeQ1YTGTi8MRxTBwubM/E4WXx
TBymtX/a7+pRxme0cR6NTxvnSX+3Gsfy0Pg0+9DwriFMvL1vwMTbOBxXM+Po
WLiqzsRbt9Xc4m09Sj/zs3GSFpe4xoF3lLg0XM5xoyXyR7D4L+WMkx+R78Xi
t8Jx8nKO42ptyrj6jZzjWFpcim/D4InDuOlJoPBp9pe3PMiTGSddLZg4abCX
iZNzgpk4mY3rG0caMXGyiPFvQhsfyGrvXHFZ7Z0Wf7jiNHueucvEw7qrmXg4
eBATD+NnMPFQSZ2Jh0OFTDyk6ZcV57n2F7RxL63f+VX9Ag2/+5qJe6XNmLi3
fwIT9zIx7h1vyMQ995Xc4t6vmne/p8xzfzZeDWfxH+N4Jpjj+KcA+ddZfOk4
c0ol4/nPznPZ8U06TrvF8bt4yA9i8WnrDPKWB3ky41W6DROveN2YeNXsHBOv
HmK88sB49R7jFa0dyZrfcZ330dovbbzEbR71xW4dTjNxafFUJi69ZL6fuI9i
4lJCFyYuaSQwcYk2n+lB8T/aepkZBZfON6Zz5NNw2vfS8N3BTPwRtmbij5st
E398cZ7r1JyJP/pLucUfWeMcS45xYwjyh1UybggocYNWbzQ9Jr9oviwrbnCd
D8qKG1zng5WNG/kDmbjR6gwTN2rcZuLG0WW4XteUiRuTcT5IW3cwRHwWC6fx
abgJZd5Oqz+afTpfY+LD9XVMfPg8nIkPe3A9bRGzLkR0cD+FNv6m4TS70/yJ
Nt/g5n9fvouGH8d9DetWTBxwxXHIlZVMHJjUkokDHR24xQFa+5V33vThF81T
dJDvSJmnyLt+wu6Xf/U8hWu/TysP8mS2X61RuN6O6zlFV5j228iRab+n6zPt
1x37fVr5aOtutP6AZndu3//FDruSmXYad4Vpp7qmTDutYc+0U09Fpp3uesG0
U+k+jRXLL2n7N90o/TKtf+e27vml/DTco0EdSXvsrM20x8bDvu2XV8vZL9Pm
+/rYLpb+onZU2X0raTu6/xe3o8ruW22fzbSjg9WYdjT0ONOOqq5n2tGDOkw7
clzGtKMhlHnRz/ZrbJz2vU3cmfZiYcO0l5uzmPbSnPEvGNOTaS+97zDtRVY/
xbX/4rav+aWcNNzYi+mn5nRk2kXVqUy7KF/KtIsyZaZdvHfm1i6k+8JOlH3h
yu57/lv9+WFvxp/nRDD+bBrJ+LMm9gve2C9sxX6BFv9/VZwvPMD4rW9nxm9r
2jN+e2og47cqAxm/XUMYv6WdD/jdcfvDUcY/97fEcdRsxj8DMW6vw7itJ+d8
im0nqZ/c4+hX95CfwOLT9u/kLQ/yZPqVixnjV0uf4rpoDONXxvMYvxrYhvEr
41WMX/2quDckifGf5j6M//RhykHWMPNd6FOf8Z/gV4z/0NZxuK3vfG83Nq6O
/fuQ5oyfNBrJ+MlVpn+AqHqMn+xey81P8inzQXnHt5WNGyWTmfp1GM3Ub31m
nYWcX8DU7wxdpn5dmHkF4bYP+qWc7XFeFovzMgXmvAjZi/Mye5yXtcd52Y/X
8el2YOPHcH40utW367Qe2K7XYLtuzbFdV9bOmjhu74vj9mIct9fH+Hwe47M3
xmdaeTqgPe+jPauM+HaeuwDtaYD2lNdup9Bu41nzSnm/VzpPscTvLcTv/XF5
aOWSVf4vvzsb79NdYt2ni8PzPEms9cbPGJeOsM754HmN73BZ+yzs/YXauC66
h7J/UVmcNv6Ud1+B1k/oYr+8itUvyzqfxx6H/Sr9cdgvJrH6xVgK/rPjXjbu
37HOotvaRXBT7w+ZTWoYMFJ6HljKk54LpuG920v+HQBK5r+LCIv3l59fpuG0
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
tsolJLGNnmvLpTFQNWhto1XvM0l3s8b+m5LLiMLmOeHO6r7k3NTrpiKHoP93
76rLi/canxsyu0oxeTH7hM8pUTrwJkskGZ3U4vL24DIyfoKPj9fEQBjHSPx3
/5x7T38XvqjrtdGDehUTzx0bC5tZpMPxAxJJOga/354bX0YW7s5ftnDGNUBJ
mhrsMFD/XEY0D2iZNru/GVD+19rzlnLAmwafi0lQQe/ocS1TYfJjiSSDHhtr
1owpI7u2H7Jy0boOelskksxMPbNc61MZaef9XjX/8x5A+a+3j1vjUyk298pI
s221BuxtfA0ydkokIe3Plp+8WEz0MlbNq66WBvUKJJIoi4Pdr1X4Scv9GuNW
u64CbUYS7cD5OfMiykjnphNXv467Dh0Y+a+3zz8NP11gd2atWjFpMWZJYEhw
OqwYL5Fk5H23kaNvlZG2T0rSmrgGgg4j/3H2P/FqjZJZo2JSTfngM9GFdMhp
IpGkqaiX744K/2nMX7alXeR1aMpIstdC0/BKhb9Nz1Yu8X6+CpYw8rd/16ek
LjF3rhaTw9Xn1JmtmAb6yhJJxs2ucvB2Qhnpnyxe+cb0GiikSCTpZtOgQLMi
PnzsdDctuY4rvGXkLyvn1GavV+yqiEt7Zw3eFFrjOpyxl0jS+N7tzU4fi4nz
zPI80/apYLZIIsmRrTyHhhV2m6lsXr/g6GawYyTpuWKeTURF/D8QmqgRPOca
oPzt9kxxquU3zLiY2O5up2lsmw679kok6TNGbfryin48a/fxOWq2gYCSWp5J
5UFjVysWk2OPJ/caz0uH9kESSZxdkz5/vFNGrkcbDvAJuwEhjCTOW0aa+zcr
JgsvD98zoWKc3tlNIol9gsKRNC8RxCzum8o3EZCTrV231q169297b/rveofa
HudjHVnzMdr71B8p58QKI0j9REcRHJkruN3CUUBatl8+wHtVMPXdQxou77uH
tPtippRzPrR3D2cgbsreh/OcGpJSIIIzc4udx18qIOvNHK5HV4/4297Rk/d9
vdTXi/03GOXAmO1Ltu1Qygb1F7NOOHoWkhEe9y1qjxZB7xkrV4ffFBC/mKbq
Ww/eIG9xnubTh5vd9uP6jxJrvbWPX4hftzARjB5SvaTdywLSpmFYn9GNw6jv
T03D/Ylu/b/FawxVe1mqLwY3sks8vG0BGd8jaqrL6GhijPVux1p3uuAw/dGA
XWJYNGz+ndAZfPJga/MaJ17HkWUd7ItEyy+Dj57LlIhnPNCa1mG/05VCct9o
YU3zoFDiptRb/8EcIah97vWHJBsVQx9PvBpKyDndpm8q8G7nJZK0VRRfdbsU
Suo0bnJVuWL+3kxbIknOKAs/t4uhZEfvuNENKnDtzhJJDAYk8EwziomF2cmO
Q7xSQWwqkaRRw+4Ha6aFkot1q6TpV+g/3kIiiUnEhOdqwaGk7jL94VEV+GYn
iSSG2YEWPtdCyZmb/WqXVeBPYyWSZPqeL596OZS4J3w4WLXidy/xJJK4Gdc/
3TEglBTY8ZepVeCGcySSdH92q9SzfgnpaHZwnzsvBYaDRJKlnQe5Ti0PJftL
mzhqzRZC8juJJBuDtLr3IaHk7NHyRL+K3x3nLZFEGFB7rcmNUCLwC6gpqMBD
90kkSRr/Qs3qSihZtUQttrwCrzdAIsnYN6mNgkrDiMutCwdEU4XgeVAiyfqT
9dufVgqDFYeyM1vn8mDR+0XxM5cUkiRn9WMfdyVB3fsrrIOW8eDNqyqLVBLE
ZLHSBZeLNcQQ4TAvf5p9AVG0DbzYLep/5xn+o4dynqHu0pHKe1enwORHe6+5
9OPBrTxbDR0PMVkVZis8M08M6xzuaDQ7xSdezg5zip/Gyv1ekjfi71jl/N3v
KAHiE1nlwfdm4ArH/X09xFex8PsO4U7n7NKgdPOEWvvq8OCO1eXAuVPFRN+8
RqfjyWIQTExMVhDySN1e4bp3tiYQ/ZwzglhFETx/fr7+GlMhaRq2XzXymBfZ
gOtHTVjrdL/7PSZz/K6JrO+Snn84Vsl98O1PTW4MHJIBj72nRQUl5UO0Xvaw
ZB0xydWztuijVgQNTjzrnGOUS5pvvX9jcNM0MrB822Xn7Hgw3m+7wusKD1bs
b9f/ZLVCkl+0brvKLhGMO3xi+GE3AdluP6HU/8Sl3/7eE219WXpuYwGrPdLe
e0K/AV32OYE2NW6Y3rkPB+9tDN+xlQfxJ8a/tM8WE5W5/m87WIhh/qOtRzsL
+aTRCKPNh27FyP3eE+38g7znZPZi+Wuxyr/AwGqjclgqdC2Y/chZiwddZy6w
qbFMTLznFWk7XxSDe/KdWcot+SRj2FCjFZnxxO6hrcAtRQijs+dMv28vJOus
NpVqvHIlHljOKux8FPi7XN+NosXtfoFNYoLOpYNSg7ycnoJ8yHdtNne6qZgc
2T3sZKlbIcxp2beNZpt84lLc4EnPecnkePNdSn3i4mDzZ/Xm465VtOuz6kmF
DQpJlsYDPdUpImg65rZjWqyAeKg6nMku9iPSfNzsfTpaHk8txJ1Y+KQaOrr6
GxKhSZ3gmlv280BoUy10YpGYbI5dp7W4UzIct7qz66IdDxoXvmh3KFhMCoVK
G/dppoJC5lZStSsPsh1U8ku3iMnMES8tbrplQvQOq3qPCvLg4pDEVsZrxeT/
AL6y5Fk=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageMargins->{{11.01171875, 0.}, {0.234375, 51.76953125}},
  ImageSize->{335.03433128624397`, 345.40769098795266`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{0, 20}, {0, 20}, {0, 20}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.247139540021019, 3.145518458139432, -0.018883781939101948`},
  ViewVertical->{0.217723664001293, 0.5446396050115098, -0.8099161109564119}]],\
 "Input",
 CellChangeTimes->{3.6926948920778503`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "*", " ", "b"}], "+", 
        RowBox[{"a", "*", " ", "c"}], "+", 
        RowBox[{"b", "*", " ", "c"}]}], ")"}]}], "<", "154"}], " ", "&&", 
    RowBox[{"0", "<", "a", "\[LessEqual]", "b", "\[LessEqual]", "c"}]}], ",", 
   
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.692694555803576*^9, 3.692694561842271*^9}, {
  3.692694627089518*^9, 3.692694633647461*^9}, {3.692694794033885*^9, 
  3.692694796896563*^9}}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","invplotreg",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"2\\\", \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"a\\\", \\\" \\\", \\\"b\\\"}], \
\\\"+\\\", RowBox[{\\\"a\\\", \\\" \\\", \\\"c\\\"}], \\\"+\\\", \
RowBox[{\\\"b\\\", \\\" \\\", \\\"c\\\"}]}], \\\")\\\"}]}], \\\"<\\\", \
\\\"154\\\"}], \\\"&&\\\", RowBox[{\\\"0\\\", \\\"<\\\", \\\"a\\\", \\\"\
\[LessEqual]\\\", \\\"b\\\", \\\"\[LessEqual]\\\", \\\"c\\\"}]}], \\\"}\\\"}]\
\\) is not a valid region to plot.\"",2,91,14,23147336927893110934,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.692694564439221*^9, {3.6926946284149303`*^9, 3.692694635066474*^9}}],

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", "b"}], "+", 
        RowBox[{"a", " ", "c"}], "+", 
        RowBox[{"b", " ", "c"}]}], ")"}]}], "<", "154"}], "&&", 
    RowBox[{"0", "<", "a", "\[LessEqual]", "b", "\[LessEqual]", "c"}]}], ",", 
   
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.692694564442474*^9, {3.6926946284298973`*^9, 3.6926946350827513`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=."}], ";", 
  RowBox[{"b", "=."}], ";", 
  RowBox[{"c", "=."}]}]], "Input",
 CellChangeTimes->{{3.692844905426259*^9, 3.692844913461833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", "b"}], "+", 
      RowBox[{"a", "*", "c"}], "+", 
      RowBox[{"b", "*", "c"}]}], "\[Equal]", "47"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"a", "+", "b", "+", "c"}], "\[Equal]", "12"}], " ", "&&", 
    RowBox[{"0", "<", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "Integers", ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6928447955019703`*^9, 3.6928448980632973`*^9}, {
  3.692844930876733*^9, 3.692844931378688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "3"}], ",", 
     RowBox[{"b", "\[Rule]", "4"}], ",", 
     RowBox[{"c", "\[Rule]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "3"}], ",", 
     RowBox[{"b", "\[Rule]", "5"}], ",", 
     RowBox[{"c", "\[Rule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "4"}], ",", 
     RowBox[{"b", "\[Rule]", "3"}], ",", 
     RowBox[{"c", "\[Rule]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "4"}], ",", 
     RowBox[{"b", "\[Rule]", "5"}], ",", 
     RowBox[{"c", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "5"}], ",", 
     RowBox[{"b", "\[Rule]", "3"}], ",", 
     RowBox[{"c", "\[Rule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "5"}], ",", 
     RowBox[{"b", "\[Rule]", "4"}], ",", 
     RowBox[{"c", "\[Rule]", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.692844869591031*^9, {3.692844900350093*^9, 3.692844934558749*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["6,10,14,16,18,22,24,26,28,30,32,34,38,40,42", "WolframAlphaLong",
 CellChangeTimes->{{3.692849412785782*^9, 3.692849457935145*^9}, {
  3.6928494960483437`*^9, 3.692849507188883*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "6,10,14,16,18,22,24,26,28,30,32,34,38,40,42", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, 40, 42}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"{", 
               
               RowBox[{
                "6", ",", "10", ",", "14", ",", "16", ",", "18", ",", "22", 
                 ",", "24", ",", "26", ",", "28", ",", "30", ",", "32", ",", 
                 "34", ",", "38", ",", "40", ",", "42"}], "}"}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "List", "id" -> "Plot", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, 40, \
42}, Mesh -> All, Filling -> Axis, AxesOrigin -> {1, 0}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, 
              
              GraphicsComplexBox[{{1., 6.}, {2., 10.}, {3., 14.}, {4., 16.}, {
               5., 18.}, {6., 22.}, {7., 24.}, {8., 26.}, {9., 28.}, {10., 
               30.}, {11., 32.}, {12., 34.}, {13., 38.}, {14., 40.}, {15., 
               42.}, {1., 0.}, {15., 0.}}, {{{}, {
                  EdgeForm[], 
                  Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                  GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 16, 17, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, {
                  Hue[0.67, 0.6, 0.6], 
                  Directive[
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                   15}]}}, {{
                  Hue[0.67, 0.6, 0.6], 
                  Directive[
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   AbsoluteThickness[1]], 
                  
                  PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                   15}]}, {}, {}}}], {}}, {
             AxesLabel -> {None, None}, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesOrigin -> {1, 0}, BaseStyle -> {CellBaseline -> Baseline}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], ImageSize -> 
              200, LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {}, PlotRange -> {{1, 15.}, {0, 42.}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{None, 
                 Scaled[0.02]}, {None, 
                 Scaled[0.02]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "List", "id" -> 
     "NumberLine", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{6., 1.1879999999999997`}]}, "6.`"], 
                 Annotation[#, 6., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{10., 1.1879999999999997`}]}, "10.`"], 
                 Annotation[#, 10., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{14., 1.1879999999999997`}]}, "14.`"], 
                 Annotation[#, 14., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{16., 1.1879999999999997`}]}, "16.`"], 
                 Annotation[#, 16., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{18., 1.1879999999999997`}]}, "18.`"], 
                 Annotation[#, 18., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{22., 1.1879999999999997`}]}, "22.`"], 
                 Annotation[#, 22., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{24., 1.1879999999999997`}]}, "24.`"], 
                 Annotation[#, 24., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{26., 1.1879999999999997`}]}, "26.`"], 
                 Annotation[#, 26., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{28., 1.1879999999999997`}]}, "28.`"], 
                 Annotation[#, 28., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{30., 1.1879999999999997`}]}, "30.`"], 
                 Annotation[#, 30., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{32., 1.1879999999999997`}]}, "32.`"], 
                 Annotation[#, 32., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{34., 1.1879999999999997`}]}, "34.`"], 
                 Annotation[#, 34., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{38., 1.1879999999999997`}]}, "38.`"], 
                 Annotation[#, 38., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{40., 1.1879999999999997`}]}, "40.`"], 
                 Annotation[#, 40., "Tooltip"]& ], 
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{42., 1.1879999999999997`}]}, "42.`"], 
                 Annotation[#, 42., "Tooltip"]& ]}, {GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                Method -> {"GridLinesInFront" -> True}, ImageSize -> 300., 
                Axes -> {True, False}, AxesStyle -> {}, 
                PlotRange -> {{4.199999999999999, 43.8}, Automatic}, 
                AxesOrigin -> {0, 0}}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Length of data", "scanner" -> "List", "id" -> 
     "LengthOfData", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Length[{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, 40, \
42}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              FormBox[
               TemplateBox[{"15", 
                 TemplateBox[{
                   StyleBox["\" items\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}, 
                "RowDefault"], TraditionalForm], 
              Format[#, TraditionalForm]& ], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Total", "scanner" -> "List", "id" -> "Total", 
     "position" -> "500", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Total[{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, 40, \
42}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                
                RowBox[{
                 "6", "+", "10", "+", "\"\[CenterEllipsis]\"", "+", "40", "+",
                   "42"}], HoldForm], 
               PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              TagBox["380", Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Histogram", "scanner" -> "List", "id" -> "Histogram", 
     "position" -> "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Histogram[{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, 40, \
42}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               Directive[
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458], 
                EdgeForm[
                 GrayLevel[0.6]], 
                Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                 Directive[
                  RGBColor[
                  0.798413061722744, 0.824719615472648, 0.968322270542458], 
                  EdgeForm[
                   GrayLevel[0.6]], 
                  Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{5., 0}, {10., 1}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{10., 0}, {15., 2}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{15., 0}, {20., 2}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{20., 0}, {25., 2}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{25., 0}, {30., 2}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{30., 0}, {35., 3}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{35., 0}, {40., 1}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{40., 0}, {45., 2}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {
              AspectRatio -> 0.6180339887498948, Axes -> {True, True}, 
               AxesLabel -> {None, None}, AxesOrigin -> {5., 0}, AxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1], FrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1], 
               FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
                GridLines -> {None, None}, GridLinesStyle -> Directive[{
                  AbsoluteThickness[1.01], 
                  RGBColor[1, 0.7, 0.4]}], ImageSize -> 175, 
               PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{0, 
                  Scaled[0.01]}, {0, 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], ImageSize -> 
             200], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Statistics", "scanner" -> "List", "id" -> "Statistics",
      "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"mean\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["25.33", 
                  $CellContext`TagBoxWrapper["StringBoxes" -> "25.33"]]}, {
                 TagBox[
                  PaneBox[
                  "\"median\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["26", 
                  $CellContext`TagBoxWrapper["StringBoxes" -> "26"]]}, {
                 TagBox[
                  PaneBox[
                  "\"sample standard deviation\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["11", 
                  $CellContext`TagBoxWrapper["StringBoxes" -> "11"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Statistics__More"}, {}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Box\[Hyphen]and\[Hyphen]whisker chart", "scanner" -> 
     "List", "id" -> "BoxWhiskerChart", "position" -> "800", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "BoxWhiskerChart[{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, \
40, 42}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0.4163731656936597, 4.2}, {1.5836268343063402`, 
                43.8}}]}, {
               Directive[
                RGBColor[
                0.798413061722744, 0.824719615472648, 
                 0.968322270542458]], {{}, {
                 Directive[
                  RGBColor[
                  0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
                   Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                   TagBox[
                    TooltipBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.8039430656936596, 34.}, {
                    1.1960569343063403`, 34.}, {1.1960569343063403`, 16.}, {
                    0.8039430656936596, 16.}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.1960569343063403`, 26.}, {0.8039430656936597, 
                    26.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 16.}, {1., 6.}}, {{1., 34.}, {1., 
                    42.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.0980284671531702`, 6.}, {0.9019715328468298, 
                    6.}}, {{1.0980284671531702`, 42.}, {0.9019715328468298, 
                    42.}}}]}, {}}]}], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], "42"}, {
                    
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], "34"}, {
                    
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "26"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], "16"}, {
                    
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "6"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {
                    GrayLevel[0]}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 42}, {
                    Style["75%", Bold], 34}, {
                    Style["median", Bold], 26}, {
                    Style["25%", Bold], 16}, {
                    Style["min", Bold], 6}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                    GrayLevel[0]}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {
             AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, Frame -> True, 
              FrameLabel -> {None, None}, 
              FrameTicks -> {{Automatic, Automatic}, {{{0.8039430656936596, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0, 0}}, {
                  1.1960569343063403`, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0, 0}}, {1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.008, 0}}}, {{
                  0.8039430656936596, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0, 0}}, {
                  1.1960569343063403`, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0, 0}}, {1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.008, 0}}}}}, 
              PlotRangePadding -> Scaled[0.02], Ticks -> {None, Automatic}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Differences", "scanner" -> "List", "id" -> 
     "Differences", "position" -> "900", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 GraphicsBox[{{}, 
                   
                   GraphicsComplexBox[{{1., 4.}, {2., 4.}, {3., 2.}, {4., 
                    2.}, {5., 4.}, {6., 2.}, {7., 2.}, {8., 2.}, {9., 2.}, {
                    10., 2.}, {11., 2.}, {12., 4.}, {13., 2.}, {14., 2.}, {1.,
                     0.}, {14., 0.}}, {{{}, {
                    EdgeForm[], 
                    Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 15, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5,
                     4, 3, 2}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
                    14}]}}, {{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    
                    PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
                    14}]}, {}, {}}}], {}}, {
                  FrameLabel -> {None, None}, AxesLabel -> {None, None}, 
                   AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
                    AxesOrigin -> {1, 0}, AxesStyle -> GrayLevel[0.6], 
                   BaseStyle -> {CellBaseline -> Baseline}, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6], FrameTicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10], 
                   LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
                   Method -> {}, PlotLabel -> FormBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    SuperscriptBox["1", "\"st\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1", "\"st\""}]]], 
                    "\" differences\""}, "RowDefault"], TraditionalForm], 
                    Format[#, TraditionalForm]& ], TraditionalForm], 
                    TraditionalForm], PlotRange -> {{1, 14}, {1.6, 4.4}}, 
                   PlotRangeClipping -> True, 
                   PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                   TicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10]}], 
                 GraphicsBox[{{}, 
                   GraphicsComplexBox[{{1., 0.}, {2., -2.}, {3., 0.}, {4., 
                    2.}, {5., -2.}, {6., 0.}, {7., 0.}, {8., 0.}, {9., 0.}, {
                    10., 0.}, {11., 2.}, {12., -2.}, {13., 0.}, {4.5, 0.}, {
                    11.5, 0.}}, {{{
                    EdgeForm[], 
                    Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                    GraphicsGroupBox[{
                    PolygonBox[{{3, 1, 2}, {6, 14, 5}, {13, 15, 12}}]}]}, {
                    EdgeForm[], 
                    Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{3, 14, 4}, {10, 15, 
                    11}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 15, 12, 
                    13}]}}, {{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    
                    PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
                    13}]}, {}, {}}}], {}}, {
                  FrameLabel -> {None, None}, AxesLabel -> {None, None}, 
                   AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
                    AxesOrigin -> {1, 0}, AxesStyle -> GrayLevel[0.6], 
                   BaseStyle -> {CellBaseline -> Baseline}, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6], FrameTicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10], 
                   LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
                   Method -> {}, PlotLabel -> FormBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    SuperscriptBox["2", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"2", "\"nd\""}]]], 
                    "\" differences\""}, "RowDefault"], TraditionalForm], 
                    Format[#, TraditionalForm]& ], TraditionalForm], 
                    TraditionalForm], PlotRange -> {{1, 13}, {-2.8, 2.8}}, 
                   PlotRangeClipping -> True, 
                   PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                   TicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10]}], 
                 GraphicsBox[{{}, 
                   GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7KGMA1DaAZXmQOMLwGioehE0eQkYHwpk0PgK
aHwlNL4KmnlqaPZpoMn/gLmfYfUqEOByQOULofHh5jOEgoE6mv3w8GBAs48B
AHAQHI4=
                    "], {{{
                    EdgeForm[], 
                    Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                    GraphicsGroupBox[{
                    PolygonBox[{{13, 18, 1}, {17, 16, 11}, {15, 14, 4}}]}]}, {
                    
                    EdgeForm[], 
                    Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                    GraphicsGroupBox[{
                    PolygonBox[{{9, 16, 10}, {15, 6, 5}, {17, 19, 12}}], 
                    PolygonBox[{{13, 14, 3, 2}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{1, 13, 2, 3, 14, 4, 15, 5, 6, 7, 8, 9, 10, 16, 
                    11, 17, 12}]}}, {{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    
                    PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
                    12}]}, {}, {}}}], {}}, {
                  FrameLabel -> {None, None}, AxesLabel -> {None, None}, 
                   AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
                    AxesOrigin -> {1, 0}, AxesStyle -> GrayLevel[0.6], 
                   BaseStyle -> {CellBaseline -> Baseline}, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6], FrameTicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10], 
                   LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
                   Method -> {}, PlotLabel -> FormBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    SuperscriptBox["3", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3", "\"rd\""}]]], 
                    "\" differences\""}, "RowDefault"], TraditionalForm], 
                    Format[#, TraditionalForm]& ], TraditionalForm], 
                    TraditionalForm], PlotRange -> {{1, 12}, {-5.2, 3.2}}, 
                   PlotRangeClipping -> True, 
                   PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                   TicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10]}]}}, 
               AutoDelete -> False, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.33]}}}], "Grid"], ImageSize -> 550], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Cumulative sums", "scanner" -> "List", "id" -> 
     "CumulativeSums", "position" -> "1000", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[{6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, \
34, 38, 40, 42}], PlotStyle -> {{Directive[RGBColor[0.2472, 0.24, 0.6], \
AbsoluteThickness[1]]}, {Directive[RGBColor[0.6, 0.24, 0.442893], \
AbsoluteThickness[1]]}, {Directive[RGBColor[0.6, 0.547014, 0.24], \
AbsoluteThickness[1]]}, {Directive[RGBColor[0.24, 0.6, 0.33692], \
AbsoluteThickness[1]]}, {Directive[RGBColor[0.24, 0.593918, 0.6], \
AbsoluteThickness[1]]}}, Mesh -> All, Filling -> Axis, AxesOrigin -> {1, \
0}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, 
              
              GraphicsComplexBox[{{1., 6.}, {2., 16.}, {3., 30.}, {4., 46.}, {
               5., 64.}, {6., 86.}, {7., 110.}, {8., 136.}, {9., 164.}, {10., 
               194.}, {11., 226.}, {12., 260.}, {13., 298.}, {14., 338.}, {
               15., 380.}, {1., 0.}, {15., 0.}}, {{{}, {
                  EdgeForm[], 
                  Directive[{
                    Opacity[0.2], 
                    Hue[0.67, 0.6, 0.6]}], 
                  GraphicsGroupBox[{
                    PolygonBox[{{1, 16, 17, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, {
                  Hue[0.67, 0.6, 0.6], 
                  Directive[
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                   15}]}}, {{
                  Hue[0.67, 0.6, 0.6], 
                  Directive[
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   AbsoluteThickness[1]], 
                  
                  PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                   15}]}, {}, {}}}], {}}, {
             AxesLabel -> {None, None}, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesOrigin -> {1, 0}, BaseStyle -> {CellBaseline -> Baseline}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], ImageSize -> 
              200, LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {}, PlotRange -> {{1, 15.}, {0, 380.}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{None, 
                 Scaled[0.02]}, {None, None}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Greatest common divisor", "scanner" -> "List", "id" -> 
     "GreatestCommonDivisor", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HoldForm[GCD][6, 10, 14, 16, 18, 22, 24, 26, 28, 30, 32, 34, 38, 40, \
42]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             RowBox[{
               TagBox[
                RowBox[{"gcd", "(", 
                  
                  RowBox[{
                   "6", ",", "10", ",", "14", ",", "16", ",", "18", ",", "22",
                     ",", "24", ",", "26", ",", "28", ",", "30", ",", "32", 
                    ",", "34", ",", "38", ",", "40", ",", "42"}], ")"}], 
                HoldForm], "\[LongEqual]", "2"}], BaselinePosition -> 
             Baseline, ImageSize -> 550], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {
        "text" -> 
         "gcd(n_1, n_2) is the greatest common divisor of n_1 and n_2"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/GCD.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/IntegerFunctions/GCD", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/GreatestCommonDivisor.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"gcd", "(", 
                  RowBox[{
                    SubscriptBox["n", "1"], ",", 
                    SubscriptBox["n", "2"]}], ")"}], "\" \"", 
                "\"is the greatest common divisor of\"", "\" \"", 
                SubscriptBox["n", "1"], "\" \"", "\"and\"", "\" \"", 
                SubscriptBox["n", "2"]}, "RowDefault"], TraditionalForm]], 
            "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
   Typeset`pod36$$, Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, 
   Typeset`pod40$$, Typeset`pod41$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`aux38$$ = {
   True, False, {False}, True}, Typeset`aux39$$ = {
   True, False, {False}, True}, Typeset`aux40$$ = {
   True, False, {False}, True}, Typeset`aux41$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "11", "datatypes" -> 
     "", "timedout" -> "List", "timedoutpods" -> "", "timing" -> "4.22", 
     "parsetiming" -> "0.6920000000000001", "parsetimedout" -> "false", 
     "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa22961h5d59eb2da33ac6000034d409h781id11i45375905373516913092", "id" -> 
     "MSPa22971h5d59eb2da33ac600002g315c2deig1ga49", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "59", "related" -> 
     "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa22981h5d59eb2da33ac600001113ddc31ca56b0h5375905373516913092", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "List", "timedoutpods" -> "", "timing" -> 
     "3.494", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "53", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 0., "Date" -> {2017, 1, 8, 7, 31, 53.051821`8.4772752703246},
     "Line" -> 189, "SessionID" -> 23147336927893110934}, 
   Typeset`showpods$$ = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, 
   Typeset`failedpods$$ = {12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
    25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "6,10,14,16,18,22,24,26,28,30,32,34,38,40,42"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
         Typeset`pod41$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$, Typeset`aux40$$, 
         Typeset`aux41$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{707., {713., 718.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
          Typeset`pod41$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$, Typeset`aux40$$, 
          Typeset`aux41$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa22961h5d59eb2da33ac6000034d409h781id11i45375905373516913092", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.6928495132522497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=."}]], "Input",
 CellChangeTimes->{{3.692926178236435*^9, 3.6929261829649982`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6929262173969193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", "b"}], "+", 
      RowBox[{"a", "*", "c"}], "+", 
      RowBox[{"b", "*", "c"}]}], "\[Equal]", "143"}], " ", "&&", " ", 
    RowBox[{"0", "<", "a", "<=", "b", "<=", "c"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "Integers", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.692926146664307*^9, 3.692926210988106*^9}, {
  3.692926253023044*^9, 3.692926294373356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "1"}], ",", 
     RowBox[{"c", "\[Rule]", "71"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}], ",", 
     RowBox[{"c", "\[Rule]", "47"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "3"}], ",", 
     RowBox[{"c", "\[Rule]", "35"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "5"}], ",", 
     RowBox[{"c", "\[Rule]", "23"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "7"}], ",", 
     RowBox[{"c", "\[Rule]", "17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "8"}], ",", 
     RowBox[{"c", "\[Rule]", "15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "11"}], ",", 
     RowBox[{"c", "\[Rule]", "11"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "2"}], ",", 
     RowBox[{"b", "\[Rule]", "5"}], ",", 
     RowBox[{"c", "\[Rule]", "19"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "3"}], ",", 
     RowBox[{"b", "\[Rule]", "5"}], ",", 
     RowBox[{"c", "\[Rule]", "16"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "5"}], ",", 
     RowBox[{"b", "\[Rule]", "7"}], ",", 
     RowBox[{"c", "\[Rule]", "9"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.692926221297763*^9, 3.692926255242817*^9, 
  3.692926297496812*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cn", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "154"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "286"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "472"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "658"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"46", ",", "712"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "936"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "862"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"70", ",", "1072"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"85", ",", "1312"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "1662"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"110", ",", "1882"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"120", ",", "2320"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"line", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"Cn", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Cn", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"line", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "120"}], "}"}]}], "]"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6929279803481827`*^9, 3.6929279803493967`*^9}, {
  3.692928817077446*^9, 3.692928825195595*^9}, {3.692928900509471*^9, 
  3.692928998516693*^9}, {3.6929290342467823`*^9, 3.6929290371572657`*^9}, {
  3.692929106636087*^9, 3.692929308263523*^9}, {3.6929294021720057`*^9, 
  3.6929294706862917`*^9}, {3.692931788335672*^9, 3.692931794764906*^9}, {
  3.692931826909799*^9, 3.692931827122994*^9}, {3.692933708509095*^9, 
  3.692933713962376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "66.29915744448734`"}], "+", 
  RowBox[{"17.823781021688266`", " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.6929289723481607`*^9, 3.6929290024698*^9, 3.69292904130051*^9, 
   3.69292931135128*^9, 3.692929406103868*^9, 3.692929473830844*^9, {
   3.692931797893115*^9, 3.692931830425013*^9}, 3.6929337179470863`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{2., 18.}, {5., 58.}, {10., 154.}, {20., 286.}, {30., 
       472.}, {40., 658.}, {46., 712.}, {50., 936.}, {60., 862.}, {70., 
       1072.}, {85., 1312.}, {100., 1662.}, {110., 1882.}, {120., 
       2320.}}]}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVzHsw1AkAB3DHlMcMgwihcmHELraHsLTfbbVaZS2FVn6XPHrMrZ5KmbC4
20WSkLYN+yPVJSGzuajY2Rwxyciym+tCrykq5K1xzv3xne985zvzsYs+FhKn
raWlFbiU/3v6TXuL/YWWrYM0t2r7Ap5CVWp5jqkpZ/xrNmO+/ghPAfOuaEtN
HcNmtimZyuApzvAq1ToaJaP2fIlU0BekMPlmkT+nfskgr7zWXBJxFQOPuccm
1W8ZwraI0L6POxVs++F/xtXfGUyXcG7MbbZiTr3lyphaG6IPMuE8z1PxlHW7
ort8BQqZfPbNDZthM9DwMZpii+pvJadMXgXBTLC/Upe1Dr05I48NwyOQT2M/
4oY64fm1geCO7mi8krgrxo2paL0uEmZZHMaFitQubSsaohz1yzgv4mFR+C6r
oGQj1qpS/F0fnIB4D2fry+nN2FdlUTwVkoBTXmX729M98WlH6RHf9YnwG51P
OvrOG4rzT81YXeeQ5hN8YJWnL+hVZY7fD52Hd/U1eUozA7pk/H07r1QIZseF
zwyZyDX/kqP7VYg5F+M31NBtYPlKkpv46fC5W0UWFbHQ/pa062jOwLhpQFSY
0g+TPWflcsPf8T4nKuykLhv+t9syBhJF4Iwmcj54+AOtH5if28X4EqN3Sp66
A9FtST4bPbPAtrfQFis5CGMLhrtl2TDtdMytHQ3AqDFVHDR6ATaZNTwPj124
/yQ2ynDfRUhcvIxXHAqEVf2vTpXVuehYxdw8cZmLYErXjes/LsHbRpnn1hcE
vlJ172BdHox0yhMOpPNAFK7/aTTiMlanrfHhOwYjQd1w8qpJPvQdIutD2pY2
f9Z3uCUfrr5WNYlECHaklQopggKcfGP6NEBrN2irhEO5doUYncgJ5Uh2Y2Rv
e8NgRyH83VqlHOoeXOpTjLw+fgVNE/QfMy/2wP+vCfqcfRGOUjb0d8eFopuf
q7Osswi+32JVfP0wHN8f+9k94yq221sGGpaHYcignL2LKoGTMPuscks46FMX
F0xUEjjHeTU79Iejkvfg5UzmNcQ1Hf5NfmIvRoL91nTSpGgmVbHj5nygxShb
+UmKyT8WZ9z+5CPltJgbXXwdMQ539aWBEch7fih7nFWMcecCj7qxCNQXZrwn
54rxsOLH0FTmPtRo69YzbpQgwm8d6KsjkVfjOZTJKYV1vLjBVREJUedN5+8L
pTA3ENwPDCfAvZw0EnBLhgpWctIYn8AnyWqZ9x0ZNiTnsgoiCaSTyhDnKhm4
Y7W9mgME5DUGjfp1Moj6puZiBAQsX0gznz2RYbY8dVtSGoH3Bo8c2L0y9NML
em7dJeCrXKhZq03i8OmKYk41AYPWriyJDonp6gdxX2oJ9LWXxRgvI2H6s2aG
Vk/gePd2Cy09Ejv1bG2eKAjcGLyYMmBI4rHqVmxPLwG9RdvAUisSAUYPqWc0
BHq1xxxXWpPQ+LdPW/5NoGy5UivXhsRk40jmL4ME6EYH5clrSFDL3O99HiZw
1LbamnBY8vqZZ3K+Lv12wimV45JntpvhNkZA1yGka5cTiYPi090JU0seZTrd
x2XJU4ikFrME4t2fRcopJNLnr8Y0zhPw3iT1oLiSMN50h0IsEFjuKTCucCNR
Gt84tbhIoIe+ddiaRuI/PwxA5Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$91464#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 120.}, {0, 2320.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6929289723481607`*^9, 3.6929290024698*^9, 3.69292904130051*^9, 
   3.69292931135128*^9, 3.692929406103868*^9, 3.692929473830844*^9, {
   3.692931797893115*^9, 3.692931830425013*^9}, 3.692933718007557*^9}]
}, Open  ]]
},
WindowSize->{774, 673},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 103, 1, 41, "WolframAlphaLong"],
Cell[664, 23, 705, 22, 32, "Input"],
Cell[CellGroupData[{
Cell[1394, 49, 212, 4, 32, "Input"],
Cell[1609, 55, 146, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1792, 62, 383, 9, 32, "Input"],
Cell[2178, 73, 435, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2650, 87, 970, 22, 54, "Input"],
Cell[3623, 111, 9311, 222, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12971, 338, 382, 8, 32, "Input"],
Cell[13356, 348, 169, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13562, 356, 418, 13, 32, "Input"],
Cell[13983, 371, 850, 14, 42, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14870, 390, 403, 12, 32, "Input"],
Cell[15276, 404, 377, 8, 24, "Message"],
Cell[15656, 414, 380, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16073, 431, 547, 14, 96, "Input"],
Cell[16623, 447, 385, 8, 24, "Message"],
Cell[17011, 457, 347, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17395, 472, 940, 24, 54, "Input"],
Cell[18338, 498, 88791, 1454, 400, "Output"]
}, Open  ]],
Cell[107144, 1955, 86046, 1412, 412, "Input"],
Cell[CellGroupData[{
Cell[193215, 3371, 614, 16, 32, "Input"],
Cell[193832, 3389, 717, 12, 24, "Message"],
Cell[194552, 3403, 526, 15, 32, "Output"]
}, Open  ]],
Cell[195093, 3421, 182, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[195300, 3430, 655, 18, 54, "Input"],
Cell[195958, 3450, 1134, 34, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197129, 3489, 188, 2, 41, "WolframAlphaLong"],
Cell[197320, 3493, 63942, 1334, 1441, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261299, 4832, 170, 4, 32, "Input"],
Cell[261472, 4838, 136, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261645, 4846, 526, 14, 32, "Input"],
Cell[262174, 4862, 1802, 54, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264013, 4921, 1979, 56, 96, "Input"],
Cell[265995, 4979, 357, 7, 32, "Output"],
Cell[266355, 4988, 3619, 72, 272, "Output"]
}, Open  ]]
}
]
*)

